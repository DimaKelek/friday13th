{"version":3,"sources":["Api/authAPI.ts","Store/app-reducer.ts","Components/Feature/Authorization/AuthCommon/utils/errorHandler.ts","Store/auth-reducer.ts","Components/Common/MyButton/MyButton.tsx","Components/Feature/Profile/Profile.tsx","Components/Common/MyTextInput/MyTextInput.tsx","Components/Common/MyCheckbox/MyCheckbox.tsx","Api/register-api.ts","Store/registration-reducer.ts","Components/Feature/Authorization/Login/Login.tsx","Components/Feature/Authorization/Registration/Registration.tsx","Components/Common/MyEditableSpan/MyEditableSpan.tsx","Components/Common/MySelect/MySelect.tsx","Components/Common/MyRadioButton/MyRadioButton.tsx","Components/Common/Ranges/MyRange/MyRange.tsx","Components/Common/Ranges/MyDoubleRange/MyDoubleRange.tsx","Components/Common/SandBox/SandBox.tsx","Components/Common/Page404/Images/chakres.png","Components/Common/Page404/Images/react.svg","Components/Common/Page404/Images/typescript.svg","Components/Common/Page404/Images/redux.svg","Components/Common/Page404/Images/html5.svg","Components/Common/Page404/Images/css3.svg","Components/Common/Page404/Images/jest.png","Components/Common/Page404/FrontEndMan/FrontEndMan.tsx","Components/Common/Page404/Page404.tsx","Components/Feature/Authorization/AuthCommon/Field/Field.tsx","Components/Feature/Authorization/RecoveryPass/message.svg","Components/Feature/Authorization/RecoveryPass/RecoveryPass.tsx","Api/api.ts","Store/recovery-pass-reducer.ts","Components/Feature/Authorization/RecoveryPass/RecoveryContainer.tsx","Components/Common/ErrorSnackbar/ErrorSnackbar.tsx","Components/Feature/Authorization/NewPass/NewPass.tsx","Components/Feature/Authorization/NewPass/NewPassContainer.tsx","App/Routes.tsx","App/App.tsx","reportWebVitals.ts","Store/profile-reducer.ts","Store/store.ts","index.tsx","Components/Common/SandBox/SandBox.module.css","Components/Common/Page404/FrontEndMan/FrontEndMan.module.css","Components/Feature/Profile/Profile.module.css","Components/Common/MyTextInput/MyTextInput.module.css","Components/Common/MyCheckbox/MyCheckbox.module.css","Components/Common/MyRadioButton/MyRadioButton.module.css","Components/Common/MyButton/MyButton.module.css","Components/Feature/Authorization/Login/Login.module.css","Components/Common/MyEditableSpan/MyEditSpan.module.css","Components/Feature/Authorization/RecoveryPass/RecoveryPass.module.css","Components/Common/MySelect/MySelect.module.css","Components/Feature/Authorization/AuthCommon/Styles/CommonStyles.module.css","Components/Common/Page404/Page404.module.css","Components/Feature/Authorization/NewPass/NewPass.module.css","Components/Feature/Authorization/Registration/Registration.module.css","Components/Common/Ranges/MyRange/MyRange.module.css","Components/Common/Ranges/MyDoubleRange/MyRangeDouble.module.css"],"names":["instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","status","error","isInitialized","setAppStatus","type","appActionVariables","SET_STATUS","setError","SER_ERROR","setInitialized","SET_INITIALIZED","handleServerNetworkError","e","dispatch","response","message","console","log","userData","isLoggedIn","setUserData","setIsLoggedIn","value","me","a","MyButton","props","disabled","onClick","className","children","variant","restProps","finalClassName","S","button","button_box","Profile","useSelector","state","auth","useDispatch","logoutHandler","useCallback","to","profile","profileWrap","avatar","src","alt","name","MyTextInput","onChange","onChangeText","onKeyPress","onEnter","errorClassName","finalInputClassName","input","errorInput","finalErrorClassName","textInput","currentTarget","key","MyCheckbox","onChangeChecked","checked","labelCheckbox","check","checkInput","checkbox","labelText","instanse","RegisterAPI","email","password","register","setRegistrationStatus","Login","app","useEffect","formik","useFormik","initialValues","rememberMe","validate","values","errors","test","length","onSubmit","resetForm","Sc","page_container","form_container","handleSubmit","fields","placeholder","touched","getFieldProps","style","minWidth","s","forgot","CircularProgress","link_box","title","link","Registration","registration","signupForm","confirmedPassword","formData","form","autoComplete","MyEditableSpan","autoFocus","onBlur","spanProps","onDoubleClick","restSpanProps","useState","editMode","setEditMode","editSpan_box","span_box","line","MySelect","options","onChangeOption","mappedOptions","map","o","i","select_box","select","MyRadioButton","onChangeCallback","finalRadioStyle","radio_container","radio","fakeRadio","radio_box","MyRange","onChangeRange","range","Slider","MyDoubleRange","onChangeRangeFirst","onChangeRangeSecond","min","max","doubleRange","onChangeDoubleRange","SandBox","editLabel","setEditLabel","setSelect","text","setText","setCheck","rangeStart","setRangeStart","rangeEnd","setRangeEnd","sandBox_container","textInput_box","alert","reactCheckbox_box","editableSpan_box","undefined","mySelect_box","FrontEndMan","chakres_box","chakres","react","iconReact","ts","iconTS","redux","iconRedux","html5","iconHTML","css3","iconCSS","jest","iconJest","Page404","page404_box","man","createField","handler","blur","RecoveryPass","React","memo","submit","emailValue","changeHandler","isSand","instruction","Message","messageIsSand","passIsRecovered","setStatusSendingMessage","recoveryActionVariables","SET_SEND_MESSAGE","SET_PASS_RECOVERY","RecoveryContainer","recovery","from","handleChange","Alert","elevation","ErrorSnackbar","appError","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","NewPass","passwordValue","token","NewPassContainer","isRecovered","window","location","hash","replace","resetPasswordToken","Routes","exact","path","render","App","position","top","textAlign","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.80a59f18.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n  withCredentials: true\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n  login(data: LoginDataType) {\r\n    return instance.post<LoginResponseType>('/auth/login', data)\r\n  },\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {})\r\n  },\r\n  logout() {\r\n    return instance.delete<LogoutResponseType>('/auth/me', {})\r\n  }\r\n}\r\n\r\nexport type LoginDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n  _id: string\r\n  email: string\r\n  name: string\r\n  avatar?: string\r\n  publicCardPacksCount: number\r\n}\r\n\r\ntype LoginResponseType = UserDataType & {\r\n  error?: string\r\n}\r\n\r\ntype LogoutResponseType = {\r\n  info?: string\r\n  error?: string\r\n}","const initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case appActionVariables.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case appActionVariables.SER_ERROR:\r\n            return {...state, error: action.error}\r\n        case appActionVariables.SET_INITIALIZED:\r\n            return {...state, isInitialized: true}\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAppStatus = (status: RequestStatusType) => ({type: appActionVariables.SET_STATUS, status} as const)\r\nexport const setError = (error: string) => ({type: appActionVariables.SER_ERROR, error} as const)\r\nexport const setInitialized = () => ({type: appActionVariables.SET_INITIALIZED} as const)\r\n// thunks\r\n\r\n// types\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppStateType = typeof initialState\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setInitialized>\r\n\r\n// variables\r\nconst appActionVariables = {\r\n    SET_STATUS: \"APP/SET-STATUS\" as const,\r\n    SER_ERROR: \"APP/SET-ERROR\" as const,\r\n    SET_INITIALIZED: \"APP/SET-INITIALIZED\" as const,\r\n}","import {Dispatch} from \"redux\"\r\nimport {AppActionsType, setAppStatus, setError} from \"../../../../../Store/app-reducer\";\r\n\r\nexport const handleServerNetworkError = (e: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n    dispatch(setError(error))\r\n    dispatch(setAppStatus(\"failed\"))\r\n    console.log('Error: ', {...e})\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<AppActionsType>","import {authAPI, LoginDataType, UserDataType} from '../Api/authAPI';\r\nimport {AppThunk} from './store';\r\nimport {setAppStatus, setInitialized} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    userData: null as UserDataType | null,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: AuthActionsType): AuthStateType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET_USER_DATA':\r\n            return {...state, userData: action.userData}\r\n        case 'LOGIN/SET_IS_LOGGED_IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setUserData = (userData: UserDataType | null) =>\r\n    ({type: 'LOGIN/SET_USER_DATA', userData} as const)\r\nexport const setIsLoggedIn = (value: boolean) =>\r\n    ({type: 'LOGIN/SET_IS_LOGGED_IN', value} as const)\r\n\r\n// thunks\r\n\r\nexport const login = (data: LoginDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.login(data)\r\n        dispatch(setUserData(response.data))\r\n        dispatch(me())\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await authAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setUserData(null))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const me = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.me()\r\n        dispatch(setUserData(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setInitialized())\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setInitialized())\r\n    }\r\n}\r\n\r\n// types\r\ntype AuthStateType = typeof initialState\r\nexport type AuthActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsLoggedIn>","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    variant?: ElementColorVariants\r\n}\r\nexport type ElementColorVariants = \"light\" | \"dark\" | \"standard\" | \"purple\"\r\nexport const MyButton: React.FC<MyButtonPropsType> = props => {\r\n    const {disabled, onClick, className, children, variant = \"standard\", ...restProps} = props\r\n    const finalClassName = `${S.button} ${variant ? S[variant] : className}`\r\n\r\n    return (\r\n        <div className={S.button_box}>\r\n            <button\r\n                className={finalClassName}\r\n                onClick={onClick}\r\n                disabled={disabled}\r\n                {...restProps}\r\n            >{children}</button>\r\n        </div>\r\n    );\r\n}","import React, {useCallback} from 'react';\r\nimport S from './Profile.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from '../../../Store/store';\r\nimport {UserDataType} from '../../../Api/authAPI';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {logout} from '../../../Store/auth-reducer';\r\nimport {MyButton} from \"../../Common/MyButton/MyButton\";\r\n\r\ntype ProfilePropsType = {}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = props => {\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(state => state.auth.userData)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    if (userData === null) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <div className={S.profile}>\r\n            <div className={S.profileWrap}>\r\n                <h4>Profile page!</h4>\r\n                <div className={S.avatar}>\r\n                    <img src={userData.avatar || \"\"} alt='avatar'/>\r\n                </div>\r\n                <div className={S.name}>\r\n                    <p>{userData.name}</p>\r\n                </div>\r\n                <div>\r\n                    <MyButton className={S.button} onClick={logoutHandler}>Logout</MyButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport S from './MyTextInput.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    errorClassName?: string\r\n    variant?: \"light\" | \"dark\" | \"standard\" | \"purple\"\r\n}\r\n\r\nexport const MyTextInput: React.FC<SuperInputTextPropsType> = props => {\r\n    const {type = 'text', onChange, onChangeText, onKeyPress, onEnter, error,\r\n        className, errorClassName, variant = \"standard\", ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalInputClassName = `${S.input} ${variant ? S[variant] : className} ${error && S.errorInput}`\r\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\r\n\r\n    return (\r\n        <div className={S.textInput}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalErrorClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./MyCheckbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype NeonCheckboxPropsType = DefaultInputPropsType & {\r\n    checked?: boolean\r\n    onChangeChecked?: (e: boolean) => void\r\n}\r\n\r\nexport const MyCheckbox: React.FC<NeonCheckboxPropsType> = props => {\r\n    const {onChange, children, onChangeChecked, checked, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    const labelCheckbox = `${S.check}`\r\n\r\n    return (\r\n        <label className={labelCheckbox}>\r\n            <input\r\n                checked={checked}\r\n                onChange={onChangeCallback}\r\n                type={\"checkbox\"}\r\n                className={S.checkInput}\r\n                {...restProps}\r\n            />\r\n            <span className={S.checkbox}/>\r\n            {children && <span className={S.labelText}>{children}</span>}\r\n        </label>\r\n    )\r\n}","import {SignupFormDataType} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport type AuthRegisterResponseType = {\r\n    addedUser: any\r\n    error?: string\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    signup({email, password}: SignupFormDataType) {\r\n        return (\r\n            instanse.post<AuthRegisterResponseType>(`auth/register`, {email, password})\r\n        )\r\n    },\r\n}","import {SignupFormDataType} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport {RegisterAPI} from \"../Api/register-api\";\r\nimport {AppThunk} from \"./store\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    register: false\r\n}\r\n\r\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: RegistrationActionsType): RegistrationStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTRATION/SET-STATUS':\r\n            return {...state, register: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setRegistrationStatus = (status: boolean) =>\r\n    ({type: 'REGISTRATION/SET-STATUS', status} as const)\r\n\r\n// thunks\r\nexport const signup = (formData: SignupFormDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await RegisterAPI.signup(formData)\r\n        dispatch(setRegistrationStatus(true))\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n    catch (e) {\r\n       handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\ntype RegistrationStateType = typeof initialState\r\nexport type RegistrationActionsType = ReturnType<typeof setRegistrationStatus>","import React, {useEffect} from \"react\";\r\nimport {AppStoreType} from '../../../../Store/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport {login} from '../../../../Store/auth-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './Login.module.css'\r\nimport Sc from '../AuthCommon/Styles/CommonStyles.module.css'\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../../../Common/MyCheckbox/MyCheckbox\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {setRegistrationStatus} from \"../../../../Store/registration-reducer\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setRegistrationStatus(false))\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or less';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>IT - Incubator</h3>\r\n                <h4>Sing In</h4>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            variant=\"light\"\r\n                            placeholder={\"Email\"}\r\n                            error={formik.touched.email ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            variant=\"light\"\r\n                            placeholder={\"Password\"}\r\n                            error={formik.touched.password ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <NavLink className={s.forgot} to='/recovery'>Forgot Password</NavLink>\r\n                    </div>\r\n                    <div className={s.checkbox}>\r\n                        <MyCheckbox  {...formik.getFieldProps('rememberMe')}>Remember Me</MyCheckbox>\r\n                    </div>\r\n                    <div className={Sc.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton className={s.button} type={'submit'} variant='purple'>Login</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Don't have an account?</span>\r\n                    <NavLink to=\"/registration\"><span className={Sc.link}>Sign Up</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useFormik} from 'formik';\r\nimport S from \"./Registration.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {signup} from \"../../../../Store/registration-reducer\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ntype RegistrationPropsType = {}\r\n\r\ntype SignupFormErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmedPassword?: string\r\n}\r\n\r\nexport type SignupFormDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const register = useSelector<AppStoreType, boolean>(state => state.registration.register)\r\n    const dispatch = useDispatch()\r\n\r\n    const signupForm = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n        },\r\n        validate: (formData) => {\r\n            const errors: SignupFormErrorType = {};\r\n            if (!formData.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formData.email)) {\r\n                errors.email = 'Invalid email address.';\r\n            }\r\n            if (!formData.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (formData.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            }\r\n            if (formData.password && !formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'Confirm your password'\r\n            } else if (formData.password !== formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            if(values.password === values.confirmedPassword) {\r\n                dispatch(signup({email: values.email, password: values.password}))\r\n                signupForm.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    if (register) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Sign Up</h4>\r\n                <form onSubmit={signupForm.handleSubmit} className={S.form} autoComplete={'off'}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            error={signupForm.touched.email ? signupForm.errors.email : null}\r\n                            {...signupForm.getFieldProps('email')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Email\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.password ? signupForm.errors.password : null}\r\n                            {...signupForm.getFieldProps('password')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.confirmedPassword ? signupForm.errors.confirmedPassword : null}\r\n                            {...signupForm.getFieldProps('confirmedPassword')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Confirm password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                    </div>\r\n                    {status === \"loading\"\r\n                        ? <CircularProgress/>\r\n                        : <div>\r\n                            <NavLink to={'/login'}><MyButton type={'button'} variant={\"light\"}>Cancel</MyButton></NavLink>\r\n                            <MyButton type={'submit'} variant={\"purple\"}>Sign Up</MyButton>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\nimport {MyButton} from \"../MyButton/MyButton\";\nimport S from \"./MyEditSpan.module.css\"\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType\n}\n\nexport const MyEditableSpan: React.FC<SuperEditableSpanType> = props => {\n    const {autoFocus, onBlur, onEnter, spanProps, ...restProps} = props\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n    const editCallback = () => {\n        setEditMode(true)\n    }\n    return (\n        <div className={S.editSpan_box}>\n            {editMode\n                ? <MyTextInput autoFocus onBlur={onBlurCallback} onEnter={onEnterCallback} {...restProps}/>\n                : <>\n                    <MyButton onClick={editCallback}>✎ Edit</MyButton>\n                    <div className={S.span_box}>\n                        <span onDoubleClick={onDoubleClickCallBack}\n                             className={className} {...restSpanProps}\n                        >{children || restProps.value}</span>\n                        <span className={S.line}/>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\nimport S from \"./MySelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: any) => void\n}\n\nexport const MySelect: React.FC<SuperSelectPropsType> = props => {\n    const {options, onChange, onChangeOption, ...restProps} = props\n\n    const mappedOptions: any[] = options ? options\n        .map((o, i) => <option key={\"option - \" + i}>{o}</option>) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={S.select_box}>\n            <select onChange={onChangeCallback} className={S.select} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport S from \"./MyRadioButton.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nexport const MyRadioButton: React.FC<SuperRadioPropsType> = props => {\n    const {type, name, options, value, onChange, onChangeOption, className, ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    const finalRadioStyle = `${S.radio_container} ${className}`\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i} className={finalRadioStyle}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                value={o}\n                name={name}\n                checked={o === value}\n                className={S.radio}\n                {...restProps}\n            />\n            <span className={S.fakeRadio}/>\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <div className={S.radio_box}>{mappedOptions}</div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport S from \"./MyRange.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype SuperRangePropsType = DefaultInputPropsType & {\n    onChangeRange?: (value: number) => void\n    value?: number | number[]\n};\n\nexport const MyRange: React.FC<SuperRangePropsType> = props => {\n    const {onChangeRange, value, ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeRange && onChangeRange(value as number);\n    }\n\n    return (\n        <div className={S.range}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n            />\n        </div>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport S from \"./MyRangeDouble.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRangeFirst?: (value: number) => void\n    onChangeRangeSecond?: (value: number) => void\n    value: [number, number]\n    disabled?: boolean\n    min?: number\n    max?: number\n}\n\nexport const MyDoubleRange: React.FC<SuperDoubleRangePropsType> = props => {\n    const {onChangeRangeFirst, onChangeRangeSecond, value, disabled, min, max, ...restProps} = props\n\n    const onChangeDoubleRange = (value: [number, number]) => {\n        onChangeRangeFirst && onChangeRangeFirst(value[0])\n        onChangeRangeSecond && onChangeRangeSecond(value[1])\n    }\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeDoubleRange(value as [number, number])\n    }\n\n    return (\n        <div className={S.doubleRange}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n                disabled={disabled}\n                min={min}\n                max={max}\n            />\n        </div>\n    );\n}","import React, {useState} from \"react\";\r\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\r\nimport S from \"./SandBox.module.css\"\r\nimport {MyButton} from \"../MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../MyCheckbox/MyCheckbox\";\r\nimport {MyEditableSpan} from \"../MyEditableSpan/MyEditableSpan\";\r\nimport {MySelect} from \"../MySelect/MySelect\";\r\nimport {MyRadioButton} from \"../MyRadioButton/MyRadioButton\";\r\nimport {MyRange} from \"../Ranges/MyRange/MyRange\";\r\nimport {MyDoubleRange} from \"../Ranges/MyDoubleRange/MyDoubleRange\";\r\n\r\nexport const SandBox: React.FC = props => {\r\n    const options = [\"React\", \"Redux\", \"Typescript\"]\r\n    const [editLabel, setEditLabel] = useState<string>(\"Yooooooooo\")\r\n    const [select, setSelect] = useState<string>(options[0])\r\n    const [text, setText] = useState<string>('')\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [rangeStart, setRangeStart] = useState<number>(0)\r\n    const [rangeEnd, setRangeEnd] = useState<number>(100)\r\n\r\n    // const error = text ? '' : 'error'\r\n    const error = \"\"\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n    const myButtonCallback = () => {\r\n        alert(\"Здароукиииииииииииии!!\")\r\n    }\r\n    const checkboxTestCallback = () => {\r\n        alert(\"Value my checkbox: \" + check)\r\n    }\r\n\r\n    return (\r\n        <div className={S.sandBox_container}>\r\n            <div className={S.textInput_box}>\r\n                <span>Text Input</span>\r\n                <div>\r\n                    <MyTextInput\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        variant={\"light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.button_box}>\r\n                <span>My Button</span>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={myButtonCallback}\r\n                        variant={\"light\"}\r\n                    >Button</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.reactCheckbox_box}>\r\n                <span>My ReactCheckbox</span>\r\n                <div><MyCheckbox checked={check} onChangeChecked={setCheck}>Test Label</MyCheckbox></div>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={checkboxTestCallback}\r\n                        variant={\"dark\"}\r\n                    >Test</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.editableSpan_box}>\r\n                <span>My EditableSpan</span>\r\n                <div>\r\n                    <MyEditableSpan\r\n                        value={editLabel}\r\n                        onChangeText={setEditLabel}\r\n                        spanProps={{children: editLabel ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.mySelect_box}>\r\n                <span>My Select</span>\r\n                <div>\r\n                    <MySelect\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.radio_box}>\r\n                <span>My Radio Button</span>\r\n                <div>\r\n                    <MyRadioButton\r\n                        name={'radio'}\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.range}>\r\n                <span>My Ranges</span>\r\n                <div>\r\n                    <span>Start value: {rangeStart}</span>\r\n                    <span>End value: {rangeEnd}</span>\r\n                    <MyRange\r\n                        value={rangeStart}\r\n                        onChangeRange={setRangeStart}\r\n                    />\r\n                    <MyDoubleRange\r\n                        value={[rangeStart, rangeEnd]}\r\n                        onChangeRangeFirst={setRangeStart}\r\n                        onChangeRangeSecond={setRangeEnd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chakres.d0843979.png\";","export default __webpack_public_path__ + \"static/media/react.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/typescript.b6a67c48.svg\";","export default __webpack_public_path__ + \"static/media/redux.7704ea70.svg\";","export default __webpack_public_path__ + \"static/media/html5.10080bf9.svg\";","export default __webpack_public_path__ + \"static/media/css3.b0696b45.svg\";","export default __webpack_public_path__ + \"static/media/jest.05a3e041.png\";","import React from \"react\";\r\nimport S from \"./FrontEndMan.module.css\";\r\nimport chakres from \"../Images/chakres.png\";\r\nimport iconReact from \"../Images/react.svg\";\r\nimport iconTS from \"../Images/typescript.svg\";\r\nimport iconRedux from \"../Images/redux.svg\";\r\nimport iconHTML from \"../Images/html5.svg\";\r\nimport iconCSS from \"../Images/css3.svg\";\r\nimport iconJest from \"../Images/jest.png\";\r\n\r\nexport const FrontEndMan: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.chakres_box}>\r\n            <img className={S.chakres} src={chakres} alt=\"chakres\"/>\r\n            <div className={S.react}><img src={iconReact} alt=\"React\"/></div>\r\n            <div className={S.ts}><img src={iconTS} alt=\"TS\"/></div>\r\n            <div className={S.redux}><img src={iconRedux} alt=\"Redux\"/></div>\r\n            <div className={S.html5}><img src={iconHTML} alt=\"HTML\"/></div>\r\n            <div className={S.css3}><img src={iconCSS} alt=\"CSS\"/></div>\r\n            <div className={S.jest}><img src={iconJest} alt=\"Jest\"/></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Page404.module.css\"\r\nimport {FrontEndMan} from \"./FrontEndMan/FrontEndMan\";\r\n\r\ntype Page404PropsType = {}\r\n\r\nexport const Page404: React.FC<Page404PropsType> = props => {\r\n    return (\r\n        <div className={S.page404_box}>\r\n            <div className={S.man}>\r\n                <span>Error 404</span>\r\n                <FrontEndMan/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {ElementColorVariants} from \"../../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\n\r\nexport const createField = (name: string, value: string, error?: string | null,\r\n                            handler?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n                            variant?: ElementColorVariants, placeholder?: string, type?: string,\r\n                            blur?: (e: React.FocusEvent<any>) => void) => {\r\n\r\n    return (\r\n        <>\r\n            <MyTextInput\r\n                variant={variant}\r\n                placeholder={placeholder}\r\n                type={type}\r\n                onChange={handler}\r\n                name={name}\r\n                onBlur={blur}\r\n                value={value}\r\n                style={{minWidth: \"300px\"}}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/message.613ffddc.svg\";","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./RecoveryPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {RecoveryFormikErrorType} from \"./RecoveryContainer\";\r\nimport message from \"./message.svg\"\r\n\r\ntype RecoveryPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    status: RequestStatusType\r\n    errors: RecoveryFormikErrorType\r\n    isSand: boolean\r\n}\r\n\r\nexport const RecoveryPass: React.FC<RecoveryPassPropsType> = React.memo(props => {\r\n    const {submit, emailValue, changeHandler, status, errors, isSand} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                {!isSand\r\n                    ? <div>\r\n                        <h4>Recovery password</h4>\r\n                        <form onSubmit={submit}>\r\n                            <div className={Sc.fields}>\r\n                                {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\", \"text\")}\r\n                            </div>\r\n                            <span className={S.instruction}>\r\n                                Enter your email address and we will send you further instructions\r\n                            </span>\r\n                            <div className={S.button_box}>\r\n                                {status === \"loading\"\r\n                                    ? <CircularProgress/>\r\n                                    : <MyButton variant=\"purple\" type=\"submit\">Send Instructions</MyButton>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        <div className={Sc.link_box}>\r\n                            <span className={Sc.title}>Did you remember your password?</span>\r\n                            <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                        </div>\r\n                    </div>\r\n                    : <Message email={emailValue}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype MessagePropsType = {\r\n    email: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div>\r\n            <img src={message} alt=\"message\"/>\r\n            <h4>Check your Email</h4>\r\n            <span className={S.instruction}>\r\n                We’ve sent an Email with instructions to {props.email}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nimport {ForgotPasswordRequest, RecoveryRequestType} from \"../Store/recovery-pass-reducer\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    forgot(data: ForgotPasswordRequest) {\r\n        return instanse.post<ResponseType>(`/auth/forgot`, data)\r\n    },\r\n    recoveryPass(data: RecoveryRequestType) {\r\n        return instanse.post<ResponseType>(`/auth/set-new-password`, data)\r\n    }\r\n}\r\n\r\ntype ResponseType = {\r\n    info?: string\r\n    error?: string\r\n}","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    messageIsSand: false,\r\n    passIsRecovered: false\r\n}\r\n\r\nexport const recoveryPassReducer = (state: RecoveryPassStateType = initialState, action: RecoveryPassActionsType): RecoveryPassStateType => {\r\n    switch (action.type) {\r\n        case recoveryActionVariables.SET_SEND_MESSAGE:\r\n            return {...state, messageIsSand: action.status}\r\n        case recoveryActionVariables.SET_PASS_RECOVERY:\r\n            return {...state, passIsRecovered: action.status}\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setStatusSendingMessage = (status: boolean) => ({type: recoveryActionVariables.SET_SEND_MESSAGE, status})\r\nexport const setStatusPassRecovery = (status: boolean) => ({type: recoveryActionVariables.SET_PASS_RECOVERY, status})\r\nexport const forgotPass = (data: ForgotPasswordRequest): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.forgot(data)\r\n        dispatch(setStatusSendingMessage(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\nexport const recovery = (data: RecoveryRequestType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.recoveryPass(data)\r\n        dispatch(setStatusPassRecovery(true))\r\n        dispatch(setStatusSendingMessage(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RecoveryRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type ForgotPasswordRequest = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RecoveryPassStateType = typeof initialState\r\nexport type RecoveryPassActionsType =\r\n    ReturnType<typeof setStatusSendingMessage>\r\n    | ReturnType<typeof setStatusPassRecovery>\r\n\r\n// variables\r\nconst recoveryActionVariables = {\r\n    SET_SEND_MESSAGE: \"RECOVERY/SET-STATUS-SEND-MESSAGE\",\r\n    SET_PASS_RECOVERY: \"RECOVERY/SET-STATUS-PASS-RECOVERY\",\r\n}","import React from \"react\";\r\nimport {RecoveryPass} from \"./RecoveryPass\";\r\nimport {useFormik} from \"formik\";\r\nimport {forgotPass} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\nexport type RecoveryFormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RecoveryContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isSand = useSelector<AppStoreType, boolean>(state => state.recovery.messageIsSand)\r\n    const dispatch = useDispatch()\r\n\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='http://localhost:3000/#/new-password/$token$'>link</a>\r\n            </div>`\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: \"\",\r\n            },\r\n            validate: (values) => {\r\n                const errors: RecoveryFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = \"Email is required\"\r\n                } else if (values.email.length < 11) {\r\n                    errors.email = \"Email should be more 10 symbols\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(forgotPass({email: values.email, from: \"kelek\", message}))\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <RecoveryPass\r\n            errors={formik.errors}\r\n            emailValue={formik.values.email}\r\n            submit={formik.handleSubmit}\r\n            status={status}\r\n            changeHandler={formik.handleChange}\r\n            isSand={isSand}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../Store/store\";\r\nimport {setAppStatus} from \"../../../Store/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\ntype ErrorSnackbarPropsType = {\r\n    error?: string\r\n}\r\nexport const ErrorSnackbar: React.FC<ErrorSnackbarPropsType> = props => {\r\n    const appError = useSelector<AppStoreType, string | null>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppStatus(\"idle\"))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={appError !== null || props.error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {appError || props.error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./NewPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {NewPassFormikErrorType} from \"./NewPassContainer\";\r\nimport {ErrorSnackbar} from \"../../../Common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\ntype NewPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    passwordValue: string\r\n    status: RequestStatusType\r\n    errors: NewPassFormikErrorType\r\n}\r\n\r\nexport const NewPass: React.FC<NewPassPropsType> = React.memo(props => {\r\n    const {submit, passwordValue, changeHandler, status, errors} = props\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Create new password</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                    </div>\r\n                    <span className={S.instruction}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </span>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton variant=\"purple\" type=\"submit\">Create new password</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Did you remember your password?</span>\r\n                    <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                </div>\r\n            </div>\r\n            {errors.token && <ErrorSnackbar error={errors.token}/>}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {NewPass} from \"./NewPass\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {recovery} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport type NewPassFormikErrorType = {\r\n    password?: string\r\n    token?: string\r\n}\r\n\r\nexport const NewPassContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isRecovered = useSelector<AppStoreType, boolean>(state => state.recovery.passIsRecovered)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                password: \"\",\r\n                token: \"\"\r\n            },\r\n            validate: (values) => {\r\n                const errors: NewPassFormikErrorType = {};\r\n                if (!values.password) {\r\n                    errors.password = \"Password is required\"\r\n                } else if (values.password.length < 8) {\r\n                    errors.password = \"Password should be more 7 symbols\"\r\n                } else if(values.token === \"\") {\r\n                    errors.token = \"Recovery token is required\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                if(window.location.hash === \"#/new-password\") {\r\n                    values.token = \"\"\r\n                    formik.errors.token = \"Recovery token is required\"\r\n                } else {\r\n                    values.token = window.location.hash.replace(\"#/new-password/\", \"\")\r\n                    dispatch(recovery({password: values.password, resetPasswordToken: values.token}))\r\n                }\r\n                formik.resetForm()\r\n            }\r\n        }\r\n    )\r\n\r\n    if(isRecovered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <NewPass\r\n            submit={formik.handleSubmit}\r\n            changeHandler={formik.handleChange}\r\n            passwordValue={formik.values.password}\r\n            status={status}\r\n            errors={formik.errors}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Profile} from \"../Components/Feature/Profile/Profile\";\r\nimport {Login} from \"../Components/Feature/Authorization/Login/Login\";\r\nimport {Registration} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport {SandBox} from \"../Components/Common/SandBox/SandBox\";\r\nimport {Page404} from \"../Components/Common/Page404/Page404\";\r\nimport {RecoveryContainer} from \"../Components/Feature/Authorization/RecoveryPass/RecoveryContainer\";\r\nimport {NewPassContainer} from \"../Components/Feature/Authorization/NewPass/NewPassContainer\";\r\n\r\nexport const Routes: React.FC<any> = props => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={\"/profile\"}/>}/>\r\n                <Route path={\"/profile\"} render={() => <Profile/>}/>\r\n                <Route path={\"/login\"} render={() => <Login/>}/>\r\n                <Route path={\"/registration\"} render={() => <Registration/>}/>\r\n                <Route path={\"/recovery\"} render={() => <RecoveryContainer />}/>\r\n                <Route path={\"/new-password\"} render={() => <NewPassContainer/>}/>\r\n                <Route path={\"/sand-box\"} render={() => <SandBox/>}/>\r\n                <Route path={\"/404\"} render={() => <Page404/>}/>\r\n                <Redirect from={\"*\"} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Routes} from \"./Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../Store/store\";\r\nimport {ErrorSnackbar} from \"../Components/Common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {RequestStatusType} from \"../Store/app-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {me} from \"../Store/auth-reducer\";\r\n//раз два три\r\nexport const App: React.FC<any> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isInitialized = useSelector<AppStoreType, boolean>(state => state.app.isInitialized)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '50%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            {status === \"failed\" && <ErrorSnackbar/>}\r\n            <HashRouter>\r\n                <Routes />\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ProfileActionsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n// thunks\r\n\r\n// types\r\ntype ProfileStateType = typeof initialState\r\nexport type ProfileActionsType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport {RegistrationActionsType, registrationReducer} from \"./registration-reducer\";\r\nimport {RecoveryPassActionsType, recoveryPassReducer} from \"./recovery-pass-reducer\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    recovery: recoveryPassReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// types\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, AllAppActionsType>\r\nexport type AllAppActionsType =\r\n    ProfileActionsType\r\n    | AuthActionsType\r\n    | RegistrationActionsType\r\n    | RecoveryPassActionsType\r\n    | AppActionsType\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandBox_container\":\"SandBox_sandBox_container__3-oeV\",\"textInput_box\":\"SandBox_textInput_box__3Pvtc\",\"button_box\":\"SandBox_button_box__3PUbr\",\"reactCheckbox_box\":\"SandBox_reactCheckbox_box__1qV_a\",\"editableSpan_box\":\"SandBox_editableSpan_box__2iNX0\",\"mySelect_box\":\"SandBox_mySelect_box__2A6IA\",\"radio_box\":\"SandBox_radio_box__R0jV5\",\"range\":\"SandBox_range__14hYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chakres_box\":\"FrontEndMan_chakres_box__2yz-F\",\"chakres\":\"FrontEndMan_chakres__2SIRk\",\"ts\":\"FrontEndMan_ts__2Gj3W\",\"redux\":\"FrontEndMan_redux__1bIPJ\",\"html5\":\"FrontEndMan_html5__3XKsc\",\"css3\":\"FrontEndMan_css3__1q2pi\",\"jest\":\"FrontEndMan_jest__2Nzka\",\"react\":\"FrontEndMan_react__196gr\",\"heart\":\"FrontEndMan_heart__1pUhM\",\"rotation\":\"FrontEndMan_rotation__1qMyQ\",\"orbit\":\"FrontEndMan_orbit__1A_bT\",\"breath\":\"FrontEndMan_breath__K_HdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__2D0mq\",\"profile\":\"Profile_profile__2DrlX\",\"profileWrap\":\"Profile_profileWrap__1Ej2j\",\"name\":\"Profile_name__3WTqS\",\"button\":\"Profile_button__2bUZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"MyTextInput_textInput__17y7d\",\"input\":\"MyTextInput_input__3OHTp\",\"error\":\"MyTextInput_error__2nWm5\",\"errorInput\":\"MyTextInput_errorInput__1t6uW\",\"standard\":\"MyTextInput_standard__2O_lj\",\"light\":\"MyTextInput_light__iUEMr\",\"dark\":\"MyTextInput_dark__GjyM1\",\"purple\":\"MyTextInput_purple__3QkfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInput\":\"MyCheckbox_checkInput__3B3cw\",\"checkbox\":\"MyCheckbox_checkbox__SyBLg\",\"labelText\":\"MyCheckbox_labelText__2BSTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_box\":\"MyRadioButton_radio_box__1iuSv\",\"radio\":\"MyRadioButton_radio__j3NdU\",\"fakeRadio\":\"MyRadioButton_fakeRadio__1meOb\",\"radio_container\":\"MyRadioButton_radio_container__3wCG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_box\":\"MyButton_button_box__1IDHV\",\"button\":\"MyButton_button__1tHF5\",\"standard\":\"MyButton_standard__QfE9O\",\"dark\":\"MyButton_dark__2SkVu\",\"purple\":\"MyButton_purple__2SUrf\",\"light\":\"MyButton_light__qjfbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Login_text__2OWOC\",\"checkbox\":\"Login_checkbox__-x4Ia\",\"forgot\":\"Login_forgot__rlj2r\",\"error\":\"Login_error__30NBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span_box\":\"MyEditSpan_span_box__10T1R\",\"line\":\"MyEditSpan_line__3u0hN\",\"editSpan_box\":\"MyEditSpan_editSpan_box__1BfGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"RecoveryPass_instruction__29ATC\",\"button_box\":\"RecoveryPass_button_box__2kV9j\",\"message\":\"RecoveryPass_message__3DBTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select_box\":\"MySelect_select_box__15UzT\",\"select\":\"MySelect_select__2LbmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"CommonStyles_page_container__27F7E\",\"form_container\":\"CommonStyles_form_container__3NQAc\",\"fields\":\"CommonStyles_fields__1zJIY\",\"link_box\":\"CommonStyles_link_box__1n7Ng\",\"title\":\"CommonStyles_title__3vnRD\",\"link\":\"CommonStyles_link__2LH1p\",\"button_box\":\"CommonStyles_button_box__1M-HM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404_box\":\"Page404_page404_box__2nOiu\",\"man\":\"Page404_man__14MHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"NewPass_instruction__3Lg44\",\"button_box\":\"NewPass_button_box__1hGcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__2WtS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"MyRange_range__1qhMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRange\":\"MyRangeDouble_doubleRange__NHQmJ\"};"],"sourceRoot":""}