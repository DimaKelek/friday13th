{"version":3,"sources":["Components/Feature/Authorization/Registration/Registration.module.css","Components/Common/Ranges/MyRange/MyRange.module.css","Components/Common/Ranges/MyDoubleRange/MyRangeDouble.module.css","Components/Feature/Main/Table/TableBody/TableBody.module.css","Components/Feature/Main/Table/Search/Search.module.css","Api/authAPI.ts","Store/app-reducer.ts","Components/Feature/Authorization/AuthCommon/utils/errorHandler.ts","Store/auth-reducer.ts","Components/Common/MyTextInput/MyTextInput.tsx","Components/Common/MyButton/MyButton.tsx","Components/Common/MyCheckbox/MyCheckbox.tsx","Api/register-api.ts","Store/registration-reducer.ts","Components/Feature/Authorization/Login/Login.tsx","Components/Feature/Authorization/Registration/Registration.tsx","Components/Common/MyEditableSpan/MyEditableSpan.tsx","Components/Common/MySelect/MySelect.tsx","Components/Common/MyRadioButton/MyRadioButton.tsx","Components/Common/Ranges/MyRange/MyRange.tsx","Components/Common/Ranges/MyDoubleRange/MyDoubleRange.tsx","Components/Common/SandBox/SandBox.tsx","Components/Common/Page404/Images/chakres.png","Components/Common/Page404/Images/react.svg","Components/Common/Page404/Images/typescript.svg","Components/Common/Page404/Images/redux.svg","Components/Common/Page404/Images/html5.svg","Components/Common/Page404/Images/css3.svg","Components/Common/Page404/Images/jest.png","Components/Common/Page404/FrontEndMan/FrontEndMan.tsx","Components/Common/Page404/Page404.tsx","Components/Feature/Authorization/AuthCommon/Field/Field.tsx","Components/Feature/Authorization/RecoveryPass/message.svg","Components/Feature/Authorization/RecoveryPass/RecoveryPass.tsx","Api/api.ts","Store/recovery-pass-reducer.ts","Components/Feature/Authorization/RecoveryPass/RecoveryContainer.tsx","Components/Common/ErrorSnackbar/ErrorSnackbar.tsx","Components/Feature/Authorization/NewPass/NewPass.tsx","Components/Feature/Authorization/NewPass/NewPassContainer.tsx","Components/Feature/Main/Header/Link/Link.tsx","Components/Feature/Main/MainCommon/Icons/decks.svg","Components/Feature/Main/MainCommon/Icons/profileIcon.svg","Components/Feature/Main/Header/Header.tsx","Components/Feature/Main/MainCommon/utils/dataHandlers.ts","Store/decks-reducer.ts","Components/Feature/Main/Table/TableHeader/TableHeader.tsx","Components/Feature/Main/Table/RowItem/RowItem.tsx","Components/Feature/Main/Table/TableBody/TableBody.tsx","Components/Feature/Main/Table/Pagination/Pagination.tsx","Components/Feature/Main/Table/Table.tsx","Components/Feature/Main/Table/Search/Search.tsx","Components/Feature/Main/Decks/ActionsPanel/ActionsPanel.tsx","Components/Feature/Main/Decks/Decks.tsx","Store/cards-reducer.ts","Components/Feature/Main/Cards/ActionsPanel/ActionsPanel.tsx","Components/Feature/Main/Cards/Cards.tsx","Components/Feature/Main/Profile/Profile.tsx","Components/Feature/Main/Main.tsx","App/Routes.tsx","App/App.tsx","reportWebVitals.ts","Store/profile-reducer.ts","Store/store.ts","index.tsx","Components/Feature/Main/MainCommon/Styles/MainCommon.module.css","Components/Feature/Main/Decks/Decks.module.css","Components/Common/SandBox/SandBox.module.css","Components/Common/Page404/FrontEndMan/FrontEndMan.module.css","Components/Common/MyTextInput/MyTextInput.module.css","Components/Feature/Main/Table/TableHeader/TableHeader.module.css","Components/Common/MyCheckbox/MyCheckbox.module.css","Components/Common/MyRadioButton/MyRadioButton.module.css","Components/Feature/Authorization/RecoveryPass/RecoveryPass.module.css","Components/Feature/Main/Table/Table.module.css","Components/Feature/Authorization/Login/Login.module.css","Components/Common/MyEditableSpan/MyEditSpan.module.css","Components/Feature/Main/Header/Link/Link.module.css","Components/Feature/Main/Cards/Cards.module.css","Components/Common/MyButton/MyButton.module.css","Components/Common/MySelect/MySelect.module.css","Components/Common/Page404/Page404.module.css","Components/Feature/Authorization/NewPass/NewPass.module.css","Components/Feature/Main/Main.module.css","Components/Feature/Main/Header/Header.module.css","Components/Feature/Main/Table/RowItem/RowItem.module.css","Components/Feature/Main/Decks/ActionsPanel/ActionsPanel.module.css","Components/Feature/Main/Cards/ActionsPanel/ActionsPanel.module.css","Components/Feature/Authorization/AuthCommon/Styles/CommonStyles.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","status","error","isInitialized","setAppStatus","type","appActionVariables","SET_STATUS","setError","SER_ERROR","setInitialized","SET_INITIALIZED","handleServerNetworkError","dispatch","errorMessage","response","message","userData","isLoggedIn","setUserData","setIsLoggedIn","value","me","a","MyTextInput","props","onChange","onChangeText","onKeyPress","onEnter","className","errorClassName","variant","restProps","finalInputClassName","S","input","errorInput","finalErrorClassName","textInput","e","currentTarget","key","MyButton","disabled","onClick","children","finalClassName","button","MyCheckbox","onChangeChecked","checked","labelCheckbox","check","checkInput","checkbox","labelText","instanse","RegisterAPI","email","password","register","setRegistrationStatus","Login","useSelector","state","auth","app","useDispatch","useEffect","formik","useFormik","initialValues","rememberMe","validate","values","errors","test","length","onSubmit","resetForm","to","Sc","page_container","form_container","handleSubmit","fields","placeholder","touched","getFieldProps","style","minWidth","s","forgot","button_box","CircularProgress","link_box","title","link","Registration","registration","signupForm","confirmedPassword","formData","form","autoComplete","MyEditableSpan","autoFocus","onBlur","spanProps","onDoubleClick","restSpanProps","useState","editMode","setEditMode","editSpan_box","span_box","line","MySelect","options","onChangeOption","mappedOptions","map","o","i","select_box","select","MyRadioButton","name","onChangeCallback","finalRadioStyle","radio_container","radio","fakeRadio","radio_box","MyRange","onChangeRange","range","Slider","MyDoubleRange","onChangeRangeFirst","onChangeRangeSecond","min","max","onClickHandler","doubleRange","onChangeDoubleRange","valueLabelDisplay","getAriaValueText","SandBox","editLabel","setEditLabel","setSelect","text","setText","setCheck","rangeStart","setRangeStart","rangeEnd","setRangeEnd","sandBox_container","textInput_box","alert","reactCheckbox_box","editableSpan_box","undefined","mySelect_box","FrontEndMan","chakres_box","chakres","src","alt","react","iconReact","ts","iconTS","redux","iconRedux","html5","iconHTML","css3","iconCSS","jest","iconJest","Page404","page404_box","man","createField","handler","blur","RecoveryPass","React","memo","submit","emailValue","changeHandler","isSand","instruction","Message","decksAPI","id","user_id","packName","get","pageNumber","put","cardsAPI","cardsPack_id","cardAnswer","cardQuestion","messageIsSand","passIsRecovered","setStatusSendingMessage","recoveryActionVariables","SET_SEND_MESSAGE","SET_PASS_RECOVERY","RecoveryContainer","recovery","from","handleChange","Alert","elevation","ErrorSnackbar","appError","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","NewPass","passwordValue","token","NewPassContainer","isRecovered","useParams","resetPasswordToken","Link","path","icon","activeClassName","activeLink","Header","header_container","nav_container","decksIcon","profileIcon","getDecksRequestDC","filter","getDecks","createAsyncThunk","thunkAPI","rejectWithValue","createDeck","dataForRequest","getState","decks","visiblePage","_id","requestData","removeDeck","updateDeck","decksSlice","createSlice","totalCount","minCardsCount","maxCardsCount","selectedDeckID","minSelectedCardsCount","maxSelectedCardsCount","reducers","changeDecksFilter","action","payload","changeVisibleDecksPage","setDeckID","changeMinSelected","changeMaxSelected","extraReducers","builder","addCase","fulfilled","cardPacks","cardPacksTotalCount","actions","TableHeader","columns","callStyle","items","c","row","header","RowItem","cellStyle","cells","index","color","renderCells","Sr","rowItem","TableBody","rowItems","item","body","PaginationControlled","page","setPage","count","Math","ceil","Pagination","Table","display","gridTemplateColumns","width","join","table","tableBody","circular_box","pagination","Search","search_box","marginRight","ActionsPanel","deckID","makerDeckID","userID","buttonsPanel","deleteButton","cardsPack","Decks","minValue","setMinValue","maxValue","setMaxValue","setPackName","timeID","setTimeID","requestStart","setTimeout","clearTimeout","modeBlockStyle","onBlock","myMode","allMode","createDeckHandler","useCallback","private","deckCover","myModeHandler","allModeHandler","decksForUI","d","lastUpdate","temp","split","splice","updated","userName","created","user_name","cards","cardsCount","getDecksForUI","forEach","push","workSpace","workSpace_container","settings","settings_container","showDecks","my","all","list","list_container","target","getCards","createCard","removeCard","updateCard","cardsSlice","cardsTotalCount","packUserId","changeVisibleCardPage","CardActionsPanel","cardID","card","question","Cards","setQuestion","rows","cardsForUI","answer","grade","getCardsForUI","arrow","answerImg","answerVideo","questionImg","questionVideo","rating","shots","Profile","logoutHandler","Main","main","content","render","Routes","exact","App","position","top","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","profile","reducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6ebb8e2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__2WtS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"MyRange_range__1qhMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRange\":\"MyRangeDouble_doubleRange__NHQmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"TableBody_body__37Ur8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_box\":\"Search_search_box__2l7aT\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n  withCredentials: true\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n  login(data: LoginDataType) {\r\n    return instance.post<LoginResponseType>('/auth/login', data)\r\n  },\r\n  me() {\r\n    return instance.post<LoginResponseType>('/auth/me', {})\r\n  },\r\n  logout() {\r\n    return instance.delete<LogoutResponseType>('/auth/me', {})\r\n  }\r\n}\r\n\r\nexport type LoginDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n  _id: string\r\n  email: string\r\n  name: string\r\n  avatar?: string | null\r\n  publicCardPacksCount: number\r\n}\r\n\r\ntype LoginResponseType = UserDataType & {\r\n  error?: string\r\n}\r\n\r\ntype LogoutResponseType = {\r\n  info?: string\r\n  error?: string\r\n}","const initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case appActionVariables.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case appActionVariables.SER_ERROR:\r\n            return {...state, error: action.error}\r\n        case appActionVariables.SET_INITIALIZED:\r\n            return {...state, isInitialized: true}\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAppStatus = (status: RequestStatusType) => ({type: appActionVariables.SET_STATUS, status} as const)\r\nexport const setError = (error: string) => ({type: appActionVariables.SER_ERROR, error} as const)\r\nexport const setInitialized = () => ({type: appActionVariables.SET_INITIALIZED} as const)\r\n// thunks\r\n\r\n// types\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppStateType = typeof initialState\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setInitialized>\r\n\r\n// variables\r\nconst appActionVariables = {\r\n    SET_STATUS: \"APP/SET-STATUS\" as const,\r\n    SER_ERROR: \"APP/SET-ERROR\" as const,\r\n    SET_INITIALIZED: \"APP/SET-INITIALIZED\" as const,\r\n}","import {Dispatch} from \"redux\"\r\nimport {AppActionsType, setAppStatus, setError} from \"../../../../../Store/app-reducer\";\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const errorMessage = error.response.data.error || (error.message + ', more details in the console')\r\n    dispatch(setError(errorMessage))\r\n    dispatch(setAppStatus(\"failed\"))\r\n    return errorMessage\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<AppActionsType>","import {authAPI, LoginDataType, UserDataType} from '../Api/authAPI';\r\nimport {AppThunk} from './store';\r\nimport {setAppStatus, setInitialized} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    userData: null as UserDataType | null,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: AuthActionsType): AuthStateType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET_USER_DATA':\r\n            return {...state, userData: action.userData}\r\n        case 'LOGIN/SET_IS_LOGGED_IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setUserData = (userData: UserDataType | null) =>\r\n    ({type: 'LOGIN/SET_USER_DATA', userData} as const)\r\nexport const setIsLoggedIn = (value: boolean) =>\r\n    ({type: 'LOGIN/SET_IS_LOGGED_IN', value} as const)\r\n\r\n// thunks\r\n\r\nexport const login = (data: LoginDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.login(data)\r\n        dispatch(setUserData(response.data))\r\n        dispatch(me())\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await authAPI.logout()\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setUserData(null))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const me = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.me()\r\n        dispatch(setUserData(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setInitialized())\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setInitialized())\r\n    }\r\n}\r\n\r\n// types\r\ntype AuthStateType = typeof initialState\r\nexport type AuthActionsType = ReturnType<typeof setUserData> | ReturnType<typeof setIsLoggedIn>","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport S from './MyTextInput.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    errorClassName?: string\r\n    variant?: \"light\" | \"dark\" | \"standard\" | \"purple\"\r\n}\r\n\r\nexport const MyTextInput: React.FC<SuperInputTextPropsType> = props => {\r\n    const {type = 'text', onChange, onChangeText, onKeyPress, onEnter, error,\r\n        className, errorClassName, variant = \"standard\", ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalInputClassName = `${S.input} ${variant ? S[variant] : className} ${error && S.errorInput}`\r\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\r\n\r\n    return (\r\n        <div className={S.textInput}>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalErrorClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    variant?: ElementColorVariants\r\n}\r\nexport type ElementColorVariants = \"light\" | \"dark\" | \"standard\" | \"purple\"\r\nexport const MyButton: React.FC<MyButtonPropsType> = props => {\r\n    const {disabled, onClick, className, children, variant, ...restProps} = props\r\n    const finalClassName = `${className} ${S.button} ${variant && S[variant]}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            {...restProps}\r\n        >{children}</button>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./MyCheckbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype NeonCheckboxPropsType = DefaultInputPropsType & {\r\n    checked?: boolean\r\n    onChangeChecked?: (e: boolean) => void\r\n}\r\n\r\nexport const MyCheckbox: React.FC<NeonCheckboxPropsType> = props => {\r\n    const {onChange, children, onChangeChecked, checked, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    const labelCheckbox = `${S.check}`\r\n\r\n    return (\r\n        <label className={labelCheckbox}>\r\n            <input\r\n                checked={checked}\r\n                onChange={onChangeCallback}\r\n                type={\"checkbox\"}\r\n                className={S.checkInput}\r\n                {...restProps}\r\n            />\r\n            <span className={S.checkbox}/>\r\n            {children && <span className={S.labelText}>{children}</span>}\r\n        </label>\r\n    )\r\n}","import {SignupFormDataType} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport type AuthRegisterResponseType = {\r\n    addedUser: any\r\n    error?: string\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    signup({email, password}: SignupFormDataType) {\r\n        return (\r\n            instanse.post<AuthRegisterResponseType>(`auth/register`, {email, password})\r\n        )\r\n    },\r\n}","import {SignupFormDataType} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport {RegisterAPI} from \"../Api/register-api\";\r\nimport {AppThunk} from \"./store\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\n\r\nconst initialState = {\r\n    register: false\r\n}\r\n\r\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: RegistrationActionsType): RegistrationStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTRATION/SET-STATUS':\r\n            return {...state, register: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setRegistrationStatus = (status: boolean) =>\r\n    ({type: 'REGISTRATION/SET-STATUS', status} as const)\r\n\r\n// thunks\r\nexport const signup = (formData: SignupFormDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await RegisterAPI.signup(formData)\r\n        dispatch(setRegistrationStatus(true))\r\n        dispatch(setAppStatus('succeeded'))\r\n    }\r\n    catch (e) {\r\n       handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\ntype RegistrationStateType = typeof initialState\r\nexport type RegistrationActionsType = ReturnType<typeof setRegistrationStatus>","import React, {useEffect} from \"react\";\r\nimport {AppStoreType} from '../../../../Store/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport {login} from '../../../../Store/auth-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './Login.module.css'\r\nimport Sc from '../AuthCommon/Styles/CommonStyles.module.css'\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../../../Common/MyCheckbox/MyCheckbox\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {setRegistrationStatus} from \"../../../../Store/registration-reducer\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setRegistrationStatus(false))\r\n    }, [dispatch])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or less';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>IT - Incubator</h3>\r\n                <h4>Sing In</h4>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            variant=\"light\"\r\n                            placeholder={\"Email\"}\r\n                            error={formik.touched.email ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            variant=\"light\"\r\n                            placeholder={\"Password\"}\r\n                            error={formik.touched.password ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <NavLink className={s.forgot} to='/recovery'>Forgot Password</NavLink>\r\n                    </div>\r\n                    <div className={s.checkbox}>\r\n                        <MyCheckbox  {...formik.getFieldProps('rememberMe')}>Remember Me</MyCheckbox>\r\n                    </div>\r\n                    <div className={Sc.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton className={s.button} type={'submit'} variant='purple'>Login</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Don't have an account?</span>\r\n                    <NavLink to=\"/registration\"><span className={Sc.link}>Sign Up</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useFormik} from 'formik';\r\nimport S from \"./Registration.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {signup} from \"../../../../Store/registration-reducer\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ntype RegistrationPropsType = {}\r\n\r\ntype SignupFormErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmedPassword?: string\r\n}\r\n\r\nexport type SignupFormDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const register = useSelector<AppStoreType, boolean>(state => state.registration.register)\r\n    const dispatch = useDispatch()\r\n\r\n    const signupForm = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n        },\r\n        validate: (formData) => {\r\n            const errors: SignupFormErrorType = {};\r\n            if (!formData.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formData.email)) {\r\n                errors.email = 'Invalid email address.';\r\n            }\r\n            if (!formData.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (formData.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            }\r\n            if (formData.password && !formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'Confirm your password'\r\n            } else if (formData.password !== formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            if(values.password === values.confirmedPassword) {\r\n                dispatch(signup({email: values.email, password: values.password}))\r\n                signupForm.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    if (register) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Sign Up</h4>\r\n                <form onSubmit={signupForm.handleSubmit} className={S.form} autoComplete={'off'}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            error={signupForm.touched.email ? signupForm.errors.email : null}\r\n                            {...signupForm.getFieldProps('email')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Email\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.password ? signupForm.errors.password : null}\r\n                            {...signupForm.getFieldProps('password')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.confirmedPassword ? signupForm.errors.confirmedPassword : null}\r\n                            {...signupForm.getFieldProps('confirmedPassword')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Confirm password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                    </div>\r\n                    {status === \"loading\"\r\n                        ? <CircularProgress/>\r\n                        : <div>\r\n                            <NavLink to={'/login'}><MyButton type={'button'} variant={\"light\"}>Cancel</MyButton></NavLink>\r\n                            <MyButton type={'submit'} variant={\"purple\"}>Sign Up</MyButton>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\nimport {MyButton} from \"../MyButton/MyButton\";\nimport S from \"./MyEditSpan.module.css\"\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType\n}\n\nexport const MyEditableSpan: React.FC<SuperEditableSpanType> = props => {\n    const {autoFocus, onBlur, onEnter, spanProps, ...restProps} = props\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n    const editCallback = () => {\n        setEditMode(true)\n    }\n    return (\n        <div className={S.editSpan_box}>\n            {editMode\n                ? <MyTextInput autoFocus onBlur={onBlurCallback} onEnter={onEnterCallback} {...restProps}/>\n                : <>\n                    <MyButton onClick={editCallback}>✎ Edit</MyButton>\n                    <div className={S.span_box}>\n                        <span onDoubleClick={onDoubleClickCallBack}\n                             className={className} {...restSpanProps}\n                        >{children || restProps.value}</span>\n                        <span className={S.line}/>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\nimport S from \"./MySelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: any) => void\n}\n\nexport const MySelect: React.FC<SuperSelectPropsType> = props => {\n    const {options, onChange, onChangeOption, ...restProps} = props\n\n    const mappedOptions: any[] = options ? options\n        .map((o, i) => <option key={\"option - \" + i}>{o}</option>) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={S.select_box}>\n            <select onChange={onChangeCallback} className={S.select} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport S from \"./MyRadioButton.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nexport const MyRadioButton: React.FC<SuperRadioPropsType> = props => {\n    const {type, name, options, value, onChange, onChangeOption, className, ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    const finalRadioStyle = `${S.radio_container} ${className}`\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i} className={finalRadioStyle}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                value={o}\n                name={name}\n                checked={o === value}\n                className={S.radio}\n                {...restProps}\n            />\n            <span className={S.fakeRadio}/>\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <div className={S.radio_box}>{mappedOptions}</div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport S from \"./MyRange.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype SuperRangePropsType = DefaultInputPropsType & {\n    onChangeRange?: (value: number) => void\n    value?: number | number[]\n};\n\nexport const MyRange: React.FC<SuperRangePropsType> = props => {\n    const {onChangeRange, value} = props\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeRange && onChangeRange(value as number);\n    }\n\n    return (\n        <div className={S.range}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n            />\n        </div>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport S from \"./MyRangeDouble.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRangeFirst?: (value: number) => void\n    onChangeRangeSecond?: (value: number) => void\n    value: [number, number]\n    disabled?: boolean\n    min?: number\n    max?: number\n    onClickHandler?: (e: ChangeEvent<{}>) => void\n}\n\nexport const MyDoubleRange: React.FC<SuperDoubleRangePropsType> = props => {\n    const {onChangeRangeFirst, onChangeRangeSecond, value, disabled, min, max, onClickHandler} = props\n    const onChangeDoubleRange = (value: [number, number]) => {\n        onChangeRangeFirst && onChangeRangeFirst(value[0])\n        onChangeRangeSecond && onChangeRangeSecond(value[1])\n    }\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeDoubleRange(value as [number, number])\n    }\n\n    function valuetext(value: number) {\n        return `${value}°C`;\n    }\n\n    return (\n        <div className={S.doubleRange}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n                disabled={disabled}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"auto\"\n                getAriaValueText={valuetext}\n                onClick={onClickHandler}\n            />\n        </div>\n    );\n}","import React, {useState} from \"react\";\r\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\r\nimport S from \"./SandBox.module.css\"\r\nimport {MyButton} from \"../MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../MyCheckbox/MyCheckbox\";\r\nimport {MyEditableSpan} from \"../MyEditableSpan/MyEditableSpan\";\r\nimport {MySelect} from \"../MySelect/MySelect\";\r\nimport {MyRadioButton} from \"../MyRadioButton/MyRadioButton\";\r\nimport {MyRange} from \"../Ranges/MyRange/MyRange\";\r\nimport {MyDoubleRange} from \"../Ranges/MyDoubleRange/MyDoubleRange\";\r\n\r\nexport const SandBox: React.FC = props => {\r\n    const options = [\"React\", \"Redux\", \"Typescript\"]\r\n    const [editLabel, setEditLabel] = useState<string>(\"Yooooooooo\")\r\n    const [select, setSelect] = useState<string>(options[0])\r\n    const [text, setText] = useState<string>('')\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [rangeStart, setRangeStart] = useState<number>(0)\r\n    const [rangeEnd, setRangeEnd] = useState<number>(100)\r\n\r\n    // const error = text ? '' : 'error'\r\n    const error = \"\"\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n    const myButtonCallback = () => {\r\n        alert(\"Здароукиииииииииииии!!\")\r\n    }\r\n    const checkboxTestCallback = () => {\r\n        alert(\"Value my checkbox: \" + check)\r\n    }\r\n\r\n    return (\r\n        <div className={S.sandBox_container}>\r\n            <div className={S.textInput_box}>\r\n                <span>Text Input</span>\r\n                <div>\r\n                    <MyTextInput\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        variant={\"light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.button_box}>\r\n                <span>My Button</span>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={myButtonCallback}\r\n                        variant={\"light\"}\r\n                    >Button</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.reactCheckbox_box}>\r\n                <span>My ReactCheckbox</span>\r\n                <div><MyCheckbox checked={check} onChangeChecked={setCheck}>Test Label</MyCheckbox></div>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={checkboxTestCallback}\r\n                        variant={\"dark\"}\r\n                    >Test</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.editableSpan_box}>\r\n                <span>My EditableSpan</span>\r\n                <div>\r\n                    <MyEditableSpan\r\n                        value={editLabel}\r\n                        onChangeText={setEditLabel}\r\n                        spanProps={{children: editLabel ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.mySelect_box}>\r\n                <span>My Select</span>\r\n                <div>\r\n                    <MySelect\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.radio_box}>\r\n                <span>My Radio Button</span>\r\n                <div>\r\n                    <MyRadioButton\r\n                        name={'radio'}\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.range}>\r\n                <span>My Ranges</span>\r\n                <div>\r\n                    <span>Start value: {rangeStart}</span>\r\n                    <span>End value: {rangeEnd}</span>\r\n                    <MyRange\r\n                        value={rangeStart}\r\n                        onChangeRange={setRangeStart}\r\n                    />\r\n                    <MyDoubleRange\r\n                        value={[rangeStart, rangeEnd]}\r\n                        onChangeRangeFirst={setRangeStart}\r\n                        onChangeRangeSecond={setRangeEnd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chakres.d0843979.png\";","export default __webpack_public_path__ + \"static/media/react.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/typescript.b6a67c48.svg\";","export default __webpack_public_path__ + \"static/media/redux.7704ea70.svg\";","export default __webpack_public_path__ + \"static/media/html5.10080bf9.svg\";","export default __webpack_public_path__ + \"static/media/css3.b0696b45.svg\";","export default __webpack_public_path__ + \"static/media/jest.05a3e041.png\";","import React from \"react\";\r\nimport S from \"./FrontEndMan.module.css\";\r\nimport chakres from \"../Images/chakres.png\";\r\nimport iconReact from \"../Images/react.svg\";\r\nimport iconTS from \"../Images/typescript.svg\";\r\nimport iconRedux from \"../Images/redux.svg\";\r\nimport iconHTML from \"../Images/html5.svg\";\r\nimport iconCSS from \"../Images/css3.svg\";\r\nimport iconJest from \"../Images/jest.png\";\r\n\r\nexport const FrontEndMan: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.chakres_box}>\r\n            <img className={S.chakres} src={chakres} alt=\"chakres\"/>\r\n            <div className={S.react}><img src={iconReact} alt=\"React\"/></div>\r\n            <div className={S.ts}><img src={iconTS} alt=\"TS\"/></div>\r\n            <div className={S.redux}><img src={iconRedux} alt=\"Redux\"/></div>\r\n            <div className={S.html5}><img src={iconHTML} alt=\"HTML\"/></div>\r\n            <div className={S.css3}><img src={iconCSS} alt=\"CSS\"/></div>\r\n            <div className={S.jest}><img src={iconJest} alt=\"Jest\"/></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Page404.module.css\"\r\nimport {FrontEndMan} from \"./FrontEndMan/FrontEndMan\";\r\n\r\ntype Page404PropsType = {}\r\n\r\nexport const Page404: React.FC<Page404PropsType> = props => {\r\n    return (\r\n        <div className={S.page404_box}>\r\n            <div className={S.man}>\r\n                <span>Error 404</span>\r\n                <FrontEndMan/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {ElementColorVariants} from \"../../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\n\r\nexport const createField = (name: string, value: string, error?: string | null,\r\n                            handler?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n                            variant?: ElementColorVariants, placeholder?: string, type?: string,\r\n                            blur?: (e: React.FocusEvent<any>) => void) => {\r\n\r\n    return (\r\n        <>\r\n            <MyTextInput\r\n                variant={variant}\r\n                placeholder={placeholder}\r\n                type={type}\r\n                onChange={handler}\r\n                name={name}\r\n                onBlur={blur}\r\n                value={value}\r\n                style={{minWidth: \"300px\"}}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/message.613ffddc.svg\";","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./RecoveryPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {RecoveryFormikErrorType} from \"./RecoveryContainer\";\r\nimport message from \"./message.svg\"\r\n\r\ntype RecoveryPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    status: RequestStatusType\r\n    errors: RecoveryFormikErrorType\r\n    isSand: boolean\r\n}\r\n\r\nexport const RecoveryPass: React.FC<RecoveryPassPropsType> = React.memo(props => {\r\n    const {submit, emailValue, changeHandler, status, errors, isSand} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                {!isSand\r\n                    ? <div>\r\n                        <h4>Recovery password</h4>\r\n                        <form onSubmit={submit}>\r\n                            <div className={Sc.fields}>\r\n                                {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\", \"text\")}\r\n                            </div>\r\n                            <span className={S.instruction}>\r\n                                Enter your email address and we will send you further instructions\r\n                            </span>\r\n                            <div className={S.button_box}>\r\n                                {status === \"loading\"\r\n                                    ? <CircularProgress/>\r\n                                    : <MyButton variant=\"purple\" type=\"submit\">Send Instructions</MyButton>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        <div className={Sc.link_box}>\r\n                            <span className={Sc.title}>Did you remember your password?</span>\r\n                            <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                        </div>\r\n                    </div>\r\n                    : <Message email={emailValue}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype MessagePropsType = {\r\n    email: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={S.message}>\r\n            <img src={message} alt=\"message\"/>\r\n            <h4>Check your Email</h4>\r\n            <span className={S.instruction}>\r\n                We’ve sent an Email with instructions to {props.email}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nimport {ForgotPasswordRequest, RecoveryRequestType} from \"../Store/recovery-pass-reducer\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    forgot(data: ForgotPasswordRequest) {\r\n        return instanse.post<ResponseType>(`/auth/forgot`, data)\r\n    },\r\n    recoveryPass(data: RecoveryRequestType) {\r\n        return instanse.post<ResponseType>(`/auth/set-new-password`, data)\r\n    }\r\n}\r\n\r\ntype ResponseType = {\r\n    info?: string\r\n    error?: string\r\n}\r\n\r\nexport const decksAPI = {\r\n    getDecks(data: GetDecksRequestDataType) {\r\n        let id = data.user_id ? `&user_id=${data.user_id}`: \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let packName = data.packName ? `&packName=${data.packName}` : \"\"\r\n        return instanse.get<DeckResponseType>(`/cards/pack?pageCount=7&page=${data.pageNumber}${id}${min}${max}${packName}`)\r\n    },\r\n    createDeck(data: CreateDeckRequestData) {\r\n        return instanse.post(`/cards/pack`, data)\r\n    },\r\n    removeDeck(id: string) {\r\n        return instanse.delete(`/cards/pack?id=${id}`)\r\n    },\r\n    updateDeck(data: UpdateDeckRequestData) {\r\n        return instanse.put(`/cards/pack`, data)\r\n    }\r\n}\r\n\r\nexport type DeckType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type GetDecksRequestDataType = {\r\n    pageNumber: number\r\n    user_id?: string\r\n    min?: number\r\n    max?: number\r\n    packName?: string\r\n}\r\nexport type DeckResponseType = {\r\n    cardPacks: DeckType[]\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n}\r\n\r\nexport type CreateDeckRequestData = {\r\n    cardsPack: DeckDataType\r\n}\r\nexport type DeckDataType<T = \"pack\"> = {\r\n    name: string\r\n    private: boolean\r\n    type?: T\r\n    deckCover?: string\r\n}\r\n\r\nexport type UpdateDeckRequestData = {\r\n    cardsPack: {\r\n        _id: string\r\n        name: string\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(data: GetCardsRequestDataType) {\r\n        let id = data.cardsPack_id ? `&cardsPack_id=${data.cardsPack_id}`: \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let cardAnswer = data.cardAnswer ? `&cardAnswer=${data.cardAnswer}` : \"\"\r\n        let cardQuestion = data.cardQuestion ? `&cardQuestion=${data.cardQuestion}` : \"\"\r\n        return instanse.get<GetCardsResponseType>(`/cards/card?pageCount=7&page=${data.pageNumber}${id}${min}${max}${cardAnswer}${cardQuestion}`)\r\n    },\r\n    createCard(data: CreateCardDataType) {\r\n        return instanse.post(`/cards/card`, data)\r\n    },\r\n    removeCard(id: string) {\r\n        return instanse.delete(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(data: UpdateCardRequestType) {\r\n        return instanse.put(`/cards/card`, data)\r\n    }\r\n}\r\n\r\nexport type GetCardsRequestDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id?: string\r\n    min?: number\r\n    max?: number\r\n    pageNumber: number\r\n}\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    _id: string\r\n}\r\n\r\nexport type CreateCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question: string\r\n        answer: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardRequestType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        answer?: string\r\n    }\r\n}","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    messageIsSand: false,\r\n    passIsRecovered: false\r\n}\r\n\r\nexport const recoveryPassReducer = (state: RecoveryPassStateType = initialState, action: RecoveryPassActionsType): RecoveryPassStateType => {\r\n    switch (action.type) {\r\n        case recoveryActionVariables.SET_SEND_MESSAGE:\r\n            return {...state, messageIsSand: action.status}\r\n        case recoveryActionVariables.SET_PASS_RECOVERY:\r\n            return {...state, passIsRecovered: action.status}\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setStatusSendingMessage = (status: boolean) => ({type: recoveryActionVariables.SET_SEND_MESSAGE, status})\r\nexport const setStatusPassRecovery = (status: boolean) => ({type: recoveryActionVariables.SET_PASS_RECOVERY, status})\r\nexport const forgotPass = (data: ForgotPasswordRequest): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.forgot(data)\r\n        dispatch(setStatusSendingMessage(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\nexport const recovery = (data: RecoveryRequestType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.recoveryPass(data)\r\n        dispatch(setStatusPassRecovery(true))\r\n        dispatch(setStatusSendingMessage(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RecoveryRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type ForgotPasswordRequest = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RecoveryPassStateType = typeof initialState\r\nexport type RecoveryPassActionsType =\r\n    ReturnType<typeof setStatusSendingMessage>\r\n    | ReturnType<typeof setStatusPassRecovery>\r\n\r\n// variables\r\nconst recoveryActionVariables = {\r\n    SET_SEND_MESSAGE: \"RECOVERY/SET-STATUS-SEND-MESSAGE\",\r\n    SET_PASS_RECOVERY: \"RECOVERY/SET-STATUS-PASS-RECOVERY\",\r\n}","import React from \"react\";\r\nimport {RecoveryPass} from \"./RecoveryPass\";\r\nimport {useFormik} from \"formik\";\r\nimport {forgotPass} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\nexport type RecoveryFormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RecoveryContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isSand = useSelector<AppStoreType, boolean>(state => state.recovery.messageIsSand)\r\n    const dispatch = useDispatch()\r\n\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='http://localhost:3000/#/new-password/$token$'>link</a>\r\n            </div>`\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: \"\",\r\n            },\r\n            validate: (values) => {\r\n                const errors: RecoveryFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = \"Email is required\"\r\n                } else if (values.email.length < 11) {\r\n                    errors.email = \"Email should be more 10 symbols\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(forgotPass({email: values.email, from: \"kelek\", message}))\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <RecoveryPass\r\n            errors={formik.errors}\r\n            emailValue={formik.values.email}\r\n            submit={formik.handleSubmit}\r\n            status={status}\r\n            changeHandler={formik.handleChange}\r\n            isSand={isSand}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../Store/store\";\r\nimport {setAppStatus} from \"../../../Store/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\ntype ErrorSnackbarPropsType = {\r\n    error?: string\r\n}\r\nexport const ErrorSnackbar: React.FC<ErrorSnackbarPropsType> = props => {\r\n    const appError = useSelector<AppStoreType, string | null>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppStatus(\"idle\"))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={appError !== null || props.error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {appError || props.error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./NewPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {NewPassFormikErrorType} from \"./NewPassContainer\";\r\nimport {ErrorSnackbar} from \"../../../Common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\ntype NewPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    passwordValue: string\r\n    status: RequestStatusType\r\n    errors: NewPassFormikErrorType\r\n}\r\n\r\nexport const NewPass: React.FC<NewPassPropsType> = React.memo(props => {\r\n    const {submit, passwordValue, changeHandler, status, errors} = props\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Create new password</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                    </div>\r\n                    <span className={S.instruction}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </span>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton variant=\"purple\" type=\"submit\">Create new password</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Did you remember your password?</span>\r\n                    <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                </div>\r\n            </div>\r\n            {errors.token && <ErrorSnackbar error={errors.token}/>}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {NewPass} from \"./NewPass\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {recovery} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\n\r\nexport type NewPassFormikErrorType = {\r\n    password?: string\r\n    token?: string\r\n}\r\n\r\nexport const NewPassContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isRecovered = useSelector<AppStoreType, boolean>(state => state.recovery.passIsRecovered)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                password: \"\",\r\n                token: \"\"\r\n            },\r\n            validate: (values) => {\r\n                const errors: NewPassFormikErrorType = {};\r\n                if (!values.password) {\r\n                    errors.password = \"Password is required\"\r\n                } else if (values.password.length < 8) {\r\n                    errors.password = \"Password should be more 7 symbols\"\r\n                } else if(values.token === \"\") {\r\n                    errors.token = \"Recovery token is required\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(recovery({password: values.password, resetPasswordToken: token}))\r\n                formik.resetForm()\r\n            }\r\n        }\r\n    )\r\n\r\n    if(isRecovered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <NewPass\r\n            submit={formik.handleSubmit}\r\n            changeHandler={formik.handleChange}\r\n            passwordValue={formik.values.password}\r\n            status={status}\r\n            errors={formik.errors}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport S from \"./Link.module.css\";\r\n\r\ntype LinkType = {\r\n    path: string\r\n    icon: string\r\n    title: string\r\n}\r\n\r\nexport const Link: React.FC<LinkType> = props => {\r\n    const {path, icon, title} = props\r\n    return (\r\n        <div className={S.link}>\r\n            <NavLink to={`/app/${path}`} activeClassName={S.activeLink}>\r\n                <div>\r\n                    <img src={icon} alt={`${path}`}/>\r\n                    {title}\r\n                    <span className={S.line}/>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/decks.6b61c65f.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.c211f415.svg\";","import React from \"react\";\r\nimport S from \"./Header.module.css\";\r\nimport {Link} from \"./Link/Link\";\r\nimport decksIcon from \"../MainCommon/Icons/decks.svg\";\r\nimport profileIcon from \"../MainCommon/Icons/profileIcon.svg\";\r\n\r\nexport const Header: React.FC = props => {\r\n    return (\r\n        <div className={S.header_container}>\r\n            <div className={S.nav_container}>\r\n                <h2>It-incubator</h2>\r\n                <nav>\r\n                    <Link path={\"decks\"} icon={decksIcon} title={\"Decks List\"}/>\r\n                    <Link path={\"profile\"} icon={profileIcon} title={\"Profile\"}/>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {CardType, DeckType, GetDecksRequestDataType} from \"../../../../../Api/api\";\r\nimport {ShowDecksModeType} from \"../../../../../Store/decks-reducer\";\r\n\r\nexport type RenderDeckType = {\r\n    name: string\r\n    cards: number\r\n    lastUpdate: string\r\n    created: string\r\n    makerDeckID?: string\r\n    deckID?: string\r\n}\r\nexport const getDecksForUI = (decks: DeckType[] | null | undefined) => {\r\n    let decksForUI: RenderDeckType[] | null = null\r\n    if(decks) {\r\n        decksForUI = decks.map(d => {\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.updated))\r\n            const userName = (function (created: string) {\r\n                let temp = created.split(\"\")\r\n                if(temp.length > 15)\r\n                    temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.user_name))\r\n            return {\r\n                name: d.name,\r\n                cards: d.cardsCount,\r\n                lastUpdate: lastUpdate,\r\n                created: userName,\r\n                makerDeckID: d.user_id,\r\n                deckID: d._id\r\n            }\r\n        })\r\n    }\r\n    return decksForUI\r\n}\r\n\r\nexport type DataForRequest = GetDecksRequestDataType & {\r\n    filter: ShowDecksModeType\r\n}\r\n\r\nexport const getDecksRequestDC = (data: DataForRequest) => {\r\n    const {filter, max, min, pageNumber, user_id, packName} = data\r\n    return filter === \"My\"\r\n        ? {pageNumber, user_id, min, max, packName}\r\n        : {pageNumber, min, max, packName}\r\n}\r\n\r\nexport type RenderCardType = {\r\n    answer: string\r\n    question: string\r\n    lastUpdate: string\r\n    grade: number\r\n    cardID: string\r\n}\r\n\r\nexport const getCardsForUI = (cards: CardType[] | null) => {\r\n    let cardsForUI: RenderCardType[] | null = null\r\n    if(cards) {\r\n        cardsForUI = cards.map(c => {\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(c.updated))\r\n            const answer = (function (answer: string) {\r\n                let temp = answer.split(\"\")\r\n                temp.splice(50)\r\n                temp.push(\" ...\")\r\n                return temp.join(\"\")\r\n            }(c.answer))\r\n            return {\r\n                answer: answer,\r\n                question: c.question,\r\n                lastUpdate: lastUpdate,\r\n                grade: c.grade,\r\n                cardID: c._id\r\n            }\r\n        })\r\n    }\r\n    return cardsForUI\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    CreateDeckRequestData,\r\n    DeckResponseType,\r\n    decksAPI,\r\n    DeckType,\r\n    GetDecksRequestDataType,\r\n    UpdateDeckRequestData\r\n} from \"../Api/api\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {ThunkApiType} from \"./store\";\r\nimport {DataForRequest, getDecksRequestDC} from \"../Components/Feature/Main/MainCommon/utils/dataHandlers\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    decks: null as DeckType[] | null,\r\n    filter: \"All\" as ShowDecksModeType,\r\n    visiblePage: 1,\r\n    totalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    selectedDeckID: \"\",\r\n    minSelectedCardsCount: null as number | null,\r\n    maxSelectedCardsCount: null as number | null\r\n}\r\n\r\nexport const getDecks = createAsyncThunk<DeckResponseType, GetDecksRequestDataType, ThunkApiType>(\"decks/getDecks\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            const response = await decksAPI.getDecks(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const createDeck = createAsyncThunk<void, CreateDeckRequestData, ThunkApiType>(\"decks/createDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.createDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const removeDeck = createAsyncThunk<void, string, ThunkApiType>(\"decks/removeDeck\",\r\n    async (id, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.removeDeck(id)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const updateDeck = createAsyncThunk<void, UpdateDeckRequestData, ThunkApiType>(\"decks/updateDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.updateDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const decksSlice = createSlice({\r\n    name: \"decks\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeDecksFilter(state, action: PayloadAction<ShowDecksModeType>) {\r\n            state.filter = action.payload\r\n        },\r\n        changeVisibleDecksPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        },\r\n        setDeckID(state, action: PayloadAction<string>) {\r\n            state.selectedDeckID = action.payload\r\n        },\r\n        changeMinSelected(state, action: PayloadAction<number>) {\r\n            state.minSelectedCardsCount = action.payload\r\n        },\r\n        changeMaxSelected(state, action: PayloadAction<number>) {\r\n            state.maxSelectedCardsCount = action.payload\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getDecks.fulfilled, (state, action) => {\r\n            state.decks = action.payload.cardPacks\r\n            state.totalCount = action.payload.cardPacksTotalCount\r\n            state.minCardsCount = action.payload.minCardsCount\r\n            state.maxCardsCount = action.payload.maxCardsCount\r\n        })\r\n    }\r\n})\r\n\r\nexport const {changeDecksFilter, changeVisibleDecksPage,\r\n    setDeckID, changeMinSelected, changeMaxSelected} = decksSlice.actions\r\n\r\n\r\n// types\r\nexport type DecksStateType = typeof initialState\r\nexport type DecksActionsType = any\r\nexport type ShowDecksModeType = \"My\" | \"All\"\r\n","import React from \"react\";\r\nimport S from \"./TableHeader.module.css\";\r\nimport {CallStyleType, CallType} from \"../Table\";\r\n\r\ntype TableHeaderPropsType = {\r\n    columns: CallType[]\r\n    callStyle: CallStyleType\r\n}\r\nexport const TableHeader: React.FC<TableHeaderPropsType> = props => {\r\n    const {columns, callStyle} = props\r\n    const items = columns.map((c, i) => <div key={i} className={S.row}>{c.title}</div>)\r\n\r\n    return <div className={S.header} style={callStyle}>{items}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport S from \"./RowItem.module.css\";\r\nimport Sr from \"../TableHeader/TableHeader.module.css\"\r\n\r\ntype RowItemType = {\r\n    cells: Array<string | number | boolean | ReactNode>\r\n    cellStyle: CallStyleType\r\n    index: number\r\n}\r\nexport const RowItem: React.FC<RowItemType> = props => {\r\n    const {cellStyle, cells, index} = props\r\n    const color = index === 0 || index % 2 !== 1 ? \"deckItemGray\" : \"deckItemWhite\"\r\n    const renderCells = cells.map((c, i) => <div key={i} className={Sr.row}>{c}</div>)\r\n\r\n    return <div style={cellStyle} className={`${S.rowItem} ${S[color]}`}>{renderCells}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport S from \"./TableBody.module.css\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport {RowItem} from \"../RowItem/RowItem\";\r\n\r\ntype TableBodyPropsType = {\r\n    cellStyle: CallStyleType\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n}\r\nexport const TableBody: React.FC<TableBodyPropsType> = props => {\r\n    const {cellStyle, items} = props\r\n\r\n    const rowItems = items.map((item, i) => <RowItem key={i} cells={item} cellStyle={cellStyle} index={i}/>)\r\n    return <div className={S.body}>{rowItems}</div>\r\n}","import React from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\ntype PaginationPropsType = {\r\n    page: number\r\n    setPage?: (page: number) => void\r\n    totalCount: number\r\n}\r\nexport const PaginationControlled: React.FC<PaginationPropsType> = props => {\r\n    const {page, totalCount, setPage} = props\r\n\r\n    const count = Math.ceil(totalCount / 7)\r\n    const handleChange = (e: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage && setPage(value)\r\n    };\r\n\r\n    return <Pagination count={count} page={page} onChange={handleChange}/>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport S from \"./Table.module.css\";\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\nimport {TableBody} from \"./TableBody/TableBody\"\r\nimport {PaginationControlled} from \"./Pagination/Pagination\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport type CallType = {\r\n    title: string | React.ReactNode\r\n    width: string\r\n}\r\n\r\nexport type CallStyleType = {\r\n    display: string\r\n    gridTemplateColumns: string\r\n}\r\n\r\ntype TablePropsType = {\r\n    columns: CallType[]\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n    totalCount: number\r\n    visiblePage: number\r\n    setPage?: (page: number) => void\r\n}\r\n\r\nexport const Table: React.FC<TablePropsType> = props => {\r\n    const {columns, items, totalCount, visiblePage, setPage} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const cellStyle = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: columns.map(c => c.width).join(\" \")\r\n    }\r\n    return (\r\n        <div className={S.table}>\r\n            <div className={S.tableBody}>\r\n                <TableHeader columns={columns} callStyle={cellStyle}/>\r\n                {status === \"loading\"\r\n                    ? <div className={S.circular_box}><CircularProgress/></div>\r\n                    : <TableBody cellStyle={cellStyle} items={items}/>\r\n                }\r\n            </div>\r\n            <div className={S.pagination}>\r\n                <PaginationControlled page={visiblePage} totalCount={totalCount} setPage={setPage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./Search.module.css\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../../Store/app-reducer\";\r\n\r\ntype SearchWithButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\r\n    onEnter?: () => void\r\n}\r\n\r\nexport const Search: React.FC<SearchWithButtonPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    return (\r\n        <div className={S.search_box}>\r\n            <MyTextInput\r\n                variant={\"light\"}\r\n                placeholder={\"Search...\"}\r\n                style={{width: \"450px\", marginRight: \"20px\"}}\r\n                disabled={status === \"loading\"}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {removeDeck, updateDeck} from \"../../../../../Store/decks-reducer\";\r\nimport {UpdateDeckRequestData} from \"../../../../../Api/api\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n}\r\n\r\nexport const ActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteButtonHandler = () => {\r\n        if (userID === makerDeckID && deckID) {\r\n            dispatch(removeDeck(deckID))\r\n        }\r\n\r\n    }\r\n    const editButtonHandler = () => {\r\n        if (userID === makerDeckID && deckID) {\r\n            let data: UpdateDeckRequestData = {\r\n                cardsPack: {\r\n                    _id: deckID,\r\n                    name: \"New name Kelek Deck\"\r\n                }\r\n            }\r\n            dispatch(updateDeck(data))\r\n        }\r\n    }\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID && <>\r\n                <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                <MyButton onClick={editButtonHandler} variant={\"standard\"}>Edit</MyButton></>\r\n            }\r\n            <MyButton onClick={() => alert(\"Coming soon bro))\")} variant={\"purple\"}>Learn</MyButton>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Decks.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {MyDoubleRange} from \"../../../Common/Ranges/MyDoubleRange/MyDoubleRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {\r\n    changeDecksFilter,\r\n    changeMaxSelected, changeMinSelected,\r\n    createDeck,\r\n    DecksStateType,\r\n    getDecks,\r\n    setDeckID\r\n} from \"../../../../Store/decks-reducer\";\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {DataForRequest, getDecksForUI, getDecksRequestDC} from \"../MainCommon/utils/dataHandlers\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {CreateDeckRequestData} from \"../../../../Api/api\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {ActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {changeVisibleDecksPage} from \"../../../../Store/decks-reducer\";\r\n\r\nexport const Decks: React.FC = props => {\r\n    const {decks, filter, totalCount, visiblePage, minCardsCount, maxCardsCount, minSelectedCardsCount,\r\n        maxSelectedCardsCount} = useSelector<AppStoreType, DecksStateType>(state => state.decks)\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const [minValue, setMinValue] = useState<number>(minSelectedCardsCount ?? 0)\r\n    const [maxValue, setMaxValue] = useState<number>(maxSelectedCardsCount ?? 100)\r\n    const setMinValueHandler = (value: number) => {\r\n        setMinValue(value)\r\n        dispatch(changeMinSelected(value))\r\n    }\r\n    const setMaxValueHandler = (value: number) => {\r\n        setMaxValue(value)\r\n        dispatch(changeMaxSelected(value))\r\n    }\r\n\r\n    const [packName, setPackName] = useState<string>(\"\")\r\n    const [timeID, setTimeID] = useState<number | null>(null)\r\n    useEffect(() => {\r\n        if(status === \"loading\") {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            dispatch(getDecks(requestData))\r\n        }\r\n    }, [])\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            await dispatch(getDecks(requestData))\r\n            setTimeID(null)\r\n        }, 500)\r\n        setTimeID(+id)\r\n    }\r\n    useEffect(() => {\r\n        if (timeID && status !== \"loading\") {\r\n            clearTimeout(timeID)\r\n            requestStart()\r\n        } else if(status !== \"loading\"){\r\n            requestStart()\r\n        }\r\n    }, [filter, visiblePage, dispatch, minValue, maxValue, packName, userID])\r\n\r\n    const modeBlockStyle = `${S.onBlock} ${filter === \"My\" ? S.myMode : S.allMode}`\r\n\r\n    // handlers\r\n    const createDeckHandler = useCallback(() => {\r\n        let data: CreateDeckRequestData = {\r\n            cardsPack: {\r\n                name: \"Kelek Deck\",\r\n                private: false,\r\n                deckCover: \"\"\r\n            }\r\n        }\r\n        dispatch(createDeck(data))\r\n    }, [dispatch])\r\n    const myModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"My\"))\r\n    }, [dispatch])\r\n    const allModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"All\"))\r\n    }, [dispatch])\r\n    const visibleDecksPageHandler = (page: number) => {\r\n        dispatch(changeVisibleDecksPage(page))\r\n    }\r\n\r\n    //search sort\r\n    const searchHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.target.value)\r\n    }\r\n\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"name\", width: \"200px\"},\r\n        {title: \"count\", width: \"1fr\"},\r\n        {title: \"last update\", width: \"2fr\"},\r\n        {title: \"maker\", width: \"2fr\"},\r\n        {title: \"actions\", width: \"220px\"},\r\n    ]\r\n    const rowItems: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getDecksForUI(decks)?.forEach(o => {\r\n        rowItems.push([<NavLink onClick={() => dispatch(setDeckID(o.deckID ?? \"\"))} to={\"/app/cards\"}>{o.name}</NavLink>, o.cards, o.lastUpdate,\r\n            o.created, <ActionsPanel makerDeckID={o.makerDeckID} deckID={o.deckID}/>])\r\n    })\r\n    const disabled = timeID !== null || (decks?.length === 0 && filter === \"My\")\r\n        || decks === null || (minValue === 0 && maxValue === 0)\r\n    return (\r\n        <div className={Sc.workSpace}>\r\n            <div className={Sc.workSpace_container}>\r\n                <div className={Sc.settings}>\r\n                    <div className={S.settings_container}>\r\n                        <h3>Show decks cards</h3>\r\n                        <div className={S.showDecks}>\r\n                            {status === \"loading\"\r\n                                ? <div><CircularProgress/></div>\r\n                                : <>\r\n                                    <div className={S.my} onClick={myModeHandler}>My</div>\r\n                                    <div className={S.all} onClick={allModeHandler}>All</div>\r\n                                    <div className={modeBlockStyle}>{filter}</div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        <h3>Number of cards</h3>\r\n                        <div className={S.range}>\r\n                            <MyDoubleRange\r\n                                value={[minValue, maxValue]}\r\n                                min={minCardsCount}\r\n                                max={maxCardsCount}\r\n                                onChangeRangeFirst={setMinValueHandler}\r\n                                onChangeRangeSecond={setMaxValueHandler}\r\n                                disabled={disabled}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={Sc.list}>\r\n                    <div className={S.list_container}>\r\n                        <h2>Decks list</h2>\r\n                        <Search onChange={searchHandler} />\r\n                        <Table\r\n                            columns={columns}\r\n                            items={rowItems}\r\n                            totalCount={totalCount}\r\n                            visiblePage={visiblePage}\r\n                            setPage={visibleDecksPageHandler}\r\n                        />\r\n                        <MyButton variant={\"standard\"} disabled={status === \"loading\"}\r\n                                  onClick={createDeckHandler}>Add new deck</MyButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    cardsAPI,\r\n    CardType,\r\n    CreateCardDataType,\r\n    GetCardsRequestDataType,\r\n    GetCardsResponseType,\r\n    UpdateCardRequestType\r\n} from \"../Api/api\"\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {ThunkApiType} from \"./store\";\r\n\r\nconst initialState = {\r\n    cards: null as CardType[] | null,\r\n    cardsTotalCount: 0,\r\n    visiblePage: 1,\r\n    packUserId: \"\",\r\n    deckID: \"\"\r\n}\r\n\r\nexport const getCards = createAsyncThunk<GetCardsResponseType, GetCardsRequestDataType, ThunkApiType>(\"cards/getCards\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            const response = await cardsAPI.getCards(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const createCard = createAsyncThunk<void, CreateCardDataType, ThunkApiType>(\"cards/createCard\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.createCard(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardsPack_id: thunkAPI.getState().decks.selectedDeckID,\r\n                pageNumber: thunkAPI.getState().cards.visiblePage\r\n            }\r\n            thunkAPI.dispatch(getCards(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const removeCard = createAsyncThunk<void, string, ThunkApiType>(\"cards/removeCard\",\r\n    async (id, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.removeCard(id)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardsPack_id: thunkAPI.getState().decks.selectedDeckID,\r\n                pageNumber: thunkAPI.getState().cards.visiblePage\r\n            }\r\n            thunkAPI.dispatch(getCards(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const updateCard = createAsyncThunk<void, UpdateCardRequestType, ThunkApiType>(\"cards/updateCard\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.updateCard(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardsPack_id: thunkAPI.getState().decks.selectedDeckID,\r\n                pageNumber: thunkAPI.getState().cards.visiblePage\r\n            }\r\n            thunkAPI.dispatch(getCards(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeVisibleCardPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getCards.fulfilled, (state, action) => {\r\n            state.cards = action.payload.cards\r\n            state.cardsTotalCount = action.payload.cardsTotalCount\r\n            state.visiblePage = action.payload.page\r\n            state.packUserId = action.payload.packUserId\r\n        })\r\n    }\r\n})\r\nexport const {changeVisibleCardPage} = cardsSlice.actions\r\n// thunks\r\n\r\n// types\r\nexport type CardsStateType = typeof initialState\r\nexport type CardsActionsType = any","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {UpdateCardRequestType} from \"../../../../../Api/api\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {removeCard, updateCard} from \"../../../../../Store/cards-reducer\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n    cardID: string | undefined\r\n}\r\n\r\nexport const CardActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID, cardID} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteButtonHandler = () => {\r\n        if (userID === makerDeckID && deckID && cardID) {\r\n            dispatch(removeCard(cardID))\r\n        }\r\n\r\n    }\r\n    const editButtonHandler = () => {\r\n        if (userID === makerDeckID && deckID) {\r\n            let data: UpdateCardRequestType = {\r\n                card: {\r\n                    _id: cardID ?? \"\",\r\n                    question: \"New Kelek Question\"\r\n                }\r\n            }\r\n            dispatch(updateCard(data))\r\n        }\r\n    }\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID ? <>\r\n                <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                <MyButton onClick={editButtonHandler} variant={\"standard\"}>Edit</MyButton></> : <div>This is not your deck man</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, ReactNode, useEffect, useState} from \"react\";\r\nimport S from \"./Cards.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {CardsStateType, changeVisibleCardPage, createCard, getCards} from \"../../../../Store/cards-reducer\";\r\nimport {getCardsForUI} from \"../MainCommon/utils/dataHandlers\";\r\nimport {CreateCardDataType, GetCardsRequestDataType} from \"../../../../Api/api\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {CardActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\n\r\nexport const Cards: React.FC = props => {\r\n    const {cards, cardsTotalCount, visiblePage, packUserId\r\n    } = useSelector<AppStoreType, CardsStateType>(state => state.cards)\r\n    const deckID = useSelector<AppStoreType, string>(state => state.decks.selectedDeckID)\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n    const [question, setQuestion] = useState<string>(\"\")\r\n    const [timeID, setTimeID] = useState<number | null>(null)\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardQuestion: question,\r\n                cardsPack_id: deckID,\r\n                pageNumber: visiblePage\r\n            }\r\n            dispatch(getCards(requestData))\r\n            setTimeID(null)\r\n        }, 500)\r\n        setTimeID(+id)\r\n    }\r\n    useEffect(() => {\r\n        if(deckID !== \"\") {\r\n            if (timeID) {\r\n                clearTimeout(timeID)\r\n                requestStart()\r\n            } else {\r\n                requestStart()\r\n            }\r\n        }\r\n    }, [deckID, visiblePage, dispatch, question])\r\n\r\n    const visibleCardPageHandler = (page: number) => {\r\n        dispatch(changeVisibleCardPage(page))\r\n    }\r\n    const searchHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.target.value)\r\n    }\r\n    const addNewCardHandler = () => {\r\n        let requestData: CreateCardDataType = {\r\n            card: {\r\n                answer: \"Kelek answer\",\r\n                question: \"Kelek question\",\r\n                cardsPack_id: deckID,\r\n                grade: 0,\r\n                answerImg: \"\",\r\n                answerVideo: \"\",\r\n                questionImg: \"\",\r\n                questionVideo: \"\",\r\n                rating: 0,\r\n                shots: 0,\r\n                type: \"card\"\r\n            }\r\n        }\r\n        dispatch(createCard(requestData))\r\n    }\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"question\", width: \"2.5fr\"},\r\n        {title: \"Answer\", width: \"2.5fr\"},\r\n        {title: \"last update\", width: \"1.5fr\"},\r\n        {title: \"grade\", width: \"1.5fr\"},\r\n        {title: \"actions\", width: \"1.5fr\"},\r\n    ]\r\n    const rows: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getCardsForUI(cards)?.forEach(c => {\r\n        rows.push([c.question, c.answer, c.lastUpdate, c.grade,\r\n            <CardActionsPanel makerDeckID={packUserId} deckID={deckID} cardID={c.cardID}/>])\r\n    })\r\n\r\n    if(deckID === \"\") {\r\n        return <Redirect to={\"/app/decks\"}/>\r\n    }\r\n    return (\r\n        <div className={Sc.workSpace}>\r\n            <div className={Sc.workSpace_container}>\r\n                <div className={S.cards}>\r\n                    <h2>Cards list</h2>\r\n                    <Search onChange={searchHandler}/>\r\n                    <Table\r\n                        columns={columns}\r\n                        items={rows}\r\n                        totalCount={cardsTotalCount}\r\n                        visiblePage={visiblePage}\r\n                        setPage={visibleCardPageHandler}\r\n                    />\r\n                    <NavLink className={S.arrow} to={\"/app/decks\"}>&#129044;</NavLink>\r\n                    {userID === packUserId &&\r\n                        <MyButton onClick={addNewCardHandler} className={S.button} variant={\"standard\"}\r\n                                  disabled={status === \"loading\"}>Add New Card</MyButton>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback} from \"react\";\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {logout} from \"../../../../Store/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {UserDataType} from \"../../../../Api/authAPI\";\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = props => {\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(state => state.auth.userData)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    if(userData === null) {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={Sc.workSpace}>\r\n            <div>\r\n                <h2>Profile page</h2>\r\n                <div>Welcome {userData.name}</div>\r\n                {status === \"loading\"\r\n                    ? <CircularProgress/>\r\n                    : <MyButton onClick={logoutHandler}>Log out</MyButton>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Main.module.css\"\r\nimport {Header} from \"./Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Decks} from \"./Decks/Decks\";\r\nimport {Cards} from \"./Cards/Cards\";\r\nimport {Profile} from \"./Profile/Profile\";\r\n\r\nexport const Main: React.FC = props => {\r\n    return (\r\n        <div className={S.main}>\r\n            <Header />\r\n            <div className={S.content}>\r\n                <HashRouter>\r\n                    <Route path={\"/app/profile\"} render={() => <Profile />}/>\r\n                    <Route path={\"/app/decks\"} render={() => <Decks />}/>\r\n                    <Route path={\"/app/cards\"} render={() => <Cards />}/>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../Components/Feature/Authorization/Login/Login\";\r\nimport {Registration} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport {SandBox} from \"../Components/Common/SandBox/SandBox\";\r\nimport {Page404} from \"../Components/Common/Page404/Page404\";\r\nimport {RecoveryContainer} from \"../Components/Feature/Authorization/RecoveryPass/RecoveryContainer\";\r\nimport {NewPassContainer} from \"../Components/Feature/Authorization/NewPass/NewPassContainer\";\r\nimport {Main} from \"../Components/Feature/Main/Main\";\r\n\r\nexport const Routes: React.FC<any> = props => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={\"/app/profile\"}/>}/>\r\n                <Route path={\"/app\"} render={() => <Main />}/>\r\n                <Route path={\"/login\"} render={() => <Login/>}/>\r\n                <Route path={\"/registration\"} render={() => <Registration/>}/>\r\n                <Route path={\"/recovery\"} render={() => <RecoveryContainer />}/>\r\n                <Route path={\"/new-password/:token\"} render={() => <NewPassContainer/>}/>\r\n                <Route path={\"/sand-box\"} render={() => <SandBox/>}/>\r\n                <Route path={\"/404\"} render={() => <Page404/>}/>\r\n                <Redirect from={\"*\"} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Routes} from \"./Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../Store/store\";\r\nimport {ErrorSnackbar} from \"../Components/Common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {RequestStatusType} from \"../Store/app-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {me} from \"../Store/auth-reducer\";\r\n//раз два три\r\nexport const App: React.FC<any> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isInitialized = useSelector<AppStoreType, boolean>(state => state.app.isInitialized)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(me())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '50%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            {status === \"failed\" && <ErrorSnackbar/>}\r\n            <HashRouter>\r\n                <Routes />\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ProfileActionsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n// thunks\r\n\r\n// types\r\ntype ProfileStateType = typeof initialState\r\nexport type ProfileActionsType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport {RegistrationActionsType, registrationReducer} from \"./registration-reducer\";\r\nimport {RecoveryPassActionsType, recoveryPassReducer} from \"./recovery-pass-reducer\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\nimport {decksSlice} from \"./decks-reducer\";\r\nimport {cardsSlice} from \"./cards-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    auth: authReducer,\r\n    registration: registrationReducer,\r\n    recovery: recoveryPassReducer,\r\n    app: appReducer,\r\n    decks: decksSlice.reducer,\r\n    cards: cardsSlice.reducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// types\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, AllAppActionsType>\r\nexport type AllAppActionsType =\r\n    ProfileActionsType\r\n    | AuthActionsType\r\n    | RegistrationActionsType\r\n    | RecoveryPassActionsType\r\n    | AppActionsType\r\nexport type AppDispatchType = typeof store.dispatch\r\nexport type ThunkApiType = {\r\n    dispatch: AppDispatchType,\r\n    state: AppStoreType,\r\n    rejectValue: string\r\n}\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workSpace\":\"MainCommon_workSpace__1tTr6\",\"workSpace_container\":\"MainCommon_workSpace_container__n9Eyg\",\"settings\":\"MainCommon_settings__1WPdu\",\"list\":\"MainCommon_list__Lk9m1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"Decks_settings_container__86p1c\",\"showDecks\":\"Decks_showDecks__2EV_y\",\"onBlock\":\"Decks_onBlock__1gqvA\",\"myMode\":\"Decks_myMode__etNTh\",\"allMode\":\"Decks_allMode__3-Nla\",\"my\":\"Decks_my__Jv0c0\",\"all\":\"Decks_all__1cFTn\",\"range\":\"Decks_range__2pziN\",\"list_container\":\"Decks_list_container__-O49r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandBox_container\":\"SandBox_sandBox_container__3-oeV\",\"textInput_box\":\"SandBox_textInput_box__3Pvtc\",\"button_box\":\"SandBox_button_box__3PUbr\",\"reactCheckbox_box\":\"SandBox_reactCheckbox_box__1qV_a\",\"editableSpan_box\":\"SandBox_editableSpan_box__2iNX0\",\"mySelect_box\":\"SandBox_mySelect_box__2A6IA\",\"radio_box\":\"SandBox_radio_box__R0jV5\",\"range\":\"SandBox_range__14hYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chakres_box\":\"FrontEndMan_chakres_box__2yz-F\",\"chakres\":\"FrontEndMan_chakres__2SIRk\",\"ts\":\"FrontEndMan_ts__2Gj3W\",\"redux\":\"FrontEndMan_redux__1bIPJ\",\"html5\":\"FrontEndMan_html5__3XKsc\",\"css3\":\"FrontEndMan_css3__1q2pi\",\"jest\":\"FrontEndMan_jest__2Nzka\",\"react\":\"FrontEndMan_react__196gr\",\"heart\":\"FrontEndMan_heart__1pUhM\",\"rotation\":\"FrontEndMan_rotation__1qMyQ\",\"orbit\":\"FrontEndMan_orbit__1A_bT\",\"breath\":\"FrontEndMan_breath__K_HdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"MyTextInput_textInput__17y7d\",\"input\":\"MyTextInput_input__3OHTp\",\"error\":\"MyTextInput_error__2nWm5\",\"errorInput\":\"MyTextInput_errorInput__1t6uW\",\"standard\":\"MyTextInput_standard__2O_lj\",\"light\":\"MyTextInput_light__iUEMr\",\"dark\":\"MyTextInput_dark__GjyM1\",\"purple\":\"MyTextInput_purple__3QkfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TableHeader_header__71GfO\",\"row\":\"TableHeader_row__2r606\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInput\":\"MyCheckbox_checkInput__3B3cw\",\"checkbox\":\"MyCheckbox_checkbox__SyBLg\",\"labelText\":\"MyCheckbox_labelText__2BSTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_box\":\"MyRadioButton_radio_box__1iuSv\",\"radio\":\"MyRadioButton_radio__j3NdU\",\"fakeRadio\":\"MyRadioButton_fakeRadio__1meOb\",\"radio_container\":\"MyRadioButton_radio_container__3wCG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"RecoveryPass_instruction__29ATC\",\"button_box\":\"RecoveryPass_button_box__2kV9j\",\"message\":\"RecoveryPass_message__3DBTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3vMkE\",\"tableBody\":\"Table_tableBody__2HMIO\",\"pagination\":\"Table_pagination__2f3Nl\",\"circular_box\":\"Table_circular_box__3IbNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Login_text__2OWOC\",\"checkbox\":\"Login_checkbox__-x4Ia\",\"forgot\":\"Login_forgot__rlj2r\",\"error\":\"Login_error__30NBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span_box\":\"MyEditSpan_span_box__10T1R\",\"line\":\"MyEditSpan_line__3u0hN\",\"editSpan_box\":\"MyEditSpan_editSpan_box__1BfGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2nXV8\",\"activeLink\":\"Link_activeLink__325vw\",\"line\":\"Link_line__jNtOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__1nSqt\",\"arrow\":\"Cards_arrow__3lPdy\",\"button\":\"Cards_button__1q9i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__1tHF5\",\"standard\":\"MyButton_standard__QfE9O\",\"dark\":\"MyButton_dark__2SkVu\",\"purple\":\"MyButton_purple__2SUrf\",\"light\":\"MyButton_light__qjfbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select_box\":\"MySelect_select_box__15UzT\",\"select\":\"MySelect_select__2LbmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404_box\":\"Page404_page404_box__2nOiu\",\"man\":\"Page404_man__14MHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"NewPass_instruction__3Lg44\",\"button_box\":\"NewPass_button_box__1hGcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3M2wH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"Header_header_container__2ku2-\",\"nav_container\":\"Header_nav_container__12maj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowItem\":\"RowItem_rowItem__2i7-G\",\"deckItemWhite\":\"RowItem_deckItemWhite__DnlRM\",\"deckItemGray\":\"RowItem_deckItemGray___rwM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__3vkNa\",\"deleteButton\":\"ActionsPanel_deleteButton__2VpbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__2kRyu\",\"deleteButton\":\"ActionsPanel_deleteButton__1qkcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"CommonStyles_page_container__27F7E\",\"form_container\":\"CommonStyles_form_container__3NQAc\",\"fields\":\"CommonStyles_fields__1zJIY\",\"link_box\":\"CommonStyles_link_box__1n7Ng\",\"title\":\"CommonStyles_title__3vnRD\",\"link\":\"CommonStyles_link__2LH1p\",\"button_box\":\"CommonStyles_button_box__1M-HM\"};"],"sourceRoot":""}