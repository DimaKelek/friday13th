{"version":3,"sources":["Components/Feature/Authorization/AuthCommon/Styles/CommonStyles.module.css","Components/Feature/Main/Decks/Decks.module.css","Components/Feature/Main/Learning/Card/Card.module.css","Components/Feature/Main/MainCommon/Styles/MainCommon.module.css","Components/Feature/Main/Table/Table.module.css","Components/Common/SandBox/SandBox.module.css","Components/Common/Page404/FrontEndMan/FrontEndMan.module.css","Components/Feature/Main/Learning/Learning.module.css","Components/Feature/ModalWindows/Modal/Modal.module.css","Components/Common/MyTextInput/MyTextInput.module.css","Components/Feature/Main/Cards/Cards.module.css","Components/Feature/Main/Table/TableHeader/TableHeader.module.css","Components/Common/MyCheckbox/MyCheckbox.module.css","Components/Common/MyRadioButton/MyRadioButton.module.css","Components/Feature/Authorization/RecoveryPass/RecoveryPass.module.css","Components/Feature/Main/Decks/ActionsPanel/ActionsPanel.module.css","Components/Feature/Authorization/Login/Login.module.css","Components/Common/MyEditableSpan/MyEditSpan.module.css","Components/Feature/Main/Header/Link/Link.module.css","Components/Feature/ModalWindows/CommonModalDeckForm/CommonModalDeckForm.module.css","Components/Common/MyTextarea/MyTextarea.module.css","Components/Common/MyButton/MyButton.module.css","Components/Common/MySelect/MySelect.module.css","Components/Common/Page404/Page404.module.css","Components/Feature/Authorization/NewPass/NewPass.module.css","Components/Feature/Main/Main.module.css","Components/Feature/Main/Header/Header.module.css","Components/Feature/Main/Table/RowItem/RowItem.module.css","Components/Feature/Main/Table/Search/Search.module.css","Components/Feature/Main/Cards/ActionsPanel/ActionsPanel.module.css","Components/Feature/Main/Cards/Rating/Rating.module.css","Components/Feature/Authorization/Registration/Registration.module.css","Components/Common/Ranges/MyRange/MyRange.module.css","Components/Common/Ranges/MyDoubleRange/MyRangeDouble.module.css","Components/Feature/Main/Table/TableBody/TableBody.module.css","Components/Feature/ModalWindows/CommanModalCardFrom/CommanModalFrom.module.css","Store/app-reducer.ts","Components/Feature/Authorization/AuthCommon/utils/errorHandler.ts","Api/api.ts","Store/recovery-pass-reducer.ts","Store/auth-reducer.ts","Components/Common/MyTextInput/MyTextInput.tsx","Components/Common/MyButton/MyButton.tsx","Components/Common/MyCheckbox/MyCheckbox.tsx","Store/registration-reducer.ts","Components/Feature/Authorization/Login/Login.tsx","Components/Feature/Authorization/Registration/Registration.tsx","Components/Common/MyEditableSpan/MyEditableSpan.tsx","Components/Common/MySelect/MySelect.tsx","Components/Common/MyRadioButton/MyRadioButton.tsx","Components/Common/Ranges/MyRange/MyRange.tsx","Components/Common/Ranges/MyDoubleRange/MyDoubleRange.tsx","Components/Common/SandBox/SandBox.tsx","Components/Common/Page404/Images/chakres.png","Components/Common/Page404/Images/react.svg","Components/Common/Page404/Images/typescript.svg","Components/Common/Page404/Images/redux.svg","Components/Common/Page404/Images/html5.svg","Components/Common/Page404/Images/css3.svg","Components/Common/Page404/Images/jest.png","Components/Common/Page404/FrontEndMan/FrontEndMan.tsx","Components/Common/Page404/Page404.tsx","Components/Feature/Authorization/AuthCommon/Field/Field.tsx","Components/Feature/Authorization/RecoveryPass/message.svg","Components/Feature/Authorization/RecoveryPass/RecoveryPass.tsx","Components/Feature/Authorization/RecoveryPass/RecoveryContainer.tsx","Components/Common/ErrorSnackbar/ErrorSnackbar.tsx","Components/Feature/Authorization/NewPass/NewPass.tsx","Components/Feature/Authorization/NewPass/NewPassContainer.tsx","Components/Feature/Main/Header/Link/Link.tsx","Components/Feature/Main/MainCommon/Icons/decks.svg","Components/Feature/Main/MainCommon/Icons/profileIcon.svg","Components/Feature/Main/Header/Header.tsx","Components/Feature/Main/MainCommon/utils/dataHandlers.ts","Store/decks-reducer.ts","Components/Feature/Main/Table/TableHeader/TableHeader.tsx","Components/Feature/Main/Table/RowItem/RowItem.tsx","Components/Feature/Main/Table/TableBody/TableBody.tsx","Components/Feature/Main/Table/Pagination/Pagination.tsx","Components/Feature/Main/Table/Table.tsx","Components/Feature/Main/Table/Search/Search.tsx","Store/learning-reducer.ts","Components/Feature/Main/Decks/ActionsPanel/ActionsPanel.tsx","Components/Feature/ModalWindows/Modal/MyModal.tsx","Components/Feature/ModalWindows/CommonModalDeckForm/CommonModalDeckFrom.tsx","Components/Feature/Main/Decks/Decks.tsx","Store/cards-reducer.ts","Components/Feature/Main/Cards/ActionsPanel/ActionsPanel.tsx","Components/Common/MyTextarea/MyTextarea.tsx","Components/Feature/ModalWindows/CommanModalCardFrom/CommanModalCardForm.tsx","Components/Feature/Main/Cards/star.png","Components/Feature/Main/Cards/Rating/Rating.tsx","Components/Feature/Main/Cards/Cards.tsx","Components/Feature/Main/Profile/Profile.tsx","Components/Feature/Main/Learning/Card/Card.tsx","Components/Feature/Main/Learning/dimych.jpg","Components/Feature/Main/Learning/LearningMode.tsx","Components/Feature/Main/Main.tsx","App/Routes.tsx","App/App.tsx","reportWebVitals.ts","Store/profile-reducer.ts","Store/store.ts","index.tsx"],"names":["module","exports","appSlice","createSlice","name","initialState","status","error","isInitialized","needUpdate","reducers","setAppStatus","state","action","payload","setError","setInitialized","setNeedUpdate","actions","handleServerNetworkError","dispatch","errorMessage","response","data","message","instanse","axios","create","baseURL","withCredentials","authAPI","authData","post","registerData","delete","decksAPI","id","user_id","min","max","packName","get","pageNumber","put","cardsAPI","cardsPack_id","cardAnswer","cardQuestion","card","recoverySlice","messageIsSand","passIsRecovered","setStatusSendingMessage","setStatusPassRecovery","authSlice","userData","isLoggedIn","setUserData","changeLoginStatus","MyTextInput","props","type","onChange","onChangeText","onKeyPress","onEnter","className","errorClassName","variant","restProps","finalInputClassName","S","input","errorInput","finalErrorClassName","textInput","e","currentTarget","value","key","MyButton","disabled","onClick","children","finalClassName","button","MyCheckbox","onChangeChecked","checked","labelCheckbox","check","checkInput","checkbox","labelText","registerSlice","register","changeRegisterStatus","Login","useSelector","auth","app","useDispatch","useEffect","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","length","onSubmit","a","storedData","_id","avatar","publicCardPacksCount","resetForm","to","Sc","page_container","form_container","handleSubmit","fields","placeholder","touched","getFieldProps","style","minWidth","s","forgot","button_box","CircularProgress","link_box","title","link","Registration","registration","signupForm","confirmedPassword","formData","form","autoComplete","MyEditableSpan","autoFocus","onBlur","spanProps","onDoubleClick","restSpanProps","useState","editMode","setEditMode","editSpan_box","span_box","line","MySelect","options","onChangeOption","mappedOptions","map","o","i","select_box","select","MyRadioButton","onChangeCallback","finalRadioStyle","radio_container","radio","fakeRadio","radio_box","MyRange","onChangeRange","range","Slider","MyDoubleRange","onChangeRangeFirst","onChangeRangeSecond","onClickHandler","doubleRange","onChangeDoubleRange","valueLabelDisplay","getAriaValueText","SandBox","editLabel","setEditLabel","setSelect","text","setText","setCheck","rangeStart","setRangeStart","rangeEnd","setRangeEnd","sandBox_container","textInput_box","alert","reactCheckbox_box","editableSpan_box","undefined","mySelect_box","FrontEndMan","chakres_box","chakres","src","alt","react","iconReact","ts","iconTS","redux","iconRedux","html5","iconHTML","css3","iconCSS","jest","iconJest","Page404","page404_box","man","createField","handler","blur","RecoveryPass","React","memo","submit","emailValue","changeHandler","isSand","instruction","Message","RecoveryContainer","recovery","from","handleChange","Alert","elevation","ErrorSnackbar","appError","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","NewPass","passwordValue","token","NewPassContainer","isRecovered","useParams","resetPasswordToken","Link","path","icon","activeClassName","activeLink","Header","header_container","nav_container","decksIcon","profileIcon","getDecksRequestDC","filter","getDecks","createAsyncThunk","thunkAPI","rejectWithValue","createDeck","dataForRequest","getState","decks","visiblePage","requestData","removeDeck","updateDeck","decksSlice","totalCount","minCardsCount","maxCardsCount","selectedDeckID","minSelectedCardsCount","maxSelectedCardsCount","changeDecksFilter","changeVisibleDecksPage","setDeckID","changeMinSelected","changeMaxSelected","extraReducers","builder","addCase","fulfilled","cardPacks","cardPacksTotalCount","TableHeader","items","columns","c","row","header","callStyle","RowItem","cells","index","color","renderCells","Sr","rowItem","TableBody","cellStyle","rowItems","item","body","PaginationControlled","page","setPage","count","Math","ceil","Pagination","Table","display","gridTemplateColumns","width","join","table","tableBody","circular_box","pagination","Search","search_box","search","updateRating","grade","card_id","learning","selectedCardID","learningSlice","entityStatus","modeStart","changeEntityStatus","setModeStart","setSelectedCardID","ActionsPanel","deckID","makerDeckID","setEdit","userID","deck","find","d","deleteButtonHandler","useCallback","editButtonHandler","buttonsPanel","deleteButton","editButton","learnButton","cardsCount","MyModal","closeModal","height","prevMessage","afterMessage","styleSettings","background","modal","modal_container","prev","after","CommonModalDeckForm","setShow","forEach","commonDeckForm","deckName","privacy","buttonBox","Decks","decksState","minValue","setMinValue","maxValue","setMaxValue","setPackName","timeID","setTimeID","showAdd","setShowAdd","showEdit","setShowEdit","requestStart","setTimeout","clearTimeout","myModeHandler","allModeHandler","visibleDecksPageHandler","setMinValueHandler","setMaxValueHandler","searchHandler","target","onCreateDeckClick","createDeckHandler","cardsPack","private","editDeckHandler","decksForUI","temp","split","splice","lastUpdate","updated","userName","created","user_name","cards","getDecksForUI","push","modeBlockStyle","onBlock","myMode","allMode","workSpace","workSpace_container","settings","settings_container","showDecks","my","all","list","list_container","search_container","table_container","getCards","createCard","params","removeCard","cardID","updateCard","cardsSlice","cardsTotalCount","packUserId","changeVisibleCardPage","CardActionsPanel","MyTextarea","textarea","CommonModalCardForm","submitForm","maker","qa","question","answer","commonCardForm","addCard","Rating","stars","star","rating","star_container","Cards","cardsState","setQuestion","setAnswer","showAnswer","setShowAnswer","visibleCardPageHandler","addNewCardHandler","showAnswerCallback","onAddCardClick","answerImg","answerVideo","questionImg","questionVideo","shots","onEditCardClick","rows","cardsForUI","getCardsForUI","floor","Profile","logoutHandler","bbb","Card","getNewCard","setCurrentCard","rotated","setRotated","send","setSend","onNextClick","selectedCard","ratingRequestHandler","ratingPanel","rp","front","click","back","answer_container","success","preloader","LearningMode","currentCard","showModal","setShowModal","getCard","sum","reduce","acc","rand","random","res","newSum","dimych","start","exit","Main","main","content","render","Routes","exact","App","position","top","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","profileSlice","rootReducer","combineReducers","profile","reducer","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f844029b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"CommonStyles_page_container__27F7E\",\"form_container\":\"CommonStyles_form_container__3NQAc\",\"fields\":\"CommonStyles_fields__1zJIY\",\"link_box\":\"CommonStyles_link_box__1n7Ng\",\"title\":\"CommonStyles_title__3vnRD\",\"link\":\"CommonStyles_link__2LH1p\",\"button_box\":\"CommonStyles_button_box__1M-HM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"Decks_settings_container__86p1c\",\"showDecks\":\"Decks_showDecks__2EV_y\",\"onBlock\":\"Decks_onBlock__1gqvA\",\"myMode\":\"Decks_myMode__etNTh\",\"allMode\":\"Decks_allMode__3-Nla\",\"my\":\"Decks_my__Jv0c0\",\"all\":\"Decks_all__1cFTn\",\"range\":\"Decks_range__2pziN\",\"list_container\":\"Decks_list_container__-O49r\",\"search_container\":\"Decks_search_container__3CmzG\",\"table_container\":\"Decks_table_container__3q8Fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2kMNl\",\"front\":\"Card_front__2AA2a\",\"back\":\"Card_back__3kvJB\",\"answer_container\":\"Card_answer_container__3ORO3\",\"click\":\"Card_click__1dERb\",\"rating\":\"Card_rating__3p86x\",\"send\":\"Card_send__2R2yq\",\"success\":\"Card_success__1E2RC\",\"preloader\":\"Card_preloader__49NMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workSpace\":\"MainCommon_workSpace__1tTr6\",\"workSpace_container\":\"MainCommon_workSpace_container__n9Eyg\",\"settings\":\"MainCommon_settings__1WPdu\",\"list\":\"MainCommon_list__Lk9m1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3vMkE\",\"tableBody\":\"Table_tableBody__2HMIO\",\"pagination\":\"Table_pagination__2f3Nl\",\"circular_box\":\"Table_circular_box__3IbNv\",\"callStyle\":\"Table_callStyle__3J4wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandBox_container\":\"SandBox_sandBox_container__3-oeV\",\"textInput_box\":\"SandBox_textInput_box__3Pvtc\",\"button_box\":\"SandBox_button_box__3PUbr\",\"reactCheckbox_box\":\"SandBox_reactCheckbox_box__1qV_a\",\"editableSpan_box\":\"SandBox_editableSpan_box__2iNX0\",\"mySelect_box\":\"SandBox_mySelect_box__2A6IA\",\"radio_box\":\"SandBox_radio_box__R0jV5\",\"range\":\"SandBox_range__14hYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chakres_box\":\"FrontEndMan_chakres_box__2yz-F\",\"chakres\":\"FrontEndMan_chakres__2SIRk\",\"ts\":\"FrontEndMan_ts__2Gj3W\",\"redux\":\"FrontEndMan_redux__1bIPJ\",\"html5\":\"FrontEndMan_html5__3XKsc\",\"css3\":\"FrontEndMan_css3__1q2pi\",\"jest\":\"FrontEndMan_jest__2Nzka\",\"react\":\"FrontEndMan_react__196gr\",\"heart\":\"FrontEndMan_heart__1pUhM\",\"rotation\":\"FrontEndMan_rotation__1qMyQ\",\"orbit\":\"FrontEndMan_orbit__1A_bT\",\"breath\":\"FrontEndMan_breath__K_HdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learning\":\"Learning_learning__QI2PL\",\"workSpace\":\"Learning_workSpace__6ePul\",\"openWorkSpace\":\"Learning_openWorkSpace__386Pe\",\"workSpace_container\":\"Learning_workSpace_container__2pE08\",\"informationAnime\":\"Learning_informationAnime__1zSJ2\",\"instruction\":\"Learning_instruction__1hvCp\",\"start\":\"Learning_start__1N5Fm\",\"startMode\":\"Learning_startMode__RlLua\",\"exit\":\"Learning_exit__2XTGX\",\"modal_container\":\"Learning_modal_container__qO-CO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2vzro\",\"modal_container\":\"Modal_modal_container__efqeV\",\"prev\":\"Modal_prev__YJkFb\",\"after\":\"Modal_after__21-LY\",\"background\":\"Modal_background__RIS-n\",\"closeModal\":\"Modal_closeModal__1aHg3\",\"backgroundAnime\":\"Modal_backgroundAnime__2qmhI\",\"modalAnime\":\"Modal_modalAnime__9Rcgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"MyTextInput_textInput__17y7d\",\"input\":\"MyTextInput_input__3OHTp\",\"error\":\"MyTextInput_error__2nWm5\",\"errorInput\":\"MyTextInput_errorInput__1t6uW\",\"standard\":\"MyTextInput_standard__2O_lj\",\"light\":\"MyTextInput_light__iUEMr\",\"dark\":\"MyTextInput_dark__GjyM1\",\"purple\":\"MyTextInput_purple__3QkfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__1nSqt\",\"title\":\"Cards_title__3bU4R\",\"search\":\"Cards_search__Hxvih\",\"showAnswer\":\"Cards_showAnswer__jzmqD\",\"table_container\":\"Cards_table_container__2AsO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TableHeader_header__71GfO\",\"row\":\"TableHeader_row__2r606\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInput\":\"MyCheckbox_checkInput__3B3cw\",\"checkbox\":\"MyCheckbox_checkbox__SyBLg\",\"labelText\":\"MyCheckbox_labelText__2BSTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_box\":\"MyRadioButton_radio_box__1iuSv\",\"radio\":\"MyRadioButton_radio__j3NdU\",\"fakeRadio\":\"MyRadioButton_fakeRadio__1meOb\",\"radio_container\":\"MyRadioButton_radio_container__3wCG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"RecoveryPass_instruction__29ATC\",\"button_box\":\"RecoveryPass_button_box__2kV9j\",\"message\":\"RecoveryPass_message__3DBTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__3vkNa\",\"deleteButton\":\"ActionsPanel_deleteButton__2VpbU\",\"learnButton\":\"ActionsPanel_learnButton__3BNc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Login_text__2OWOC\",\"checkbox\":\"Login_checkbox__-x4Ia\",\"forgot\":\"Login_forgot__rlj2r\",\"error\":\"Login_error__30NBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span_box\":\"MyEditSpan_span_box__10T1R\",\"line\":\"MyEditSpan_line__3u0hN\",\"editSpan_box\":\"MyEditSpan_editSpan_box__1BfGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__2nXV8\",\"activeLink\":\"Link_activeLink__325vw\",\"line\":\"Link_line__jNtOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CommonModalDeckForm_form__3Yahn\",\"radio\":\"CommonModalDeckForm_radio__2NCx4\",\"buttonBox\":\"CommonModalDeckForm_buttonBox__1X2vt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyTextarea_textarea__1wCDl\",\"error\":\"MyTextarea_error__kXjQ6\",\"errorMessage\":\"MyTextarea_errorMessage__7gJ_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__1tHF5\",\"standard\":\"MyButton_standard__QfE9O\",\"dark\":\"MyButton_dark__2SkVu\",\"purple\":\"MyButton_purple__2SUrf\",\"light\":\"MyButton_light__qjfbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select_box\":\"MySelect_select_box__15UzT\",\"select\":\"MySelect_select__2LbmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404_box\":\"Page404_page404_box__2nOiu\",\"man\":\"Page404_man__14MHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"NewPass_instruction__3Lg44\",\"button_box\":\"NewPass_button_box__1hGcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__3M2wH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"Header_header_container__2ku2-\",\"nav_container\":\"Header_nav_container__12maj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowItem\":\"RowItem_rowItem__2i7-G\",\"deckItemWhite\":\"RowItem_deckItemWhite__DnlRM\",\"deckItemGray\":\"RowItem_deckItemGray___rwM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_box\":\"Search_search_box__2l7aT\",\"search\":\"Search_search__1o_6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__2kRyu\",\"deleteButton\":\"ActionsPanel_deleteButton__1qkcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating\":\"Rating_rating__2ALUE\",\"star_container\":\"Rating_star_container__sLWJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__2WtS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"MyRange_range__1qhMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRange\":\"MyRangeDouble_doubleRange__NHQmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"TableBody_body__37Ur8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCard\":\"CommanModalFrom_addCard__2bhbb\"};","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false,\r\n    needUpdate: true\r\n}\r\n\r\nexport const appSlice = createSlice({\r\n    name: \"app\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAppStatus(state, action: PayloadAction<RequestStatusType>) {\r\n            state.status = action.payload\r\n        },\r\n        setError(state, action: PayloadAction<string>) {\r\n            state.error = action.payload\r\n        },\r\n        setInitialized(state, action: PayloadAction<boolean>) {\r\n            state.isInitialized = action.payload\r\n        },\r\n        setNeedUpdate(state, action: PayloadAction<boolean>) {\r\n            state.needUpdate = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setAppStatus, setError, setInitialized, setNeedUpdate} = appSlice.actions\r\n\r\n// types\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppStateType = typeof initialState\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setInitialized>","import {Dispatch} from \"redux\"\r\nimport {AppActionsType, setAppStatus, setError} from \"../../../../../Store/app-reducer\";\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const errorMessage = error.response.data.error || (error.message + ', more details in the console')\r\n    dispatch(setError(errorMessage))\r\n    dispatch(setAppStatus(\"failed\"))\r\n    return errorMessage\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<AppActionsType>","import axios from \"axios\"\r\nimport {AuthDataType, UserDataType} from \"../Store/auth-reducer\";\r\nimport {RegisterDataType} from \"../Store/registration-reducer\";\r\nimport {ForgotPasswordRequest, RecoveryRequestType} from \"../Store/recovery-pass-reducer\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    login(authData: AuthDataType) {\r\n        return instanse.post<LoginResponseType>(`/auth/login`, authData)\r\n    },\r\n    registration(registerData: RegisterDataType) {\r\n        return instanse.post<RegistrationResponseType>(`/auth/register`, registerData)\r\n    },\r\n    checkingAuth() {\r\n        return instanse.post<LoginResponseType>(`/auth/me`, {})\r\n    },\r\n    logout() {\r\n        return instanse.delete<ResponseType>(`/auth/me`, {})\r\n    },\r\n    forgot(data: ForgotPasswordRequest) {\r\n        return instanse.post<ResponseType>(`/auth/forgot`, data)\r\n    },\r\n    recoveryPass(data: RecoveryRequestType) {\r\n        return instanse.post<ResponseType>(`/auth/set-new-password`, data)\r\n    }\r\n}\r\n\r\n// types\r\ntype LoginResponseType = UserDataType & {\r\n    error?: string\r\n}\r\ntype ResponseType = {\r\n    info?: string\r\n    error?: string\r\n}\r\ntype RegistrationResponseType = { addedUser: {} } & {\r\n    error?: string\r\n}\r\n\r\nexport const decksAPI = {\r\n    getDecks(data: GetDecksRequestDataType) {\r\n        let id = data.user_id ? `&user_id=${data.user_id}` : \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let packName = data.packName ? `&packName=${data.packName}` : \"\"\r\n        return instanse.get<DeckResponseType>(`/cards/pack?pageCount=7&page=${data.pageNumber}${id}${min}${max}${packName}`)\r\n\r\n    },\r\n    createDeck(data: CreateDeckRequestData) {\r\n        return instanse.post(`/cards/pack`, data)\r\n    },\r\n    removeDeck(id: string) {\r\n        return instanse.delete(`/cards/pack?id=${id}`)\r\n    },\r\n    updateDeck(data: UpdateDeckRequestData) {\r\n        return instanse.put(`/cards/pack`, data)\r\n    }\r\n}\r\n\r\nexport type DeckType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type GetDecksRequestDataType = {\r\n    pageNumber: number\r\n    user_id?: string\r\n    min?: number\r\n    max?: number\r\n    packName?: string\r\n}\r\nexport type DeckResponseType = {\r\n    cardPacks: DeckType[]\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n}\r\n\r\nexport type CreateDeckRequestData = {\r\n    cardsPack: DeckDataType\r\n}\r\nexport type DeckDataType = {\r\n    name: string\r\n    private: boolean\r\n}\r\n\r\nexport type UpdateDeckRequestData = {\r\n    cardsPack: {\r\n        _id: string\r\n        name: string\r\n        private: boolean\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(data: GetCardsRequestDataType) {\r\n        let id = data.cardsPack_id ? `&cardsPack_id=${data.cardsPack_id}` : \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let cardAnswer = data.cardAnswer ? `&cardAnswer=${data.cardAnswer}` : \"\"\r\n        let cardQuestion = data.cardQuestion ? `&cardQuestion=${data.cardQuestion}` : \"\"\r\n        return instanse.get<GetCardsResponseType>(`/cards/card?pageCount=7&page=${data.pageNumber}${id}${min}${max}${cardAnswer}${cardQuestion}`)\r\n    },\r\n    createCard(data: CreateCardDataType) {\r\n        return instanse.post(`/cards/card`, {card: data})\r\n    },\r\n    removeCard(id: string) {\r\n        return instanse.delete(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(data: UpdateCardRequestType) {\r\n        return instanse.put(`/cards/card`, {card: data})\r\n    },\r\n    updateRating(data: UpdateRatingType) {\r\n        return instanse.put(`/cards/grade`, data)\r\n    }\r\n}\r\n\r\nexport type GetCardsRequestDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    pageNumber?: number\r\n}\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    _id: string\r\n}\r\n\r\nexport type CreateCardDataType = {\r\n    cardsPack_id: string\r\n    question: string\r\n    answer: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\nexport type UpdateCardRequestType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport type UpdateRatingType = {\r\n    grade: GradeType\r\n    card_id: string\r\n}\r\n\r\nexport type GradeType = 1 | 2 | 3 | 4 | 5","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    messageIsSand: false,\r\n    passIsRecovered: false\r\n}\r\n\r\nexport const recoverySlice = createSlice({\r\n    name: \"recovery\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setStatusSendingMessage(state, action: PayloadAction<boolean>) {\r\n            state.messageIsSand = action.payload\r\n        },\r\n        setStatusPassRecovery(state, action: PayloadAction<boolean>) {\r\n            state.passIsRecovered = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setStatusSendingMessage, setStatusPassRecovery} = recoverySlice.actions\r\n\r\n// thunks\r\nexport const forgotPass = (data: ForgotPasswordRequest): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.forgot(data)\r\n        dispatch(setStatusSendingMessage(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\nexport const recovery = (data: RecoveryRequestType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.recoveryPass(data)\r\n        dispatch(setStatusPassRecovery(true))\r\n        dispatch(setStatusSendingMessage(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RecoveryRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type ForgotPasswordRequest = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RecoveryPassStateType = typeof initialState\r\nexport type RecoveryPassActionsType =\r\n    ReturnType<typeof setStatusSendingMessage>\r\n    | ReturnType<typeof setStatusPassRecovery>","import {AppThunk} from \"./store\";\r\nimport {setAppStatus, setError, setInitialized} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {setStatusPassRecovery} from \"./recovery-pass-reducer\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {authAPI} from \"../Api/api\";\r\n\r\nconst initialState = {\r\n    userData: null as UserDataType | null,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setUserData(state, action: PayloadAction<UserDataType | null>) {\r\n            state.userData = action.payload\r\n        },\r\n        changeLoginStatus(state, action: PayloadAction<boolean>) {\r\n            state.isLoggedIn = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setUserData, changeLoginStatus} = authSlice.actions\r\n\r\n\r\n// thunks\r\nexport const checkingAuthorization = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        const response = await authAPI.checkingAuth()\r\n        const storedData: UserDataType = {\r\n            _id: response.data._id,\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            avatar: response.data.avatar || null,\r\n            publicCardPacksCount: response.data.publicCardPacksCount\r\n        }\r\n        dispatch(setUserData(storedData))\r\n        dispatch(changeLoginStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setInitialized(true))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setInitialized(true))\r\n    }\r\n}\r\nexport const login = (authData: AuthDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        const response = await authAPI.login(authData)\r\n        const storedData: UserDataType = {\r\n            _id: response.data._id,\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            avatar: response.data.avatar || null,\r\n            publicCardPacksCount: response.data.publicCardPacksCount\r\n        }\r\n        dispatch(setUserData(storedData))\r\n        dispatch(setStatusPassRecovery(false))\r\n        dispatch(changeLoginStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setInitialized(true))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    try {\r\n        dispatch({type: \"jfjdkfjd\", bbb: \"jdjdsnjd\"})\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.logout()\r\n        dispatch(changeLoginStatus(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setUserData(null))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\n// types\r\nexport type AuthDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string | null\r\n    publicCardPacksCount: number\r\n}\r\nexport type AuthStateType = typeof initialState\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setUserData>\r\n    | ReturnType<typeof changeLoginStatus>\r\n    | ReturnType<typeof setInitialized>","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport S from './MyTextInput.module.css'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string | null\n    errorClassName?: string\n    variant?: \"light\" | \"dark\" | \"standard\" | \"purple\"\n}\n\nexport const MyTextInput: React.FC<SuperInputTextPropsType> = props => {\n    const {type = \"text\", onChange, onChangeText, onKeyPress, onEnter, error,\n        className, errorClassName, variant = \"light\", ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        onEnter && e.key === 'Enter' && onEnter()\n    }\n\n    const finalInputClassName = `${S.input} ${variant && S[variant]} ${className} ${error && S.errorInput}`\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\n\n    return (\n        <div className={S.textInput}>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {error && <span className={finalErrorClassName}>{error}</span>}\n        </div>\n    )\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    variant?: ElementColorVariants\r\n}\r\nexport type ElementColorVariants = \"light\" | \"dark\" | \"standard\" | \"purple\"\r\nexport const MyButton: React.FC<MyButtonPropsType> = props => {\r\n    const {disabled, onClick, className, children, variant, ...restProps} = props\r\n    const finalClassName = `${className} ${S.button} ${variant && S[variant]}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            {...restProps}\r\n        >{children}</button>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./MyCheckbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype NeonCheckboxPropsType = DefaultInputPropsType & {\r\n    checked?: boolean\r\n    onChangeChecked?: (e: boolean) => void\r\n}\r\n\r\nexport const MyCheckbox: React.FC<NeonCheckboxPropsType> = props => {\r\n    const {onChange, children, onChangeChecked, checked, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    const labelCheckbox = `${S.check}`\r\n\r\n    return (\r\n        <label className={labelCheckbox}>\r\n            <input\r\n                checked={checked}\r\n                onChange={onChangeCallback}\r\n                type={\"checkbox\"}\r\n                className={S.checkInput}\r\n                {...restProps}\r\n            />\r\n            <span className={S.checkbox}/>\r\n            {children && <span className={S.labelText}>{children}</span>}\r\n        </label>\r\n    )\r\n}","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    register: false\r\n}\r\n\r\nexport const registerSlice = createSlice({\r\n    name: \"registration\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeRegisterStatus(state, action: PayloadAction<boolean>) {\r\n            state.register = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changeRegisterStatus} = registerSlice.actions\r\n\r\n// thunks\r\nexport const registration = (registerData: RegisterDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.registration(registerData)\r\n        dispatch(changeRegisterStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationStateType = typeof initialState\r\nexport type RegistrationActionsType = ReturnType<typeof changeRegisterStatus>","import React, {useEffect} from \"react\";\r\nimport {AppStoreType} from '../../../../Store/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useFormik} from 'formik';\r\nimport {login} from '../../../../Store/auth-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport s from './Login.module.css'\r\nimport Sc from '../AuthCommon/Styles/CommonStyles.module.css'\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../../../Common/MyCheckbox/MyCheckbox\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {changeRegisterStatus} from \"../../../../Store/registration-reducer\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(changeRegisterStatus(false))\r\n    }, [dispatch])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be 8 characters or less';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/app/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>IT - Incubator</h3>\r\n                <h4>Sing In</h4>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            variant=\"light\"\r\n                            placeholder={\"Email\"}\r\n                            error={formik.touched.email ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            variant=\"light\"\r\n                            placeholder={\"Password\"}\r\n                            error={formik.touched.password ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <NavLink className={s.forgot} to='/recovery'>Forgot Password</NavLink>\r\n                    </div>\r\n                    <div className={s.checkbox}>\r\n                        <MyCheckbox  {...formik.getFieldProps('rememberMe')}>Remember Me</MyCheckbox>\r\n                    </div>\r\n                    <div className={Sc.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton className={s.button} type={'submit'} variant='purple'>Login</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Don't have an account?</span>\r\n                    <NavLink to=\"/registration\"><span className={Sc.link}>Sign Up</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useFormik} from 'formik';\r\nimport S from \"./Registration.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {login} from \"../../../../Store/auth-reducer\";\r\nimport {registration} from \"../../../../Store/registration-reducer\";\r\n\r\ntype RegistrationPropsType = {}\r\n\r\ntype SignupFormErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmedPassword?: string\r\n}\r\n\r\nexport type SignupFormDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const register = useSelector<AppStoreType, boolean>(state => state.registration.register)\r\n    const dispatch = useDispatch()\r\n\r\n    const signupForm = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n        },\r\n        validate: (formData) => {\r\n            const errors: SignupFormErrorType = {};\r\n            if (!formData.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formData.email)) {\r\n                errors.email = 'Invalid email address.';\r\n            }\r\n            if (!formData.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (formData.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            }\r\n            if (formData.password && !formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'Confirm your password'\r\n            } else if (formData.password !== formData.confirmedPassword) {\r\n                errors.confirmedPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            if (values.password === values.confirmedPassword) {\r\n                dispatch(registration({email: values.email, password: values.password}))\r\n                signupForm.resetForm()\r\n            }\r\n        },\r\n    })\r\n\r\n    if (register) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Sign Up</h4>\r\n                <form onSubmit={signupForm.handleSubmit} className={S.form} autoComplete={'off'}>\r\n                    <div className={Sc.fields}>\r\n                        <MyTextInput\r\n                            error={signupForm.touched.email ? signupForm.errors.email : null}\r\n                            {...signupForm.getFieldProps('email')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Email\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.password ? signupForm.errors.password : null}\r\n                            {...signupForm.getFieldProps('password')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                        <MyTextInput\r\n                            type=\"password\"\r\n                            error={signupForm.touched.confirmedPassword ? signupForm.errors.confirmedPassword : null}\r\n                            {...signupForm.getFieldProps('confirmedPassword')}\r\n                            variant={\"light\"}\r\n                            placeholder={\"Confirm password\"}\r\n                            style={{minWidth: \"300px\"}}\r\n                        />\r\n                    </div>\r\n                    {status === \"loading\"\r\n                        ? <CircularProgress/>\r\n                        : <div>\r\n                            <NavLink to={'/login'}><MyButton type={'button'} variant={\"light\"}>Cancel</MyButton></NavLink>\r\n                            <MyButton type={'submit'} variant={\"purple\"}>Sign Up</MyButton>\r\n                        </div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\nimport {MyButton} from \"../MyButton/MyButton\";\nimport S from \"./MyEditSpan.module.css\"\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType\n}\n\nexport const MyEditableSpan: React.FC<SuperEditableSpanType> = props => {\n    const {autoFocus, onBlur, onEnter, spanProps, ...restProps} = props\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n    const editCallback = () => {\n        setEditMode(true)\n    }\n    return (\n        <div className={S.editSpan_box}>\n            {editMode\n                ? <MyTextInput autoFocus onBlur={onBlurCallback} onEnter={onEnterCallback} {...restProps}/>\n                : <>\n                    <MyButton onClick={editCallback}>✎ Edit</MyButton>\n                    <div className={S.span_box}>\n                        <span onDoubleClick={onDoubleClickCallBack}\n                             className={className} {...restSpanProps}\n                        >{children || restProps.value}</span>\n                        <span className={S.line}/>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\nimport S from \"./MySelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: any) => void\n}\n\nexport const MySelect: React.FC<SuperSelectPropsType> = props => {\n    const {options, onChange, onChangeOption, ...restProps} = props\n\n    const mappedOptions: any[] = options ? options\n        .map((o, i) => <option key={\"option - \" + i}>{o}</option>) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={S.select_box}>\n            <select onChange={onChangeCallback} className={S.select} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport S from \"./MyRadioButton.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nexport const MyRadioButton: React.FC<SuperRadioPropsType> = props => {\n    const {type, name, options, value, onChange, onChangeOption, className, ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    const finalRadioStyle = `${S.radio_container} ${className}`\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i} className={finalRadioStyle}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                value={o}\n                name={name}\n                checked={o === value}\n                className={S.radio}\n                {...restProps}\n            />\n            <span className={S.fakeRadio}/>\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <div className={S.radio_box}>{mappedOptions}</div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./MyRange.module.css\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n    onChangeRange?: (value: number) => void\r\n    value?: number | number[]\r\n};\r\n\r\nexport const MyRange: React.FC<SuperRangePropsType> = props => {\r\n    const {onChangeRange, value} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\r\n        onChangeRange && onChangeRange(value as number);\r\n    }\r\n\r\n    return (\r\n        <div className={S.range}>\r\n            <Slider\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent} from \"react\";\nimport S from \"./MyRangeDouble.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRangeFirst?: (value: number) => void\n    onChangeRangeSecond?: (value: number) => void\n    value: [number, number]\n    disabled?: boolean\n    min?: number\n    max?: number\n    onClickHandler?: (e: ChangeEvent<{}>) => void\n}\n\nexport const MyDoubleRange: React.FC<SuperDoubleRangePropsType> = props => {\n    const {onChangeRangeFirst, onChangeRangeSecond, value, disabled, min, max, onClickHandler} = props\n    const onChangeDoubleRange = (value: [number, number]) => {\n        onChangeRangeFirst && onChangeRangeFirst(value[0])\n        onChangeRangeSecond && onChangeRangeSecond(value[1])\n    }\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeDoubleRange(value as [number, number])\n    }\n\n    function valuetext(value: number) {\n        return `${value}°C`;\n    }\n\n    return (\n        <div className={S.doubleRange}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n                disabled={disabled}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"auto\"\n                getAriaValueText={valuetext}\n                onClick={onClickHandler}\n            />\n        </div>\n    );\n}","import React, {useState} from \"react\";\r\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\r\nimport S from \"./SandBox.module.css\"\r\nimport {MyButton} from \"../MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../MyCheckbox/MyCheckbox\";\r\nimport {MyEditableSpan} from \"../MyEditableSpan/MyEditableSpan\";\r\nimport {MySelect} from \"../MySelect/MySelect\";\r\nimport {MyRadioButton} from \"../MyRadioButton/MyRadioButton\";\r\nimport {MyRange} from \"../Ranges/MyRange/MyRange\";\r\nimport {MyDoubleRange} from \"../Ranges/MyDoubleRange/MyDoubleRange\";\r\n\r\nexport const SandBox: React.FC = props => {\r\n    const options = [\"React\", \"Redux\", \"Typescript\"]\r\n    const [editLabel, setEditLabel] = useState<string>(\"Yooooooooo\")\r\n    const [select, setSelect] = useState<string>(options[0])\r\n    const [text, setText] = useState<string>('')\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [rangeStart, setRangeStart] = useState<number>(0)\r\n    const [rangeEnd, setRangeEnd] = useState<number>(100)\r\n\r\n    // const error = text ? '' : 'error'\r\n    const error = \"\"\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n    const myButtonCallback = () => {\r\n        alert(\"Здароукиииииииииииии!!\")\r\n    }\r\n    const checkboxTestCallback = () => {\r\n        alert(\"Value my checkbox: \" + check)\r\n    }\r\n\r\n    return (\r\n        <div className={S.sandBox_container}>\r\n            <div className={S.textInput_box}>\r\n                <span>Text Input</span>\r\n                <div>\r\n                    <MyTextInput\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        variant={\"light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.button_box}>\r\n                <span>My Button</span>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={myButtonCallback}\r\n                        variant={\"light\"}\r\n                    >Button</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.reactCheckbox_box}>\r\n                <span>My ReactCheckbox</span>\r\n                <div><MyCheckbox checked={check} onChangeChecked={setCheck}>Test Label</MyCheckbox></div>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={checkboxTestCallback}\r\n                        variant={\"dark\"}\r\n                    >Test</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.editableSpan_box}>\r\n                <span>My EditableSpan</span>\r\n                <div>\r\n                    <MyEditableSpan\r\n                        value={editLabel}\r\n                        onChangeText={setEditLabel}\r\n                        spanProps={{children: editLabel ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.mySelect_box}>\r\n                <span>My Select</span>\r\n                <div>\r\n                    <MySelect\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.radio_box}>\r\n                <span>My Radio Button</span>\r\n                <div>\r\n                    <MyRadioButton\r\n                        name={'radio'}\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.range}>\r\n                <span>My Ranges</span>\r\n                <div>\r\n                    <span>Start value: {rangeStart}</span>\r\n                    <span>End value: {rangeEnd}</span>\r\n                    <MyRange\r\n                        value={rangeStart}\r\n                        onChangeRange={setRangeStart}\r\n                    />\r\n                    <MyDoubleRange\r\n                        value={[rangeStart, rangeEnd]}\r\n                        onChangeRangeFirst={setRangeStart}\r\n                        onChangeRangeSecond={setRangeEnd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chakres.d0843979.png\";","export default __webpack_public_path__ + \"static/media/react.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/typescript.b6a67c48.svg\";","export default __webpack_public_path__ + \"static/media/redux.7704ea70.svg\";","export default __webpack_public_path__ + \"static/media/html5.10080bf9.svg\";","export default __webpack_public_path__ + \"static/media/css3.b0696b45.svg\";","export default __webpack_public_path__ + \"static/media/jest.05a3e041.png\";","import React from \"react\";\r\nimport S from \"./FrontEndMan.module.css\";\r\nimport chakres from \"../Images/chakres.png\";\r\nimport iconReact from \"../Images/react.svg\";\r\nimport iconTS from \"../Images/typescript.svg\";\r\nimport iconRedux from \"../Images/redux.svg\";\r\nimport iconHTML from \"../Images/html5.svg\";\r\nimport iconCSS from \"../Images/css3.svg\";\r\nimport iconJest from \"../Images/jest.png\";\r\n\r\nexport const FrontEndMan: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.chakres_box}>\r\n            <img className={S.chakres} src={chakres} alt=\"chakres\"/>\r\n            <div className={S.react}><img src={iconReact} alt=\"React\"/></div>\r\n            <div className={S.ts}><img src={iconTS} alt=\"TS\"/></div>\r\n            <div className={S.redux}><img src={iconRedux} alt=\"Redux\"/></div>\r\n            <div className={S.html5}><img src={iconHTML} alt=\"HTML\"/></div>\r\n            <div className={S.css3}><img src={iconCSS} alt=\"CSS\"/></div>\r\n            <div className={S.jest}><img src={iconJest} alt=\"Jest\"/></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Page404.module.css\"\r\nimport {FrontEndMan} from \"./FrontEndMan/FrontEndMan\";\r\n\r\ntype Page404PropsType = {}\r\n\r\nexport const Page404: React.FC<Page404PropsType> = props => {\r\n    return (\r\n        <div className={S.page404_box}>\r\n            <div className={S.man}>\r\n                <span>Error 404</span>\r\n                <FrontEndMan/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {ElementColorVariants} from \"../../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\n\r\nexport const createField = (name: string, value: string, error?: string | null,\r\n                            handler?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n                            variant?: ElementColorVariants, placeholder?: string, type?: string,\r\n                            blur?: (e: React.FocusEvent<any>) => void) => {\r\n\r\n    return (\r\n        <>\r\n            <MyTextInput\r\n                variant={variant}\r\n                placeholder={placeholder}\r\n                type={type}\r\n                onChange={handler}\r\n                name={name}\r\n                onBlur={blur}\r\n                value={value}\r\n                style={{minWidth: \"300px\"}}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/message.613ffddc.svg\";","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./RecoveryPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {RecoveryFormikErrorType} from \"./RecoveryContainer\";\r\nimport message from \"./message.svg\"\r\n\r\ntype RecoveryPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    status: RequestStatusType\r\n    errors: RecoveryFormikErrorType\r\n    isSand: boolean\r\n}\r\n\r\nexport const RecoveryPass: React.FC<RecoveryPassPropsType> = React.memo(props => {\r\n    const {submit, emailValue, changeHandler, status, errors, isSand} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                {!isSand\r\n                    ? <div>\r\n                        <h4>Recovery password</h4>\r\n                        <form onSubmit={submit}>\r\n                            <div className={Sc.fields}>\r\n                                {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\", \"text\")}\r\n                            </div>\r\n                            <span className={S.instruction}>\r\n                                Enter your email address and we will send you further instructions\r\n                            </span>\r\n                            <div className={S.button_box}>\r\n                                {status === \"loading\"\r\n                                    ? <CircularProgress/>\r\n                                    : <MyButton variant=\"purple\" type=\"submit\">Send Instructions</MyButton>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        <div className={Sc.link_box}>\r\n                            <span className={Sc.title}>Did you remember your password?</span>\r\n                            <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                        </div>\r\n                    </div>\r\n                    : <Message email={emailValue}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype MessagePropsType = {\r\n    email: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={S.message}>\r\n            <img src={message} alt=\"message\"/>\r\n            <h4>Check your Email</h4>\r\n            <span className={S.instruction}>\r\n                We’ve sent an Email with instructions to {props.email}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {RecoveryPass} from \"./RecoveryPass\";\r\nimport {useFormik} from \"formik\";\r\nimport {forgotPass} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\nexport type RecoveryFormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RecoveryContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isSand = useSelector<AppStoreType, boolean>(state => state.recovery.messageIsSand)\r\n    const dispatch = useDispatch()\r\n\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='https://dimakelek.github.io/friday13th/#/new-password/$token$'>link</a>\r\n            </div>`\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: \"\",\r\n            },\r\n            validate: (values) => {\r\n                const errors: RecoveryFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = \"Email is required\"\r\n                } else if (values.email.length < 11) {\r\n                    errors.email = \"Email should be more 10 symbols\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(forgotPass({email: values.email, from: \"kelek\", message}))\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <RecoveryPass\r\n            errors={formik.errors}\r\n            emailValue={formik.values.email}\r\n            submit={formik.handleSubmit}\r\n            status={status}\r\n            changeHandler={formik.handleChange}\r\n            isSand={isSand}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../Store/store\";\r\nimport {setAppStatus} from \"../../../Store/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\ntype ErrorSnackbarPropsType = {\r\n    error?: string\r\n}\r\nexport const ErrorSnackbar: React.FC<ErrorSnackbarPropsType> = props => {\r\n    const appError = useSelector<AppStoreType, string | null>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppStatus(\"idle\"))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={appError !== null || props.error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {appError || props.error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./NewPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {NewPassFormikErrorType} from \"./NewPassContainer\";\r\nimport {ErrorSnackbar} from \"../../../Common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\ntype NewPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    passwordValue: string\r\n    status: RequestStatusType\r\n    errors: NewPassFormikErrorType\r\n}\r\n\r\nexport const NewPass: React.FC<NewPassPropsType> = React.memo(props => {\r\n    const {submit, passwordValue, changeHandler, status, errors} = props\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Create new password</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                    </div>\r\n                    <span className={S.instruction}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </span>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton variant=\"purple\" type=\"submit\">Create new password</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Did you remember your password?</span>\r\n                    <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                </div>\r\n            </div>\r\n            {errors.token && <ErrorSnackbar error={errors.token}/>}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {NewPass} from \"./NewPass\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {recovery} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\n\r\nexport type NewPassFormikErrorType = {\r\n    password?: string\r\n    token?: string\r\n}\r\n\r\nexport const NewPassContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isRecovered = useSelector<AppStoreType, boolean>(state => state.recovery.passIsRecovered)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                password: \"\",\r\n                token: \"\"\r\n            },\r\n            validate: (values) => {\r\n                const errors: NewPassFormikErrorType = {};\r\n                if (!values.password) {\r\n                    errors.password = \"Password is required\"\r\n                } else if (values.password.length < 8) {\r\n                    errors.password = \"Password should be more 7 symbols\"\r\n                } else if(values.token === \"\") {\r\n                    errors.token = \"Recovery token is required\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(recovery({password: values.password, resetPasswordToken: token}))\r\n                formik.resetForm()\r\n            }\r\n        }\r\n    )\r\n\r\n    if(isRecovered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <NewPass\r\n            submit={formik.handleSubmit}\r\n            changeHandler={formik.handleChange}\r\n            passwordValue={formik.values.password}\r\n            status={status}\r\n            errors={formik.errors}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport S from \"./Link.module.css\";\r\n\r\ntype LinkType = {\r\n    path: string\r\n    icon: string\r\n    title: string\r\n}\r\n\r\nexport const Link: React.FC<LinkType> = props => {\r\n    const {path, icon, title} = props\r\n    return (\r\n        <div className={S.link}>\r\n            <NavLink to={`/app/${path}`} activeClassName={S.activeLink}>\r\n                <div>\r\n                    <img src={icon} alt={`${path}`}/>\r\n                    {title}\r\n                    <span className={S.line}/>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/decks.6b61c65f.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.c211f415.svg\";","import React from \"react\";\r\nimport S from \"./Header.module.css\";\r\nimport {Link} from \"./Link/Link\";\r\nimport decksIcon from \"../MainCommon/Icons/decks.svg\";\r\nimport profileIcon from \"../MainCommon/Icons/profileIcon.svg\";\r\n\r\nexport const Header: React.FC = props => {\r\n    return (\r\n        <div className={S.header_container}>\r\n            <div className={S.nav_container}>\r\n                <h2>It-incubator</h2>\r\n                <nav>\r\n                    <Link path={\"decks\"} icon={decksIcon} title={\"Decks List\"}/>\r\n                    <Link path={\"profile\"} icon={profileIcon} title={\"Profile\"}/>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {CardType, DeckType, GetDecksRequestDataType} from \"../../../../../Api/api\";\r\nimport {ShowDecksModeType} from \"../../../../../Store/decks-reducer\";\r\n\r\nexport type RenderDeckType = {\r\n    name: string\r\n    cards: number\r\n    lastUpdate: string\r\n    created: string\r\n    makerDeckID?: string\r\n    deckID?: string\r\n}\r\nexport const getDecksForUI = (decks: DeckType[] | null | undefined) => {\r\n    let decksForUI: RenderDeckType[] | null = null\r\n    if(decks) {\r\n        decksForUI = decks.map(d => {\r\n            const name = (function (name: string) {\r\n                let temp = name.split(\"\")\r\n                temp.splice(15)\r\n                return temp.join(\"\")\r\n            }(d.name))\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.updated))\r\n            const userName = (function (created: string) {\r\n                let temp = created.split(\"\")\r\n                if(temp.length > 15)\r\n                    temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.user_name))\r\n            return {\r\n                name: name,\r\n                cards: d.cardsCount,\r\n                lastUpdate: lastUpdate,\r\n                created: userName,\r\n                makerDeckID: d.user_id,\r\n                deckID: d._id\r\n            }\r\n        })\r\n    }\r\n    return decksForUI\r\n}\r\n\r\nexport type DataForRequest = GetDecksRequestDataType & {\r\n    filter: ShowDecksModeType\r\n}\r\n\r\nexport const getDecksRequestDC = (data: DataForRequest) => {\r\n    const {filter, max, min, pageNumber, user_id, packName} = data\r\n    return filter === \"My\"\r\n        ? {pageNumber, user_id, min, max, packName}\r\n        : {pageNumber, min, max, packName}\r\n}\r\n\r\nexport type RenderCardType = {\r\n    answer: string\r\n    question: string\r\n    lastUpdate: string\r\n    grade: number\r\n    cardID: string\r\n}\r\n\r\nexport const getCardsForUI = (cards: CardType[] | null) => {\r\n    let cardsForUI: RenderCardType[] | null = null\r\n    if(cards) {\r\n        cardsForUI = cards.map(c => {\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(c.updated))\r\n            return {\r\n                answer: c.answer,\r\n                question: c.question,\r\n                lastUpdate: lastUpdate,\r\n                grade: c.grade,\r\n                cardID: c._id\r\n            }\r\n        })\r\n    }\r\n    return cardsForUI\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    CreateDeckRequestData,\r\n    DeckResponseType,\r\n    decksAPI,\r\n    DeckType,\r\n    GetDecksRequestDataType,\r\n    UpdateDeckRequestData\r\n} from \"../Api/api\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {ThunkApiType} from \"./store\";\r\nimport {DataForRequest, getDecksRequestDC} from \"../Components/Feature/Main/MainCommon/utils/dataHandlers\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    decks: null as DeckType[] | null,\r\n    filter: \"All\" as ShowDecksModeType,\r\n    visiblePage: 1,\r\n    totalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    selectedDeckID: \"\",\r\n    minSelectedCardsCount: null as number | null,\r\n    maxSelectedCardsCount: null as number | null\r\n}\r\n\r\nexport const getDecks = createAsyncThunk<DeckResponseType, GetDecksRequestDataType, ThunkApiType>(\"decks/getDecks\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            const response = await decksAPI.getDecks(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const createDeck = createAsyncThunk<void, CreateDeckRequestData, ThunkApiType>(\"decks/createDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.createDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const removeDeck = createAsyncThunk<void, string, ThunkApiType>(\"decks/removeDeck\",\r\n    async (id, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.removeDeck(id)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const updateDeck = createAsyncThunk<void, UpdateDeckRequestData, ThunkApiType>(\"decks/updateDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.updateDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const decksSlice = createSlice({\r\n    name: \"decks\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeDecksFilter(state, action: PayloadAction<ShowDecksModeType>) {\r\n            state.filter = action.payload\r\n        },\r\n        changeVisibleDecksPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        },\r\n        setDeckID(state, action: PayloadAction<string>) {\r\n            state.selectedDeckID = action.payload\r\n        },\r\n        changeMinSelected(state, action: PayloadAction<number>) {\r\n            state.minSelectedCardsCount = action.payload\r\n        },\r\n        changeMaxSelected(state, action: PayloadAction<number>) {\r\n            state.maxSelectedCardsCount = action.payload\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getDecks.fulfilled, (state, action) => {\r\n            state.decks = action.payload.cardPacks\r\n            state.totalCount = action.payload.cardPacksTotalCount\r\n            state.minCardsCount = action.payload.minCardsCount\r\n            state.maxCardsCount = action.payload.maxCardsCount\r\n        })\r\n    }\r\n})\r\n\r\nexport const {changeDecksFilter, changeVisibleDecksPage,\r\n    setDeckID, changeMinSelected, changeMaxSelected} = decksSlice.actions\r\n\r\n\r\n// types\r\nexport type DecksStateType = typeof initialState\r\nexport type DecksActionsType = any\r\nexport type ShowDecksModeType = \"My\" | \"All\"\r\n","import React from \"react\";\r\nimport S from \"./TableHeader.module.css\";\r\nimport Sc from \"../Table.module.css\";\r\nimport {CallStyleType, CallType} from \"../Table\";\r\n\r\ntype TableHeaderPropsType = {\r\n    columns: CallType[]\r\n    callStyle: CallStyleType\r\n}\r\nexport const TableHeader: React.FC<TableHeaderPropsType> = props => {\r\n    const {columns} = props\r\n    const items = columns.map((c, i) => <div key={i} className={S.row}>{c.title}</div>)\r\n\r\n    return <div className={`${S.header} ${Sc.callStyle}`}>{items}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport S from \"./RowItem.module.css\";\r\nimport Sr from \"../TableHeader/TableHeader.module.css\"\r\nimport Sc from \"../Table.module.css\";\r\n\r\ntype RowItemType = {\r\n    cells: Array<string | number | boolean | ReactNode>\r\n    cellStyle: CallStyleType\r\n    index: number\r\n}\r\nexport const RowItem: React.FC<RowItemType> = props => {\r\n    const {cells, index} = props\r\n    const color = index === 0 || index % 2 !== 1 ? \"deckItemGray\" : \"deckItemWhite\"\r\n    const renderCells = cells.map((c, i) => <div key={i} className={Sr.row}>{c}</div>)\r\n\r\n    return <div className={`${S.rowItem} ${S[color]} ${Sc.callStyle}`}>{renderCells}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport S from \"./TableBody.module.css\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport {RowItem} from \"../RowItem/RowItem\";\r\n\r\ntype TableBodyPropsType = {\r\n    cellStyle: CallStyleType\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n}\r\nexport const TableBody: React.FC<TableBodyPropsType> = props => {\r\n    const {cellStyle, items} = props\r\n\r\n    const rowItems = items.map((item, i) => <RowItem key={i} cells={item} cellStyle={cellStyle} index={i}/>)\r\n    return <div className={S.body}>{rowItems}</div>\r\n}","import React from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\ntype PaginationPropsType = {\r\n    page: number\r\n    setPage?: (page: number) => void\r\n    totalCount: number\r\n}\r\nexport const PaginationControlled: React.FC<PaginationPropsType> = props => {\r\n    const {page, totalCount, setPage} = props\r\n\r\n    const count = Math.ceil(totalCount / 7)\r\n    const handleChange = (e: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage && setPage(value)\r\n    };\r\n\r\n    return <Pagination count={count} page={page} onChange={handleChange}/>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport S from \"./Table.module.css\";\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\nimport {TableBody} from \"./TableBody/TableBody\"\r\nimport {PaginationControlled} from \"./Pagination/Pagination\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport type CallType = {\r\n    title: string | React.ReactNode\r\n    width: string\r\n}\r\n\r\nexport type CallStyleType = {\r\n    display: string\r\n    gridTemplateColumns: string\r\n}\r\n\r\ntype TablePropsType = {\r\n    columns: CallType[]\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n    totalCount: number\r\n    visiblePage: number\r\n    setPage?: (page: number) => void\r\n}\r\n\r\nexport const Table: React.FC<TablePropsType> = props => {\r\n    const {columns, items, totalCount, visiblePage, setPage} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const cellStyle = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: columns.map(c => c.width).join(\" \")\r\n    }\r\n    return (\r\n        <div className={S.table}>\r\n            <div className={S.tableBody}>\r\n                <TableHeader columns={columns} callStyle={cellStyle}/>\r\n                {status === \"loading\"\r\n                    ? <div className={S.circular_box}><CircularProgress/></div>\r\n                    : <TableBody cellStyle={cellStyle} items={items}/>\r\n                }\r\n            </div>\r\n            <div className={S.pagination}>\r\n            {totalCount > 7 && <PaginationControlled page={visiblePage} totalCount={totalCount} setPage={setPage}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./Search.module.css\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../../Store/app-reducer\";\r\n\r\ntype SearchWithButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\r\n    onEnter?: () => void\r\n}\r\n\r\nexport const Search: React.FC<SearchWithButtonPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    return (\r\n        <div className={S.search_box}>\r\n            <MyTextInput\r\n                variant={\"light\"}\r\n                placeholder={\"Search...\"}\r\n                className={S.search}\r\n                disabled={status === \"loading\"}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {ThunkApiType} from \"./store\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {cardsAPI, GradeType} from \"../Api/api\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    entityStatus: \"loading\" as LearningStatus,\r\n    modeStart: false,\r\n    selectedCardID: \"\"\r\n}\r\n\r\nexport const updateRating = createAsyncThunk<void, GradeType, ThunkApiType>(\"learning/updateRating\",\r\n    async (grade, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.updateRating({card_id: getState().learning.selectedCardID, grade})\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport const learningSlice = createSlice({\r\n    name: \"learning\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeEntityStatus(state, action: PayloadAction<LearningStatus>) {\r\n            state.entityStatus = action.payload\r\n        },\r\n        setModeStart(state, action: PayloadAction<boolean>) {\r\n            state.modeStart = action.payload\r\n        },\r\n        setSelectedCardID(state, action: PayloadAction<string>) {\r\n            state.selectedCardID = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changeEntityStatus, setModeStart, setSelectedCardID} = learningSlice.actions\r\n\r\n// types\r\nexport type LearningActionsType = any\r\nexport type LearningStatus = \"idle\" | \"loading\" | \"failed\" | \"succeeded\"","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {removeDeck, setDeckID} from \"../../../../../Store/decks-reducer\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {setModeStart} from \"../../../../../Store/learning-reducer\";\r\nimport {DeckType} from \"../../../../../Api/api\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n    setEdit: (value: boolean) => void\r\n}\r\n\r\nexport const ActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID, setEdit} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const decks = useSelector<AppStoreType, DeckType[] | null>(state => state.decks.decks)\r\n    const dispatch = useDispatch()\r\n\r\n    let deck = decks && decks.find(d => d._id === deckID)\r\n\r\n    const deleteButtonHandler = useCallback(() => {\r\n        if (deckID) {\r\n            dispatch(removeDeck(deckID))\r\n        }\r\n    }, [dispatch, deckID])\r\n    const editButtonHandler = useCallback(() => {\r\n        setEdit(true)\r\n        dispatch(setDeckID(deckID ?? \"\"))\r\n    }, [setEdit, dispatch, deckID])\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID && <>\r\n                <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                <MyButton onClick={editButtonHandler} className={S.editButton} variant={\"standard\"}>Edit</MyButton>\r\n            </>\r\n            }\r\n            <NavLink to={`/app/learning/${deckID}`}>\r\n                <MyButton onClick={() => dispatch(setModeStart(false))}\r\n                          variant={\"purple\"} className={S.learnButton}\r\n                          disabled={deck?.cardsCount === 0}\r\n                >Learn</MyButton>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport S from \"./Modal.module.css\"\r\n\r\ntype ModalProps = {\r\n    closeModal: (value: boolean) => void\r\n    width?: string\r\n    height?: string\r\n    title?: string\r\n    prevMessage?: string\r\n    afterMessage?: string\r\n    data?: any\r\n}\r\n\r\nexport const MyModal: React.FC<ModalProps> = props => {\r\n    const {closeModal, width, height, title, prevMessage, afterMessage, children} = props\r\n\r\n    const styleSettings = {\r\n        width: width,\r\n        height: height,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={S.background} onClick={() => closeModal(false)}/>\r\n            <div className={S.modal} style={styleSettings}>\r\n                <div className={S.closeModal} onClick={() => closeModal(false)}>X</div>\r\n                <div className={S.modal_container}>\r\n                    {title && <h2>{title}</h2>}\r\n                    {prevMessage && <span className={S.prev}>{prevMessage}</span>}\r\n                    {children}\r\n                    {afterMessage && <span className={S.after}>{prevMessage}</span>}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {MyModal} from \"../Modal/MyModal\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {MyRadioButton} from \"../../../Common/MyRadioButton/MyRadioButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport S from \"./CommonModalDeckForm.module.css\"\r\nimport {DeckType} from \"../../../../Api/api\";\r\n\r\ntype errorsDeckForm = {\r\n    deckName?: string\r\n}\r\n\r\ntype Option = \"Public\" | \"Private\"\r\n\r\ntype CommonModalDeckFromProps = {\r\n    title: string\r\n    type: \"Add\" | \"Edit\"\r\n    setShow: (value: boolean) => void\r\n    submit: (name: string, privacy: boolean) => void\r\n}\r\n\r\nexport const CommonModalDeckForm: React.FC<CommonModalDeckFromProps> = props => {\r\n    const {setShow, type, title, submit} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const options: Option[] = [\"Public\", \"Private\"]\r\n    const decks = useSelector<AppStoreType, DeckType[] | null>(state => state.decks.decks)\r\n    const selectedDeckID = useSelector<AppStoreType, string>(state => state.decks.selectedDeckID)\r\n\r\n    let name: string = \"\"\r\n    decks && decks.forEach(d => {\r\n        if(d._id === selectedDeckID) {\r\n           name = d.name\r\n        }\r\n    })\r\n\r\n    const commonDeckForm = useFormik({\r\n        initialValues: {\r\n            deckName: type === \"Add\" ? \"\" : name,\r\n            privacy: \"Public\"\r\n        },\r\n        validate: values => {\r\n            const errors: errorsDeckForm = {}\r\n            if (!values.deckName) {\r\n                errors.deckName = \"Deck name is required!!\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            submit(values.deckName, values.privacy === \"Private\")\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MyModal closeModal={setShow} title=\"Add new Deck\" width=\"350px\" height=\"310px\">\r\n            <form onSubmit={commonDeckForm.handleSubmit} className={S.form}>\r\n                <MyTextInput\r\n                    {...commonDeckForm.getFieldProps(\"deckName\")}\r\n                    placeholder=\"Deck name ...\"\r\n                    style={{width: \"300px\"}}\r\n                    error={commonDeckForm.touched.deckName ? commonDeckForm.errors.deckName : null}\r\n                />\r\n                <div className={S.radio}>\r\n                    <MyRadioButton\r\n                        {...commonDeckForm.getFieldProps(\"privacy\")}\r\n                        options={options}\r\n                    />\r\n                </div>\r\n                {status === \"loading\"\r\n                    ? <CircularProgress/>\r\n                    : <div className={S.buttonBox}><MyButton variant=\"purple\" type=\"submit\">{title}</MyButton></div>\r\n                }\r\n            </form>\r\n        </MyModal>\r\n    )\r\n}","import React, {ChangeEvent, ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Decks.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {MyDoubleRange} from \"../../../Common/Ranges/MyDoubleRange/MyDoubleRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {\r\n    changeDecksFilter,\r\n    changeMaxSelected, changeMinSelected,\r\n    createDeck,\r\n    DecksStateType,\r\n    getDecks,\r\n    setDeckID, updateDeck\r\n} from \"../../../../Store/decks-reducer\";\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {DataForRequest, getDecksForUI, getDecksRequestDC} from \"../MainCommon/utils/dataHandlers\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {CreateDeckRequestData, UpdateDeckRequestData} from \"../../../../Api/api\";\r\nimport {RequestStatusType, setNeedUpdate} from \"../../../../Store/app-reducer\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {ActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {changeVisibleDecksPage} from \"../../../../Store/decks-reducer\";\r\nimport {CommonModalDeckForm} from \"../../ModalWindows/CommonModalDeckForm/CommonModalDeckFrom\";\r\n\r\nexport const Decks: React.FC = props => {\r\n    const decksState = useSelector<AppStoreType, DecksStateType>(state => state.decks)\r\n    const userID     = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status     = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const needUpdate = useSelector<AppStoreType, boolean>(state => state.app.needUpdate)\r\n    const dispatch   = useDispatch()\r\n\r\n    const {decks, filter, totalCount, visiblePage, minCardsCount, maxCardsCount, selectedDeckID} = decksState\r\n\r\n    const [minValue, setMinValue] = useState<number>(minCardsCount)\r\n    const [maxValue, setMaxValue] = useState<number>(maxCardsCount)\r\n    const [packName, setPackName] = useState<string>(\"\")\r\n    const [timeID, setTimeID] = useState<number | null>(null)\r\n    const [showAdd, setShowAdd]   = useState<boolean>(false)\r\n    const [showEdit, setShowEdit]   = useState<boolean>(false)\r\n\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            await dispatch(getDecks(requestData))\r\n            setTimeID(null)\r\n        }, 1000)\r\n        setTimeID(+id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (needUpdate && status !== \"loading\") {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            dispatch(getDecks(requestData))\r\n            dispatch(setNeedUpdate(false))\r\n        }\r\n    }, [needUpdate, status])\r\n    useEffect(() => {\r\n        if (timeID && status !== \"loading\") {\r\n            clearTimeout(timeID)\r\n            requestStart()\r\n        } else if (status !== \"loading\") {\r\n            requestStart()\r\n        } else {\r\n            dispatch(setNeedUpdate(true))\r\n        }\r\n    }, [filter, visiblePage, dispatch, minValue, maxValue, packName, userID])\r\n\r\n\r\n    // handlers\r\n    const myModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"My\"))\r\n    }, [dispatch])\r\n    const allModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"All\"))\r\n    }, [dispatch])\r\n    const visibleDecksPageHandler = useCallback((page: number) => {\r\n        dispatch(changeVisibleDecksPage(page))\r\n    }, [dispatch])\r\n    const setMinValueHandler = useCallback((value: number) => {\r\n        setMinValue(value)\r\n        dispatch(changeMinSelected(value))\r\n    }, [dispatch])\r\n    const setMaxValueHandler = useCallback((value: number) => {\r\n        setMaxValue(value)\r\n        dispatch(changeMaxSelected(value))\r\n    }, [dispatch])\r\n    const searchHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.target.value)\r\n    }, [])\r\n    const onCreateDeckClick = useCallback(() => {\r\n        setShowAdd(true)\r\n    }, [])\r\n\r\n    const createDeckHandler = useCallback(async (name: string, privacy: boolean) => {\r\n        let data: CreateDeckRequestData = {\r\n            cardsPack: {\r\n                name,\r\n                private: privacy\r\n            }\r\n        }\r\n        await dispatch(createDeck(data))\r\n        setShowAdd(false)\r\n    }, [dispatch])\r\n    const editDeckHandler = useCallback(async (name: string, privacy: boolean) => {\r\n        if (selectedDeckID) {\r\n            let data: UpdateDeckRequestData = {\r\n                cardsPack: {\r\n                    _id: selectedDeckID,\r\n                    name,\r\n                    private: privacy\r\n                }\r\n            }\r\n            await dispatch(updateDeck(data))\r\n        }\r\n        setShowEdit(false)\r\n    }, [dispatch, selectedDeckID])\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"name\", width: \"230px\"},\r\n        {title: \"count\", width: \"80px\"},\r\n        {title: \"last update\", width: \"120px\"},\r\n        {title: \"maker\", width: \"170px\"},\r\n        {title: \"actions\", width: \"220px\"},\r\n    ]\r\n    const rowItems: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getDecksForUI(decks)?.forEach(o => {\r\n        rowItems.push(\r\n            [<NavLink to={`/app/cards/${o.deckID}`}>{o.name}</NavLink>,\r\n                o.cards, o.lastUpdate, o.created,\r\n                <ActionsPanel makerDeckID={o.makerDeckID} deckID={o.deckID} setEdit={setShowEdit}/>\r\n            ]\r\n        )\r\n    })\r\n\r\n    const modeBlockStyle = `${S.onBlock} ${filter === \"My\" ? S.myMode : S.allMode}`\r\n    const disabled = timeID !== null\r\n        || (decks?.length === 0 && filter === \"My\")\r\n        || decks === null\r\n        || (minValue === 0 && maxValue === 0)\r\n    return (\r\n        <>\r\n            {showAdd && <CommonModalDeckForm title=\"Add new Deck\"\r\n                                             type=\"Add\"\r\n                                             setShow={setShowAdd}\r\n                                             submit={createDeckHandler}\r\n            />}\r\n            {showEdit && <CommonModalDeckForm title=\"Edit Deck\"\r\n                                              type=\"Edit\"\r\n                                              setShow={setShowEdit}\r\n                                              submit={editDeckHandler}\r\n            />}\r\n            <div className={Sc.workSpace}>\r\n                <div className={Sc.workSpace_container}>\r\n                    <div className={Sc.settings}>\r\n                        <div className={S.settings_container}>\r\n                            <h3>Show decks cards</h3>\r\n                            <div className={S.showDecks}>\r\n                                {status === \"loading\"\r\n                                    ? <div><CircularProgress/></div>\r\n                                    : <>\r\n                                        <div className={S.my} onClick={myModeHandler}>My</div>\r\n                                        <div className={S.all} onClick={allModeHandler}>All</div>\r\n                                        <div className={modeBlockStyle}>{filter}</div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <h3>Number of cards</h3>\r\n                            <div className={S.range}>\r\n                                <MyDoubleRange\r\n                                    value={[minValue, maxValue]}\r\n                                    min={minCardsCount}\r\n                                    max={maxCardsCount}\r\n                                    onChangeRangeFirst={setMinValueHandler}\r\n                                    onChangeRangeSecond={setMaxValueHandler}\r\n                                    disabled={disabled}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={Sc.list}>\r\n                        <div className={S.list_container}>\r\n                            <h2>Decks list</h2>\r\n                            <div className={S.search_container}>\r\n                                <Search onChange={searchHandler}/>\r\n                                <MyButton variant={\"standard\"} disabled={status === \"loading\"}\r\n                                          onClick={onCreateDeckClick}>Add new deck</MyButton>\r\n                            </div>\r\n                            <div className={S.table_container}><Table\r\n                                columns={columns}\r\n                                items={rowItems}\r\n                                totalCount={totalCount}\r\n                                visiblePage={visiblePage}\r\n                                setPage={visibleDecksPageHandler}\r\n                            /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    cardsAPI,\r\n    CardType,\r\n    CreateCardDataType,\r\n    GetCardsRequestDataType,\r\n    GetCardsResponseType,\r\n    UpdateCardRequestType\r\n} from \"../Api/api\"\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Feature/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {ThunkApiType} from \"./store\";\r\n\r\nconst initialState = {\r\n    cards: null as CardType[] | null,\r\n    cardsTotalCount: 0,\r\n    visiblePage: 1,\r\n    packUserId: \"\",\r\n    deckID: \"\",\r\n    selectedCardID: \"\"\r\n}\r\n\r\nexport const getCards = createAsyncThunk<GetCardsResponseType, GetCardsRequestDataType, ThunkApiType>(\"cards/getCards\",\r\n    async (data, {dispatch, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            const response = await cardsAPI.getCards(data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport type CreateCardData = {\r\n    data: CreateCardDataType\r\n    deckID: string\r\n}\r\n\r\nexport const createCard = createAsyncThunk<void, CreateCardData, ThunkApiType>(\"cards/createCard\",\r\n    async (params, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.createCard(params.data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport type RemoverCardData = {\r\n    cardID: string,\r\n    deckID: string\r\n}\r\n\r\nexport const removeCard = createAsyncThunk<void, RemoverCardData, ThunkApiType>(\"cards/removeCard\",\r\n    async (params, {dispatch, rejectWithValue, getState}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.removeCard(params.cardID)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\ntype UpdateCardDataType = {\r\n    data: UpdateCardRequestType,\r\n    deckID: string\r\n}\r\nexport const updateCard = createAsyncThunk<void, UpdateCardDataType, ThunkApiType>(\"cards/updateCard\",\r\n    async (params, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.updateCard(params.data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport const cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeVisibleCardPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        },\r\n        setSelectedCardID(state, action: PayloadAction<string>) {\r\n            state.selectedCardID = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getCards.fulfilled, (state, action) => {\r\n            state.cards = action.payload.cards\r\n            state.cardsTotalCount = action.payload.cardsTotalCount\r\n            state.visiblePage = action.payload.page\r\n            state.packUserId = action.payload.packUserId\r\n        })\r\n    }\r\n})\r\nexport const {changeVisibleCardPage, setSelectedCardID} = cardsSlice.actions\r\n\r\n// types\r\nexport type CardsStateType = typeof initialState\r\nexport type CardsActionsType = any","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {removeCard, setSelectedCardID} from \"../../../../../Store/cards-reducer\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n    cardID: string | undefined\r\n    setEdit: (value: boolean) => void\r\n}\r\n\r\nexport const CardActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID, cardID, setEdit} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteButtonHandler = useCallback(() => {\r\n        if(deckID && cardID) {\r\n            dispatch(removeCard({cardID, deckID}))\r\n        }\r\n    }, [dispatch, cardID, deckID])\r\n    const editButtonHandler = useCallback(() => {\r\n        dispatch(setSelectedCardID(cardID ?? \"\"))\r\n        setEdit(true)\r\n    }, [dispatch, setEdit, cardID])\r\n\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID ? <>\r\n                    <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                    <MyButton onClick={editButtonHandler} variant={\"standard\"}>Edit</MyButton></> :\r\n                <div>This is not your deck man</div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, KeyboardEvent, TextareaHTMLAttributes} from \"react\";\r\nimport S from \"./MyTextarea.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n\r\ntype MyTextareaProps = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n}\r\n\r\nexport const MyTextarea: React.FC<MyTextareaProps> = props => {\r\n    const {onChange, onKeyPress, className, error, onChangeText, onEnter, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n    const finalClassName = `${className} ${error && S.error} ${S.textarea}`\r\n\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={finalClassName}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                {...restProps}\r\n            />\r\n            <span className={S.errorMessage}>{error}</span>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {MyModal} from \"../Modal/MyModal\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyTextarea} from \"../../../Common/MyTextarea/MyTextarea\";\r\nimport S from \"./CommanModalFrom.module.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {CardType} from \"../../../../Api/api\";\r\n\r\ntype CommonModalCardFormProps = {\r\n    title: string\r\n    type: \"Add\" | \"Edit\"\r\n    setShow: (value: boolean) => void\r\n    submitForm: (question: string, answer: string,\r\n                 makerDeckID?: string | undefined, cardID?: string | undefined) => void\r\n}\r\ntype errorsFormType = {\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport const CommonModalCardForm: React.FC<CommonModalCardFormProps> = props => {\r\n    const {title, setShow, submitForm, type} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const cardID = useSelector<AppStoreType, string>(state => state.cards.selectedCardID)\r\n    const maker  = useSelector<AppStoreType, string>(state => state.cards.packUserId)\r\n    const cards  = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const qa: string[] = []\r\n    cards?.forEach(c => {\r\n        if(c._id === cardID) {\r\n            qa.push(c.question)\r\n            qa.push(c.answer)\r\n        }\r\n    })\r\n    const commonCardForm = useFormik({\r\n        initialValues: {\r\n            question: type === \"Add\" ? \"\" : qa[0],\r\n            answer: type === \"Add\" ? \"\" : qa[1]\r\n        },\r\n        validate: values => {\r\n            const errors: errorsFormType = {}\r\n            if(!values.question) {\r\n                errors.question = \"Question is required!\"\r\n            }\r\n            if(!values.answer) {\r\n                errors.answer = \"Answer is  required\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            if(type === \"Edit\") {\r\n                submitForm(values.question, values.answer, maker, cardID)\r\n            } else {\r\n                submitForm(values.question, values.answer)\r\n            }\r\n            commonCardForm.resetForm()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MyModal closeModal={() => setShow(false)}\r\n                 title={title} width=\"350px\" height=\"450px\"\r\n        >\r\n            <form onSubmit={commonCardForm.handleSubmit}>\r\n                <MyTextInput\r\n                    {...commonCardForm.getFieldProps(\"question\")}\r\n                    style={{width: \"300px\"}}\r\n                    placeholder=\"Question ...\"\r\n                    error={commonCardForm.touched.question ? commonCardForm.errors.question : null}\r\n                />\r\n                <MyTextarea\r\n                    {...commonCardForm.getFieldProps(\"answer\")}\r\n                    placeholder=\"Answer ...\"\r\n                    error={commonCardForm.touched.answer ? commonCardForm.errors.answer : null}\r\n                />\r\n                <div className={S.addCard}>\r\n                    {status === \"loading\"\r\n                        ? <CircularProgress/>\r\n                        : <MyButton variant=\"purple\" type=\"submit\">{title}</MyButton>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </MyModal>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/star.7d2e0e14.png\";","import React from \"react\";\r\nimport S from \"./Rating.module.css\"\r\nimport star from \"../star.png\"\r\n\r\ntype RatingProps = {\r\n    grade: number\r\n}\r\n\r\nexport const Rating: React.FC<RatingProps> = props => {\r\n    const {grade} = props\r\n\r\n    let stars = []\r\n    for(let i = 0; i < grade; i++) {\r\n        stars.push(<img key={i} src={star} alt=\"star\"/>)\r\n    }\r\n\r\n    return (\r\n        <div className={S.rating}>\r\n            <div className={S.star_container}>{stars.length === 0 ? \"No information\" : stars}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Cards.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {CardsStateType, changeVisibleCardPage, createCard, CreateCardData,\r\n    getCards, updateCard} from \"../../../../Store/cards-reducer\";\r\nimport {getCardsForUI} from \"../MainCommon/utils/dataHandlers\";\r\nimport {GetCardsRequestDataType, UpdateCardRequestType} from \"../../../../Api/api\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {CardActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\nimport {MyModal} from \"../../ModalWindows/Modal/MyModal\";\r\nimport {CommonModalCardForm} from \"../../ModalWindows/CommanModalCardFrom/CommanModalCardForm\";\r\nimport {Rating} from \"./Rating/Rating\";\r\n\r\n\r\nexport const Cards: React.FC = () => {\r\n    const cardsState = useSelector<AppStoreType, CardsStateType>(state => state.cards)\r\n    const userID     = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status     = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const {deckID}   = useParams<{deckID: string}>()\r\n    const dispatch   = useDispatch()\r\n    debugger\r\n    const {cards, cardsTotalCount, visiblePage, packUserId} = cardsState\r\n\r\n    const [question, setQuestion]     = useState<string>(\"\")\r\n    const [timeID, setTimeID]         = useState<number | null>(null)\r\n\r\n    const [answer, setAnswer]         = useState<string>(\"\")\r\n    const [showAnswer, setShowAnswer] = useState<boolean>(false)\r\n    const [showEdit, setShowEdit]     = useState<boolean>(false)\r\n    const [showAdd, setShowAdd]       = useState<boolean>(false)\r\n\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardQuestion: question,\r\n                cardsPack_id: deckID,\r\n                pageNumber: visiblePage\r\n            }\r\n            await dispatch(getCards(requestData))\r\n            setTimeID(null)\r\n        }, 500)\r\n        setTimeID(+id)\r\n    }\r\n    useEffect(() => {\r\n        if(deckID !== \"\") {\r\n            if (timeID) {\r\n                clearTimeout(timeID)\r\n                requestStart()\r\n            } else {\r\n                requestStart()\r\n            }\r\n        }\r\n    }, [deckID, visiblePage, question])\r\n\r\n    const visibleCardPageHandler = useCallback((page: number) => {\r\n        dispatch(changeVisibleCardPage(page))\r\n    }, [dispatch])\r\n    const searchHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.target.value)\r\n    }, [])\r\n    const addNewCardHandler = useCallback(() => {\r\n        setShowAdd(true)\r\n    }, [])\r\n    const showAnswerCallback = useCallback((answer: string) => {\r\n        setShowAnswer(true)\r\n        setAnswer(answer)\r\n    }, [])\r\n\r\n    const onAddCardClick = useCallback((question: string, answer: string) => {\r\n        const params: CreateCardData = {\r\n            data: {\r\n                question,\r\n                answer,\r\n                cardsPack_id: deckID,\r\n                grade: 0,\r\n                answerImg: \"\",\r\n                answerVideo: \"\",\r\n                questionImg: \"\",\r\n                questionVideo: \"\",\r\n                rating: 0,\r\n                shots: 0,\r\n                type: \"card\"\r\n            },\r\n            deckID\r\n        }\r\n        dispatch(createCard(params))\r\n        setShowAdd(false)\r\n    }, [deckID, dispatch])\r\n    const onEditCardClick = useCallback(async (question: string, answer: string,\r\n                                               makerDeckID: string | undefined, cardID: string | undefined) => {\r\n        if (userID === makerDeckID && deckID) {\r\n            let data: UpdateCardRequestType = {\r\n                _id: cardID ?? \"\",\r\n                question,\r\n                answer\r\n            }\r\n            await dispatch(updateCard({data, deckID}))\r\n        }\r\n        setShowEdit(false)\r\n    }, [dispatch, deckID, userID])\r\n\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"question\", width: \"2fr\"},\r\n        {title: \"Answer\", width: \"0.5fr\"},\r\n        {title: \"last update\", width: \"0.6fr\"},\r\n        {title: \"grade\", width: \"0.7fr\"},\r\n        {title: \"actions\", width: \"1fr\"},\r\n    ]\r\n    const rows: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getCardsForUI(cards)?.forEach(c => {\r\n        rows.push([c.question, <span onClick={() => showAnswerCallback(c.answer)} className={S.showAnswer}>Show</span>,\r\n            c.lastUpdate, <Rating grade={Math.floor(c.grade)}/>,\r\n            <CardActionsPanel setEdit={setShowEdit} makerDeckID={packUserId} deckID={deckID} cardID={c.cardID}/>\r\n        ])\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {showAdd && <CommonModalCardForm title={\"Add new Card\"}\r\n                                             setShow={setShowAdd}\r\n                                             submitForm={onAddCardClick}\r\n                                             type=\"Add\"\r\n            />}\r\n            {showEdit && <CommonModalCardForm title={\"Edit Card\"}\r\n                                              setShow={setShowEdit}\r\n                                              submitForm={onEditCardClick}\r\n                                              type=\"Edit\"\r\n            />}\r\n            {showAnswer && <MyModal closeModal={() => setShowAnswer(false)}\r\n                                    title={\"Answer for your question!!\"} width=\"350px\"><div>{answer}</div>\r\n            </MyModal>}\r\n\r\n\r\n            <div className={Sc.workSpace}>\r\n                <div className={Sc.workSpace_container}>\r\n                    <div className={S.cards}>\r\n                        <div className={S.title}>\r\n                            <NavLink to={\"/app/decks\"}>&#129044;</NavLink>\r\n                            <h2>Cards list</h2>\r\n                        </div>\r\n                        <div className={S.search}>\r\n                            <Search onChange={searchHandler}/>\r\n                            {userID === packUserId &&\r\n                            <MyButton onClick={addNewCardHandler} variant={\"standard\"}\r\n                                      disabled={status === \"loading\"}>Add New Card</MyButton>\r\n                            }\r\n                        </div>\r\n                        <div className={S.table_container}><Table\r\n                            columns={columns}\r\n                            items={rows}\r\n                            totalCount={cardsTotalCount}\r\n                            visiblePage={visiblePage}\r\n                            setPage={visibleCardPageHandler}\r\n                        /></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {logout, UserDataType} from \"../../../../Store/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = props => {\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(state => state.auth.userData)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    if(userData === null) {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <div className={Sc.workSpace}>\r\n            <div>\r\n                <h2>Profile page</h2>\r\n                <div>Welcome {userData.name}</div>\r\n                {status === \"loading\"\r\n                    ? <CircularProgress/>\r\n                    : <MyButton onClick={logoutHandler}>Log out</MyButton>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport S from \"./Card.module.css\"\r\nimport {CardType, GradeType} from \"../../../../../Api/api\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {setSelectedCardID, updateRating} from \"../../../../../Store/learning-reducer\";\r\nimport {RequestStatusType} from \"../../../../../Store/app-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\ntype CardProps = {\r\n    card: CardType | undefined\r\n    setCurrentCard: (card: CardType) => void\r\n    getNewCard: (cards: CardType[]) => CardType\r\n}\r\n\r\ntype RatingPanelDataType = {\r\n    title: string\r\n    grade: GradeType\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = props => {\r\n    const {card, getNewCard, setCurrentCard} = props\r\n    const cards = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const [rotated, setRotated] = useState<boolean>(false)\r\n    const [send, setSend] = useState<boolean>(false)\r\n\r\n    const onNextClick = useCallback(() => {\r\n        if (cards) {\r\n            setTimeout(() => {\r\n                setSend(false)\r\n                let selectedCard = getNewCard(cards)\r\n                setCurrentCard(selectedCard)\r\n                dispatch(setSelectedCardID(selectedCard._id))\r\n            }, 500)\r\n        }\r\n        setRotated(false)\r\n    }, [cards, getNewCard, setCurrentCard, dispatch])\r\n\r\n    const ratingRequestHandler = async (grade: GradeType) => {\r\n        await dispatch(updateRating(grade))\r\n        setSend(true)\r\n    }\r\n\r\n    const ratingPanelData: RatingPanelDataType[] = [\r\n        {title: \"Terrible\", grade: 1},\r\n        {title: \"Bad\", grade: 2},\r\n        {title: \"+ / -\", grade: 3},\r\n        {title: \"Good\", grade: 4},\r\n        {title: \"Excellent\", grade: 5}\r\n    ]\r\n    const ratingPanel = ratingPanelData.map((rp, i) => {\r\n        return <MyButton key={i}\r\n                         variant={\"standard\"}\r\n                         onClick={() => ratingRequestHandler(rp.grade)}\r\n        >{rp.title}</MyButton>\r\n    })\r\n    \r\n    return (\r\n        <div className={S.card}>\r\n            <div className={`${S.front} ${rotated && S.click}`} onClick={() => setRotated(true)}>\r\n                <h3>Question</h3>\r\n                <span>{card?.question}</span>\r\n                <img src={\"https://goo.su/5SAB\"} alt=\"kappa\"/>\r\n            </div>\r\n            <div className={`${S.back} ${rotated && S.click}`}>\r\n                <h3>Answer</h3>\r\n                <div className={S.answer_container}><p>{card?.answer}</p></div>\r\n                <div className={`${S.rating} ${send && S.send}`}>\r\n                    {!send \r\n                        ? (status === \"loading\" ? <div className={S.preloader}><CircularProgress/></div> : ratingPanel) \r\n                        : (<div className={S.success}>\r\n                                {status === \"succeeded\" ? \"Success bro!!\" : \"Something went wrong bro!!\"}\r\n                        </div>)\r\n                    }\r\n                </div>\r\n                <MyButton onClick={onNextClick}\r\n                          variant={\"purple\"}\r\n                          disabled={status === \"loading\"}\r\n                >Next</MyButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dimych.9dabc1b8.jpg\";","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Learning.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {changeEntityStatus, LearningStatus, setModeStart, setSelectedCardID} from \"../../../../Store/learning-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {getCards} from \"../../../../Store/cards-reducer\";\r\nimport {CardType, GetCardsRequestDataType} from \"../../../../Api/api\";\r\nimport {Card} from \"./Card/Card\";\r\nimport {MyModal} from \"../../ModalWindows/Modal/MyModal\";\r\nimport dimych from \"./dimych.jpg\"\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\n\r\ntype LearningModeProps = {}\r\n\r\nexport const LearningMode: React.FC<LearningModeProps> = React.memo(props => {\r\n    setTimeout(() => {\r\n        dispatch(changeEntityStatus(\"succeeded\"))\r\n    }, 1000)\r\n    const status = useSelector<AppStoreType, LearningStatus>(state => state.learning.entityStatus)\r\n    const modeStart = useSelector<AppStoreType, boolean>(state => state.learning.modeStart)\r\n    const cards = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const {deckID} = useParams<{ deckID: string }>()\r\n    const dispatch = useDispatch()\r\n\r\n    const [currentCard, setCurrentCard] = useState<CardType>({} as CardType)\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n\r\n    const getCard = useCallback((cards: CardType[]) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade)**2, 0)\r\n        const rand = Math.random() * sum\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade)**2\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }, {sum: 0, id: -1})\r\n        return cards[res.id + 1]\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const requestStart = () => {\r\n            setTimeout(() => {\r\n                let requestData: GetCardsRequestDataType = {\r\n                    cardsPack_id: deckID,\r\n                    pageNumber: 1\r\n                }\r\n                dispatch(getCards(requestData))\r\n            }, 500)\r\n        }\r\n        if (deckID !== undefined) {\r\n            requestStart()\r\n        }\r\n        return () => {\r\n            dispatch(setModeStart(false))\r\n        }\r\n    }, [dispatch, deckID])\r\n    useEffect(() => {\r\n        if (cards) {\r\n            let selectedCard = getCard(cards)\r\n            setCurrentCard(selectedCard)\r\n            dispatch(setSelectedCardID(selectedCard._id))\r\n        }\r\n    }, [modeStart, cards, dispatch, getCard])\r\n    const onStartClick = () => {\r\n        dispatch(changeEntityStatus(\"loading\"))\r\n        setTimeout(() => {\r\n            dispatch(changeEntityStatus(\"succeeded\"))\r\n            dispatch(setModeStart(true))\r\n        }, 1000)\r\n    }\r\n\r\n    const dimychHandler = () => {\r\n        dispatch(setSelectedCardID(\"\"))\r\n        dispatch(setModeStart(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showModal &&\r\n                <MyModal closeModal={setShowModal} width=\"320px\" height=\"400px\"\r\n                         title=\"Ну шо ты бро всё выучил уже?\">\r\n                   <div className={S.modal_container}>\r\n                       <img src={dimych} alt=\"dimych\"/>\r\n                   </div>\r\n                    <NavLink to={\"/app/decks\"}>\r\n                        <MyButton variant={\"purple\"} onClick={dimychHandler}>Летим 🚀</MyButton>\r\n                    </NavLink>\r\n                </MyModal>\r\n            }\r\n            <div className={S.learning}>\r\n                {status === \"loading\" ? <CircularProgress/>\r\n                    : <div className={S.workSpace}>\r\n                        <div className={S.workSpace_container}>\r\n                            {!modeStart\r\n                                ? <>\r\n                                    <h2>Welcome to learning mode with It-incubator bro!!</h2>\r\n                                    <div className={S.instruction}>\r\n                                        <p>In this mode you can to learn indefinitely with cards prepared by you or your\r\n                                            friends.</p>\r\n                                        <p>If you are ready then press start!!!</p>\r\n                                    </div>\r\n                                    <span className={S.start} onClick={onStartClick}>Start</span>\r\n                                </>\r\n                                : <Card\r\n                                    card={currentCard}\r\n                                    setCurrentCard={setCurrentCard}\r\n                                    getNewCard={getCard}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        {modeStart && <span className={S.exit} onClick={() => setShowModal(true)}>Exit</span>}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport S from \"./Main.module.css\"\r\nimport {Header} from \"./Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Decks} from \"./Decks/Decks\";\r\nimport {Cards} from \"./Cards/Cards\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {LearningMode} from \"./Learning/LearningMode\";\r\n\r\nexport const Main: React.FC = props => {\r\n    return (\r\n        <div className={S.main}>\r\n            <Header />\r\n            <div className={S.content}>\r\n                <HashRouter>\r\n                    <Route path={\"/app/profile\"} render={() => <Profile />}/>\r\n                    <Route path={\"/app/decks\"} render={() => <Decks />}/>\r\n                    <Route path={\"/app/cards/:deckID\"} render={() => <Cards />}/>\r\n                    <Route path={\"/app/learning/:deckID\"} render={() => <LearningMode />}/>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../Components/Feature/Authorization/Login/Login\";\r\nimport {Registration} from \"../Components/Feature/Authorization/Registration/Registration\";\r\nimport {SandBox} from \"../Components/Common/SandBox/SandBox\";\r\nimport {Page404} from \"../Components/Common/Page404/Page404\";\r\nimport {RecoveryContainer} from \"../Components/Feature/Authorization/RecoveryPass/RecoveryContainer\";\r\nimport {NewPassContainer} from \"../Components/Feature/Authorization/NewPass/NewPassContainer\";\r\nimport {Main} from \"../Components/Feature/Main/Main\";\r\n\r\nexport const Routes: React.FC<any> = props => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={\"/app/profile\"}/>}/>\r\n                <Route path={\"/app\"} render={() => <Main />}/>\r\n                <Route path={\"/login\"} render={() => <Login/>}/>\r\n                <Route path={\"/registration\"} render={() => <Registration/>}/>\r\n                <Route path={\"/recovery\"} render={() => <RecoveryContainer />}/>\r\n                <Route path={\"/new-password/:token\"} render={() => <NewPassContainer/>}/>\r\n                <Route path={\"/sand-box\"} render={() => <SandBox/>}/>\r\n                <Route path={\"/404\"} render={() => <Page404/>}/>\r\n                <Redirect from={\"*\"} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Routes} from \"./Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../Store/store\";\r\nimport {ErrorSnackbar} from \"../Components/Common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {RequestStatusType} from \"../Store/app-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {checkingAuthorization} from \"../Store/auth-reducer\";\r\n//раз два три\r\nexport const App: React.FC<any> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isInitialized = useSelector<AppStoreType, boolean>(state => state.app.isInitialized)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkingAuthorization())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '50%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            {status === \"failed\" && <ErrorSnackbar/>}\r\n            <HashRouter>\r\n                <Routes />\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n    name: \"profile\",\r\n    initialState: initialState,\r\n    reducers: {\r\n\r\n    }\r\n})\r\n\r\n// thunks\r\n\r\n// types\r\nexport type ProfileActionsType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {ProfileActionsType, profileSlice} from \"./profile-reducer\";\r\nimport {AuthActionsType, authSlice} from \"./auth-reducer\";\r\nimport {registerSlice, RegistrationActionsType} from \"./registration-reducer\";\r\nimport {RecoveryPassActionsType, recoverySlice} from \"./recovery-pass-reducer\";\r\nimport {AppActionsType, appSlice} from \"./app-reducer\";\r\nimport {decksSlice} from \"./decks-reducer\";\r\nimport {cardsSlice} from \"./cards-reducer\";\r\nimport {learningSlice} from \"./learning-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileSlice.reducer,\r\n    auth: authSlice.reducer,\r\n    registration: registerSlice.reducer,\r\n    recovery: recoverySlice.reducer,\r\n    app: appSlice.reducer,\r\n    decks: decksSlice.reducer,\r\n    cards: cardsSlice.reducer,\r\n    learning: learningSlice.reducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\n// types\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, AllAppActionsType>\r\nexport type AllAppActionsType =\r\n    ProfileActionsType\r\n    | AuthActionsType\r\n    | RegistrationActionsType\r\n    | RecoveryPassActionsType\r\n    | AppActionsType\r\nexport type AppDispatchType = typeof store.dispatch\r\nexport type ThunkApiType = {\r\n    dispatch: AppDispatchType,\r\n    state: AppStoreType,\r\n    rejectValue: string\r\n}\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}